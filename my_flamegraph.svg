<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="598" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="581.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="581.00"> </text><svg id="frames" x="10" width="1180" total_samples="3101"><g><title>basic_algorithms_and_data_structures_in_rust`&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.03%)</title><rect x="0.0000%" y="469" width="0.0322%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="0.0000%" y="453" width="0.0322%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.03%)</title><rect x="0.0000%" y="437" width="0.0322%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="0.0322%" y="357" width="0.0322%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2822%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="0.0322%" y="341" width="0.0322%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2822%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.03%)</title><rect x="0.0645%" y="293" width="0.0322%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3145%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="0.0967%" y="293" width="0.0322%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="0.3467%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::array::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T (1 samples, 0.03%)</title><rect x="0.5805%" y="277" width="0.0322%" height="15" fill="rgb(228,23,34)" fg:x="18" fg:w="1"/><text x="0.8305%" y="287.50"></text></g><g><title> N]&gt;::index_mut (1 samples, 0.03%)</title><rect x="0.5805%" y="261" width="0.0322%" height="15" fill="rgb(218,30,26)" fg:x="18" fg:w="1"/><text x="0.8305%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="0.5805%" y="245" width="0.0322%" height="15" fill="rgb(220,122,19)" fg:x="18" fg:w="1"/><text x="0.8305%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::core_arch::x86::avx2::_mm256_add_epi32 (6 samples, 0.19%)</title><rect x="0.6127%" y="277" width="0.1935%" height="15" fill="rgb(250,228,42)" fg:x="19" fg:w="6"/><text x="0.8627%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="0.7417%" y="261" width="0.0645%" height="15" fill="rgb(240,193,28)" fg:x="23" fg:w="2"/><text x="0.9917%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="0.7739%" y="245" width="0.0322%" height="15" fill="rgb(216,20,37)" fg:x="24" fg:w="1"/><text x="1.0239%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::core_arch::x86::avx2::_mm256_or_si256 (5 samples, 0.16%)</title><rect x="0.8062%" y="277" width="0.1612%" height="15" fill="rgb(206,188,39)" fg:x="25" fg:w="5"/><text x="1.0562%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="0.9674%" y="277" width="0.0645%" height="15" fill="rgb(217,207,13)" fg:x="30" fg:w="2"/><text x="1.2174%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="0.9997%" y="261" width="0.0322%" height="15" fill="rgb(231,73,38)" fg:x="31" fg:w="1"/><text x="1.2497%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.10%)</title><rect x="1.0319%" y="277" width="0.0967%" height="15" fill="rgb(225,20,46)" fg:x="32" fg:w="3"/><text x="1.2819%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::core_arch::x86::avx2::_mm256_slli_epi32 (3 samples, 0.10%)</title><rect x="1.1287%" y="277" width="0.0967%" height="15" fill="rgb(210,31,41)" fg:x="35" fg:w="3"/><text x="1.3787%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`rand_core::block::BlockRng&lt;R&gt;::generate_and_set (42 samples, 1.35%)</title><rect x="0.0645%" y="357" width="1.3544%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="42"/><text x="0.3145%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;rand::rngs::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (42 samples, 1.35%)</title><rect x="0.0645%" y="341" width="1.3544%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="42"/><text x="0.3145%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (42 samples, 1.35%)</title><rect x="0.0645%" y="325" width="1.3544%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="42"/><text x="0.3145%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`rand_chacha::guts::refill_wide (42 samples, 1.35%)</title><rect x="0.0645%" y="309" width="1.3544%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="42"/><text x="0.3145%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`rand_chacha::guts::refill_wide::impl_avx2 (40 samples, 1.29%)</title><rect x="0.1290%" y="293" width="1.2899%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="40"/><text x="0.3790%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::core_arch::x86::avx2::_mm256_xor_si256 (6 samples, 0.19%)</title><rect x="1.2254%" y="277" width="0.1935%" height="15" fill="rgb(247,18,42)" fg:x="38" fg:w="6"/><text x="1.4754%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="1.3866%" y="261" width="0.0322%" height="15" fill="rgb(241,131,45)" fg:x="43" fg:w="1"/><text x="1.6366%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::fill_bytes (44 samples, 1.42%)</title><rect x="0.0322%" y="405" width="1.4189%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="44"/><text x="0.2822%" y="415.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;rand::rngs::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::fill_bytes (44 samples, 1.42%)</title><rect x="0.0322%" y="389" width="1.4189%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="44"/><text x="0.2822%" y="399.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::fill_bytes (44 samples, 1.42%)</title><rect x="0.0322%" y="373" width="1.4189%" height="15" fill="rgb(238,160,17)" fg:x="1" fg:w="44"/><text x="0.2822%" y="383.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`rand_core::impls::fill_via_u32_chunks (1 samples, 0.03%)</title><rect x="1.4189%" y="357" width="0.0322%" height="15" fill="rgb(214,148,48)" fg:x="44" fg:w="1"/><text x="1.6689%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`rand_core::impls::fill_via_chunks (1 samples, 0.03%)</title><rect x="1.4189%" y="341" width="0.0322%" height="15" fill="rgb(232,36,49)" fg:x="44" fg:w="1"/><text x="1.6689%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min (1 samples, 0.03%)</title><rect x="1.4189%" y="325" width="0.0322%" height="15" fill="rgb(209,103,24)" fg:x="44" fg:w="1"/><text x="1.6689%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="1.4189%" y="309" width="0.0322%" height="15" fill="rgb(229,88,8)" fg:x="44" fg:w="1"/><text x="1.6689%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="1.4189%" y="293" width="0.0322%" height="15" fill="rgb(213,181,19)" fg:x="44" fg:w="1"/><text x="1.6689%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="1.4511%" y="405" width="0.0322%" height="15" fill="rgb(254,191,54)" fg:x="45" fg:w="1"/><text x="1.7011%" y="415.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le (1 samples, 0.03%)</title><rect x="1.4834%" y="293" width="0.0322%" height="15" fill="rgb(241,83,37)" fg:x="46" fg:w="1"/><text x="1.7334%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="1.4834%" y="277" width="0.0322%" height="15" fill="rgb(233,36,39)" fg:x="46" fg:w="1"/><text x="1.7334%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="1.4834%" y="261" width="0.0322%" height="15" fill="rgb(226,3,54)" fg:x="46" fg:w="1"/><text x="1.7334%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="1.4834%" y="245" width="0.0322%" height="15" fill="rgb(245,192,40)" fg:x="46" fg:w="1"/><text x="1.7334%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="1.4834%" y="229" width="0.0322%" height="15" fill="rgb(238,167,29)" fg:x="46" fg:w="1"/><text x="1.7334%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="1.4834%" y="213" width="0.0322%" height="15" fill="rgb(232,182,51)" fg:x="46" fg:w="1"/><text x="1.7334%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.03%)</title><rect x="1.4834%" y="197" width="0.0322%" height="15" fill="rgb(231,60,39)" fg:x="46" fg:w="1"/><text x="1.7334%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="1.5156%" y="277" width="0.0322%" height="15" fill="rgb(208,69,12)" fg:x="47" fg:w="1"/><text x="1.7656%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="1.5156%" y="261" width="0.0322%" height="15" fill="rgb(235,93,37)" fg:x="47" fg:w="1"/><text x="1.7656%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="1.5156%" y="245" width="0.0322%" height="15" fill="rgb(213,116,39)" fg:x="47" fg:w="1"/><text x="1.7656%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="1.5156%" y="229" width="0.0322%" height="15" fill="rgb(222,207,29)" fg:x="47" fg:w="1"/><text x="1.7656%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::store_le (2 samples, 0.06%)</title><rect x="1.5156%" y="293" width="0.0645%" height="15" fill="rgb(206,96,30)" fg:x="47" fg:w="2"/><text x="1.7656%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="1.5479%" y="277" width="0.0322%" height="15" fill="rgb(218,138,4)" fg:x="48" fg:w="1"/><text x="1.7979%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="1.5479%" y="261" width="0.0322%" height="15" fill="rgb(250,191,14)" fg:x="48" fg:w="1"/><text x="1.7979%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="1.5801%" y="293" width="0.0322%" height="15" fill="rgb(239,60,40)" fg:x="49" fg:w="1"/><text x="1.8301%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="1.5801%" y="277" width="0.0322%" height="15" fill="rgb(206,27,48)" fg:x="49" fg:w="1"/><text x="1.8301%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::Chunks&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="1.5801%" y="261" width="0.0322%" height="15" fill="rgb(225,35,8)" fg:x="49" fg:w="1"/><text x="1.8301%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="1.5801%" y="245" width="0.0322%" height="15" fill="rgb(250,213,24)" fg:x="49" fg:w="1"/><text x="1.8301%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (1 samples, 0.03%)</title><rect x="1.5801%" y="229" width="0.0322%" height="15" fill="rgb(247,123,22)" fg:x="49" fg:w="1"/><text x="1.8301%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (1 samples, 0.03%)</title><rect x="1.5801%" y="213" width="0.0322%" height="15" fill="rgb(231,138,38)" fg:x="49" fg:w="1"/><text x="1.8301%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (1 samples, 0.03%)</title><rect x="1.5801%" y="197" width="0.0322%" height="15" fill="rgb(231,145,46)" fg:x="49" fg:w="1"/><text x="1.8301%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="1.5801%" y="181" width="0.0322%" height="15" fill="rgb(251,118,11)" fg:x="49" fg:w="1"/><text x="1.8301%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaNode::new (5 samples, 0.16%)</title><rect x="1.4834%" y="373" width="0.1612%" height="15" fill="rgb(217,147,25)" fg:x="46" fg:w="5"/><text x="1.7334%" y="383.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::extend_from_bitslice (5 samples, 0.16%)</title><rect x="1.4834%" y="357" width="0.1612%" height="15" fill="rgb(247,81,37)" fg:x="46" fg:w="5"/><text x="1.7334%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::clone_from_bitslice (5 samples, 0.16%)</title><rect x="1.4834%" y="341" width="0.1612%" height="15" fill="rgb(209,12,38)" fg:x="46" fg:w="5"/><text x="1.7334%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::copy_from_bitslice (5 samples, 0.16%)</title><rect x="1.4834%" y="325" width="0.1612%" height="15" fill="rgb(227,1,9)" fg:x="46" fg:w="5"/><text x="1.7334%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_copy_from_bitslice (5 samples, 0.16%)</title><rect x="1.4834%" y="309" width="0.1612%" height="15" fill="rgb(248,47,43)" fg:x="46" fg:w="5"/><text x="1.7334%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as core::ops::bit::BitOrAssign&gt;::bitor_assign (1 samples, 0.03%)</title><rect x="1.6124%" y="293" width="0.0322%" height="15" fill="rgb(221,10,30)" fg:x="50" fg:w="1"/><text x="1.8624%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le::_{{closure}} (1 samples, 0.03%)</title><rect x="1.6446%" y="261" width="0.0322%" height="15" fill="rgb(210,229,1)" fg:x="51" fg:w="1"/><text x="1.8946%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::sign (1 samples, 0.03%)</title><rect x="1.6446%" y="245" width="0.0322%" height="15" fill="rgb(222,148,37)" fg:x="51" fg:w="1"/><text x="1.8946%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::is_unsigned (1 samples, 0.03%)</title><rect x="1.6446%" y="229" width="0.0322%" height="15" fill="rgb(234,67,33)" fg:x="51" fg:w="1"/><text x="1.8946%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::any::TypeId::of (1 samples, 0.03%)</title><rect x="1.6446%" y="213" width="0.0322%" height="15" fill="rgb(247,98,35)" fg:x="51" fg:w="1"/><text x="1.8946%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="1.6769%" y="261" width="0.0322%" height="15" fill="rgb(247,138,52)" fg:x="52" fg:w="1"/><text x="1.9269%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="1.6769%" y="245" width="0.0322%" height="15" fill="rgb(213,79,30)" fg:x="52" fg:w="1"/><text x="1.9269%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.03%)</title><rect x="1.6769%" y="229" width="0.0322%" height="15" fill="rgb(246,177,23)" fg:x="52" fg:w="1"/><text x="1.9269%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::get (1 samples, 0.03%)</title><rect x="1.7091%" y="261" width="0.0322%" height="15" fill="rgb(230,62,27)" fg:x="53" fg:w="1"/><text x="1.9591%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="1.7091%" y="245" width="0.0322%" height="15" fill="rgb(216,154,8)" fg:x="53" fg:w="1"/><text x="1.9591%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="1.7091%" y="229" width="0.0322%" height="15" fill="rgb(244,35,45)" fg:x="53" fg:w="1"/><text x="1.9591%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="1.7091%" y="213" width="0.0322%" height="15" fill="rgb(251,115,12)" fg:x="53" fg:w="1"/><text x="1.9591%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="1.7091%" y="197" width="0.0322%" height="15" fill="rgb(240,54,50)" fg:x="53" fg:w="1"/><text x="1.9591%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::maybe_shift_left (1 samples, 0.03%)</title><rect x="1.7414%" y="261" width="0.0322%" height="15" fill="rgb(233,84,52)" fg:x="54" fg:w="1"/><text x="1.9914%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as core::ops::bit::ShlAssign&gt;::shl_assign (1 samples, 0.03%)</title><rect x="1.7414%" y="245" width="0.0322%" height="15" fill="rgb(207,117,47)" fg:x="54" fg:w="1"/><text x="1.9914%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="1.7736%" y="261" width="0.0322%" height="15" fill="rgb(249,43,39)" fg:x="55" fg:w="1"/><text x="2.0236%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="1.7736%" y="245" width="0.0322%" height="15" fill="rgb(209,38,44)" fg:x="55" fg:w="1"/><text x="2.0236%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="1.7736%" y="229" width="0.0322%" height="15" fill="rgb(236,212,23)" fg:x="55" fg:w="1"/><text x="2.0236%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le (6 samples, 0.19%)</title><rect x="1.6446%" y="277" width="0.1935%" height="15" fill="rgb(242,79,21)" fg:x="51" fg:w="6"/><text x="1.8946%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="1.8059%" y="261" width="0.0322%" height="15" fill="rgb(211,96,35)" fg:x="56" fg:w="1"/><text x="2.0559%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="1.8059%" y="245" width="0.0322%" height="15" fill="rgb(253,215,40)" fg:x="56" fg:w="1"/><text x="2.0559%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="1.8381%" y="261" width="0.0322%" height="15" fill="rgb(211,81,21)" fg:x="57" fg:w="1"/><text x="2.0881%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="1.8381%" y="245" width="0.0322%" height="15" fill="rgb(208,190,38)" fg:x="57" fg:w="1"/><text x="2.0881%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="1.8381%" y="229" width="0.0322%" height="15" fill="rgb(235,213,38)" fg:x="57" fg:w="1"/><text x="2.0881%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="1.8381%" y="213" width="0.0322%" height="15" fill="rgb(237,122,38)" fg:x="57" fg:w="1"/><text x="2.0881%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="1.8704%" y="261" width="0.0322%" height="15" fill="rgb(244,218,35)" fg:x="58" fg:w="1"/><text x="2.1204%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="1.8704%" y="245" width="0.0322%" height="15" fill="rgb(240,68,47)" fg:x="58" fg:w="1"/><text x="2.1204%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::store_le (3 samples, 0.10%)</title><rect x="1.8381%" y="277" width="0.0967%" height="15" fill="rgb(210,16,53)" fg:x="57" fg:w="3"/><text x="2.0881%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain_mut (1 samples, 0.03%)</title><rect x="1.9026%" y="261" width="0.0322%" height="15" fill="rgb(235,124,12)" fg:x="59" fg:w="1"/><text x="2.1526%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="1.9026%" y="245" width="0.0322%" height="15" fill="rgb(224,169,11)" fg:x="59" fg:w="1"/><text x="2.1526%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::elements (1 samples, 0.03%)</title><rect x="1.9026%" y="229" width="0.0322%" height="15" fill="rgb(250,166,2)" fg:x="59" fg:w="1"/><text x="2.1526%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="1.9026%" y="213" width="0.0322%" height="15" fill="rgb(242,216,29)" fg:x="59" fg:w="1"/><text x="2.1526%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="1.9026%" y="197" width="0.0322%" height="15" fill="rgb(230,116,27)" fg:x="59" fg:w="1"/><text x="2.1526%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::clone_from_bitslice (10 samples, 0.32%)</title><rect x="1.6446%" y="325" width="0.3225%" height="15" fill="rgb(228,99,48)" fg:x="51" fg:w="10"/><text x="1.8946%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::copy_from_bitslice (10 samples, 0.32%)</title><rect x="1.6446%" y="309" width="0.3225%" height="15" fill="rgb(253,11,6)" fg:x="51" fg:w="10"/><text x="1.8946%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_copy_from_bitslice (10 samples, 0.32%)</title><rect x="1.6446%" y="293" width="0.3225%" height="15" fill="rgb(247,143,39)" fg:x="51" fg:w="10"/><text x="1.8946%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="1.9349%" y="277" width="0.0322%" height="15" fill="rgb(236,97,10)" fg:x="60" fg:w="1"/><text x="2.1849%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaNode::new (12 samples, 0.39%)</title><rect x="1.6446%" y="357" width="0.3870%" height="15" fill="rgb(233,208,19)" fg:x="51" fg:w="12"/><text x="1.8946%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::extend_from_bitslice (12 samples, 0.39%)</title><rect x="1.6446%" y="341" width="0.3870%" height="15" fill="rgb(216,164,2)" fg:x="51" fg:w="12"/><text x="1.8946%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::resize (2 samples, 0.06%)</title><rect x="1.9671%" y="325" width="0.0645%" height="15" fill="rgb(220,129,5)" fg:x="61" fg:w="2"/><text x="2.2171%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::reserve (2 samples, 0.06%)</title><rect x="1.9671%" y="309" width="0.0645%" height="15" fill="rgb(242,17,10)" fg:x="61" fg:w="2"/><text x="2.2171%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation (2 samples, 0.06%)</title><rect x="1.9671%" y="293" width="0.0645%" height="15" fill="rgb(242,107,0)" fg:x="61" fg:w="2"/><text x="2.2171%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::with_vec (2 samples, 0.06%)</title><rect x="1.9671%" y="277" width="0.0645%" height="15" fill="rgb(251,28,31)" fg:x="61" fg:w="2"/><text x="2.2171%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation::_{{closure}} (2 samples, 0.06%)</title><rect x="1.9671%" y="261" width="0.0645%" height="15" fill="rgb(233,223,10)" fg:x="61" fg:w="2"/><text x="2.2171%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::resize_with (2 samples, 0.06%)</title><rect x="1.9671%" y="245" width="0.0645%" height="15" fill="rgb(215,21,27)" fg:x="61" fg:w="2"/><text x="2.2171%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.06%)</title><rect x="1.9671%" y="229" width="0.0645%" height="15" fill="rgb(232,23,21)" fg:x="61" fg:w="2"/><text x="2.2171%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (2 samples, 0.06%)</title><rect x="1.9671%" y="213" width="0.0645%" height="15" fill="rgb(244,5,23)" fg:x="61" fg:w="2"/><text x="2.2171%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (2 samples, 0.06%)</title><rect x="1.9671%" y="197" width="0.0645%" height="15" fill="rgb(226,81,46)" fg:x="61" fg:w="2"/><text x="2.2171%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.06%)</title><rect x="1.9671%" y="181" width="0.0645%" height="15" fill="rgb(247,70,30)" fg:x="61" fg:w="2"/><text x="2.2171%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le::_{{closure}} (1 samples, 0.03%)</title><rect x="2.0316%" y="245" width="0.0322%" height="15" fill="rgb(212,68,19)" fg:x="63" fg:w="1"/><text x="2.2816%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::sign (1 samples, 0.03%)</title><rect x="2.0316%" y="229" width="0.0322%" height="15" fill="rgb(240,187,13)" fg:x="63" fg:w="1"/><text x="2.2816%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::is_unsigned (1 samples, 0.03%)</title><rect x="2.0316%" y="213" width="0.0322%" height="15" fill="rgb(223,113,26)" fg:x="63" fg:w="1"/><text x="2.2816%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::eq_types (1 samples, 0.03%)</title><rect x="2.0316%" y="197" width="0.0322%" height="15" fill="rgb(206,192,2)" fg:x="63" fg:w="1"/><text x="2.2816%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::any::TypeId::of (1 samples, 0.03%)</title><rect x="2.0316%" y="181" width="0.0322%" height="15" fill="rgb(241,108,4)" fg:x="63" fg:w="1"/><text x="2.2816%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="2.0639%" y="229" width="0.0967%" height="15" fill="rgb(247,173,49)" fg:x="64" fg:w="3"/><text x="2.3139%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.06%)</title><rect x="2.0961%" y="213" width="0.0645%" height="15" fill="rgb(224,114,35)" fg:x="65" fg:w="2"/><text x="2.3461%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.13%)</title><rect x="2.0639%" y="245" width="0.1290%" height="15" fill="rgb(245,159,27)" fg:x="64" fg:w="4"/><text x="2.3139%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="2.1606%" y="229" width="0.0322%" height="15" fill="rgb(245,172,44)" fg:x="67" fg:w="1"/><text x="2.4106%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="2.1606%" y="213" width="0.0322%" height="15" fill="rgb(236,23,11)" fg:x="67" fg:w="1"/><text x="2.4106%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::maybe_shift_left (1 samples, 0.03%)</title><rect x="2.1928%" y="245" width="0.0322%" height="15" fill="rgb(205,117,38)" fg:x="68" fg:w="1"/><text x="2.4428%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="2.1928%" y="229" width="0.0322%" height="15" fill="rgb(237,72,25)" fg:x="68" fg:w="1"/><text x="2.4428%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="2.1928%" y="213" width="0.0322%" height="15" fill="rgb(244,70,9)" fg:x="68" fg:w="1"/><text x="2.4428%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (2 samples, 0.06%)</title><rect x="2.2251%" y="245" width="0.0645%" height="15" fill="rgb(217,125,39)" fg:x="69" fg:w="2"/><text x="2.4751%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="2.2573%" y="229" width="0.0322%" height="15" fill="rgb(235,36,10)" fg:x="70" fg:w="1"/><text x="2.5073%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="2.2573%" y="213" width="0.0322%" height="15" fill="rgb(251,123,47)" fg:x="70" fg:w="1"/><text x="2.5073%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="2.2573%" y="197" width="0.0322%" height="15" fill="rgb(221,13,13)" fg:x="70" fg:w="1"/><text x="2.5073%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::mask (1 samples, 0.03%)</title><rect x="2.2896%" y="197" width="0.0322%" height="15" fill="rgb(238,131,9)" fg:x="71" fg:w="1"/><text x="2.5396%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::PartialElement&lt;M,T,O&gt;::new (2 samples, 0.06%)</title><rect x="2.3218%" y="197" width="0.0645%" height="15" fill="rgb(211,50,8)" fg:x="72" fg:w="2"/><text x="2.5718%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::mask (2 samples, 0.06%)</title><rect x="2.3218%" y="181" width="0.0645%" height="15" fill="rgb(245,182,24)" fg:x="72" fg:w="2"/><text x="2.5718%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="2.3541%" y="165" width="0.0322%" height="15" fill="rgb(242,14,37)" fg:x="73" fg:w="1"/><text x="2.6041%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le (12 samples, 0.39%)</title><rect x="2.0316%" y="261" width="0.3870%" height="15" fill="rgb(246,228,12)" fg:x="63" fg:w="12"/><text x="2.2816%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain (4 samples, 0.13%)</title><rect x="2.2896%" y="245" width="0.1290%" height="15" fill="rgb(213,55,15)" fg:x="71" fg:w="4"/><text x="2.5396%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (4 samples, 0.13%)</title><rect x="2.2896%" y="229" width="0.1290%" height="15" fill="rgb(209,9,3)" fg:x="71" fg:w="4"/><text x="2.5396%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::major (4 samples, 0.13%)</title><rect x="2.2896%" y="213" width="0.1290%" height="15" fill="rgb(230,59,30)" fg:x="71" fg:w="4"/><text x="2.5396%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::add (1 samples, 0.03%)</title><rect x="2.3863%" y="197" width="0.0322%" height="15" fill="rgb(209,121,21)" fg:x="74" fg:w="1"/><text x="2.6363%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::add::_{{closure}} (1 samples, 0.03%)</title><rect x="2.3863%" y="181" width="0.0322%" height="15" fill="rgb(220,109,13)" fg:x="74" fg:w="1"/><text x="2.6363%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::check (1 samples, 0.03%)</title><rect x="2.4508%" y="245" width="0.0322%" height="15" fill="rgb(232,18,1)" fg:x="76" fg:w="1"/><text x="2.7008%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.03%)</title><rect x="2.4508%" y="229" width="0.0322%" height="15" fill="rgb(215,41,42)" fg:x="76" fg:w="1"/><text x="2.7008%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::range::RangeBounds::contains (1 samples, 0.03%)</title><rect x="2.4508%" y="213" width="0.0322%" height="15" fill="rgb(224,123,36)" fg:x="76" fg:w="1"/><text x="2.7008%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (3 samples, 0.10%)</title><rect x="2.4831%" y="245" width="0.0967%" height="15" fill="rgb(240,125,3)" fg:x="77" fg:w="3"/><text x="2.7331%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (2 samples, 0.06%)</title><rect x="2.5153%" y="229" width="0.0645%" height="15" fill="rgb(205,98,50)" fg:x="78" fg:w="2"/><text x="2.7653%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (2 samples, 0.06%)</title><rect x="2.5153%" y="213" width="0.0645%" height="15" fill="rgb(205,185,37)" fg:x="78" fg:w="2"/><text x="2.7653%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (2 samples, 0.06%)</title><rect x="2.5153%" y="197" width="0.0645%" height="15" fill="rgb(238,207,15)" fg:x="78" fg:w="2"/><text x="2.7653%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="2.5798%" y="213" width="0.0322%" height="15" fill="rgb(213,199,42)" fg:x="80" fg:w="1"/><text x="2.8298%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt; as core::convert::From&lt;&amp;mut bitvec::slice::BitSlice&lt;T,O&gt;&gt;&gt;::from (1 samples, 0.03%)</title><rect x="2.5798%" y="197" width="0.0322%" height="15" fill="rgb(235,201,11)" fg:x="80" fg:w="1"/><text x="2.8298%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::from_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="2.5798%" y="181" width="0.0322%" height="15" fill="rgb(207,46,11)" fg:x="80" fg:w="1"/><text x="2.8298%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="2.5798%" y="165" width="0.0322%" height="15" fill="rgb(241,35,35)" fg:x="80" fg:w="1"/><text x="2.8298%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (3 samples, 0.10%)</title><rect x="2.5798%" y="229" width="0.0967%" height="15" fill="rgb(243,32,47)" fg:x="80" fg:w="3"/><text x="2.8298%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::spanning (2 samples, 0.06%)</title><rect x="2.6121%" y="213" width="0.0645%" height="15" fill="rgb(247,202,23)" fg:x="81" fg:w="2"/><text x="2.8621%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::cast (2 samples, 0.06%)</title><rect x="2.6121%" y="197" width="0.0645%" height="15" fill="rgb(219,102,11)" fg:x="81" fg:w="2"/><text x="2.8621%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (2 samples, 0.06%)</title><rect x="2.6121%" y="181" width="0.0645%" height="15" fill="rgb(243,110,44)" fg:x="81" fg:w="2"/><text x="2.8621%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::store_le (9 samples, 0.29%)</title><rect x="2.4186%" y="261" width="0.2902%" height="15" fill="rgb(222,74,54)" fg:x="75" fg:w="9"/><text x="2.6686%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain_mut (4 samples, 0.13%)</title><rect x="2.5798%" y="245" width="0.1290%" height="15" fill="rgb(216,99,12)" fg:x="80" fg:w="4"/><text x="2.8298%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (1 samples, 0.03%)</title><rect x="2.6766%" y="229" width="0.0322%" height="15" fill="rgb(226,22,26)" fg:x="83" fg:w="1"/><text x="2.9266%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::Chunks&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="2.7088%" y="229" width="0.0322%" height="15" fill="rgb(217,163,10)" fg:x="84" fg:w="1"/><text x="2.9588%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="2.7088%" y="213" width="0.0322%" height="15" fill="rgb(213,25,53)" fg:x="84" fg:w="1"/><text x="2.9588%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="2.7088%" y="197" width="0.0322%" height="15" fill="rgb(252,105,26)" fg:x="84" fg:w="1"/><text x="2.9588%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut (1 samples, 0.03%)</title><rect x="2.7411%" y="181" width="0.0322%" height="15" fill="rgb(220,39,43)" fg:x="85" fg:w="1"/><text x="2.9911%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitptr (1 samples, 0.03%)</title><rect x="2.7411%" y="165" width="0.0322%" height="15" fill="rgb(229,68,48)" fg:x="85" fg:w="1"/><text x="2.9911%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (1 samples, 0.03%)</title><rect x="2.7411%" y="149" width="0.0322%" height="15" fill="rgb(252,8,32)" fg:x="85" fg:w="1"/><text x="2.9911%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="2.7411%" y="133" width="0.0322%" height="15" fill="rgb(223,20,43)" fg:x="85" fg:w="1"/><text x="2.9911%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMut&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="2.7411%" y="213" width="0.0645%" height="15" fill="rgb(229,81,49)" fg:x="85" fg:w="2"/><text x="2.9911%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut_noalias (2 samples, 0.06%)</title><rect x="2.7411%" y="197" width="0.0645%" height="15" fill="rgb(236,28,36)" fg:x="85" fg:w="2"/><text x="2.9911%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::unalias_mut (1 samples, 0.03%)</title><rect x="2.7733%" y="181" width="0.0322%" height="15" fill="rgb(249,185,26)" fg:x="86" fg:w="1"/><text x="3.0233%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="2.7733%" y="165" width="0.0322%" height="15" fill="rgb(249,174,33)" fg:x="86" fg:w="1"/><text x="3.0233%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="2.7733%" y="149" width="0.0322%" height="15" fill="rgb(233,201,37)" fg:x="86" fg:w="1"/><text x="3.0233%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="2.7733%" y="133" width="0.0322%" height="15" fill="rgb(221,78,26)" fg:x="86" fg:w="1"/><text x="3.0233%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="2.7733%" y="117" width="0.0322%" height="15" fill="rgb(250,127,30)" fg:x="86" fg:w="1"/><text x="3.0233%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="2.8055%" y="165" width="0.0322%" height="15" fill="rgb(230,49,44)" fg:x="87" fg:w="1"/><text x="3.0555%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="2.8055%" y="149" width="0.0322%" height="15" fill="rgb(229,67,23)" fg:x="87" fg:w="1"/><text x="3.0555%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="2.8055%" y="133" width="0.0322%" height="15" fill="rgb(249,83,47)" fg:x="87" fg:w="1"/><text x="3.0555%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="2.8055%" y="117" width="0.0322%" height="15" fill="rgb(215,43,3)" fg:x="87" fg:w="1"/><text x="3.0555%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::clone_from_bitslice (26 samples, 0.84%)</title><rect x="2.0316%" y="309" width="0.8384%" height="15" fill="rgb(238,154,13)" fg:x="63" fg:w="26"/><text x="2.2816%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::copy_from_bitslice (26 samples, 0.84%)</title><rect x="2.0316%" y="293" width="0.8384%" height="15" fill="rgb(219,56,2)" fg:x="63" fg:w="26"/><text x="2.2816%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_copy_from_bitslice (26 samples, 0.84%)</title><rect x="2.0316%" y="277" width="0.8384%" height="15" fill="rgb(233,0,4)" fg:x="63" fg:w="26"/><text x="2.2816%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.16%)</title><rect x="2.7088%" y="261" width="0.1612%" height="15" fill="rgb(235,30,7)" fg:x="84" fg:w="5"/><text x="2.9588%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (5 samples, 0.16%)</title><rect x="2.7088%" y="245" width="0.1612%" height="15" fill="rgb(250,79,13)" fg:x="84" fg:w="5"/><text x="2.9588%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMutNoAlias&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.13%)</title><rect x="2.7411%" y="229" width="0.1290%" height="15" fill="rgb(211,146,34)" fg:x="85" fg:w="4"/><text x="2.9911%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::map (2 samples, 0.06%)</title><rect x="2.8055%" y="213" width="0.0645%" height="15" fill="rgb(228,22,38)" fg:x="87" fg:w="2"/><text x="3.0555%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMutNoAlias&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (2 samples, 0.06%)</title><rect x="2.8055%" y="197" width="0.0645%" height="15" fill="rgb(235,168,5)" fg:x="87" fg:w="2"/><text x="3.0555%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::unalias_mut (2 samples, 0.06%)</title><rect x="2.8055%" y="181" width="0.0645%" height="15" fill="rgb(221,155,16)" fg:x="87" fg:w="2"/><text x="3.0555%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (1 samples, 0.03%)</title><rect x="2.8378%" y="165" width="0.0322%" height="15" fill="rgb(215,215,53)" fg:x="88" fg:w="1"/><text x="3.0878%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::from_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="2.8378%" y="149" width="0.0322%" height="15" fill="rgb(223,4,10)" fg:x="88" fg:w="1"/><text x="3.0878%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="2.8378%" y="133" width="0.0322%" height="15" fill="rgb(234,103,6)" fg:x="88" fg:w="1"/><text x="3.0878%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="2.8378%" y="117" width="0.0322%" height="15" fill="rgb(227,97,0)" fg:x="88" fg:w="1"/><text x="3.0878%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::fill (1 samples, 0.03%)</title><rect x="2.8700%" y="293" width="0.0322%" height="15" fill="rgb(234,150,53)" fg:x="89" fg:w="1"/><text x="3.1200%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="2.8700%" y="277" width="0.0322%" height="15" fill="rgb(228,201,54)" fg:x="89" fg:w="1"/><text x="3.1200%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaNode::new (29 samples, 0.94%)</title><rect x="2.0316%" y="341" width="0.9352%" height="15" fill="rgb(222,22,37)" fg:x="63" fg:w="29"/><text x="2.2816%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::extend_from_bitslice (29 samples, 0.94%)</title><rect x="2.0316%" y="325" width="0.9352%" height="15" fill="rgb(237,53,32)" fg:x="63" fg:w="29"/><text x="2.2816%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::resize (3 samples, 0.10%)</title><rect x="2.8700%" y="309" width="0.0967%" height="15" fill="rgb(233,25,53)" fg:x="89" fg:w="3"/><text x="3.1200%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::reserve (2 samples, 0.06%)</title><rect x="2.9023%" y="293" width="0.0645%" height="15" fill="rgb(210,40,34)" fg:x="90" fg:w="2"/><text x="3.1523%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation (2 samples, 0.06%)</title><rect x="2.9023%" y="277" width="0.0645%" height="15" fill="rgb(241,220,44)" fg:x="90" fg:w="2"/><text x="3.1523%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::with_vec (2 samples, 0.06%)</title><rect x="2.9023%" y="261" width="0.0645%" height="15" fill="rgb(235,28,35)" fg:x="90" fg:w="2"/><text x="3.1523%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation::_{{closure}} (2 samples, 0.06%)</title><rect x="2.9023%" y="245" width="0.0645%" height="15" fill="rgb(210,56,17)" fg:x="90" fg:w="2"/><text x="3.1523%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::resize_with (2 samples, 0.06%)</title><rect x="2.9023%" y="229" width="0.0645%" height="15" fill="rgb(224,130,29)" fg:x="90" fg:w="2"/><text x="3.1523%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.06%)</title><rect x="2.9023%" y="213" width="0.0645%" height="15" fill="rgb(235,212,8)" fg:x="90" fg:w="2"/><text x="3.1523%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (2 samples, 0.06%)</title><rect x="2.9023%" y="197" width="0.0645%" height="15" fill="rgb(223,33,50)" fg:x="90" fg:w="2"/><text x="3.1523%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (2 samples, 0.06%)</title><rect x="2.9023%" y="181" width="0.0645%" height="15" fill="rgb(219,149,13)" fg:x="90" fg:w="2"/><text x="3.1523%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.06%)</title><rect x="2.9023%" y="165" width="0.0645%" height="15" fill="rgb(250,156,29)" fg:x="90" fg:w="2"/><text x="3.1523%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (1 samples, 0.03%)</title><rect x="2.9345%" y="149" width="0.0322%" height="15" fill="rgb(216,193,19)" fg:x="91" fg:w="1"/><text x="3.1845%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.03%)</title><rect x="2.9345%" y="133" width="0.0322%" height="15" fill="rgb(216,135,14)" fg:x="91" fg:w="1"/><text x="3.1845%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="2.9668%" y="261" width="0.0322%" height="15" fill="rgb(241,47,5)" fg:x="92" fg:w="1"/><text x="3.2168%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="2.9668%" y="245" width="0.0322%" height="15" fill="rgb(233,42,35)" fg:x="92" fg:w="1"/><text x="3.2168%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le::_{{closure}} (5 samples, 0.16%)</title><rect x="3.0635%" y="229" width="0.1612%" height="15" fill="rgb(231,13,6)" fg:x="95" fg:w="5"/><text x="3.3135%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::sign (5 samples, 0.16%)</title><rect x="3.0635%" y="213" width="0.1612%" height="15" fill="rgb(207,181,40)" fg:x="95" fg:w="5"/><text x="3.3135%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::is_unsigned (5 samples, 0.16%)</title><rect x="3.0635%" y="197" width="0.1612%" height="15" fill="rgb(254,173,49)" fg:x="95" fg:w="5"/><text x="3.3135%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::eq_types (5 samples, 0.16%)</title><rect x="3.0635%" y="181" width="0.1612%" height="15" fill="rgb(221,1,38)" fg:x="95" fg:w="5"/><text x="3.3135%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (4 samples, 0.13%)</title><rect x="3.0958%" y="165" width="0.1290%" height="15" fill="rgb(206,124,46)" fg:x="96" fg:w="4"/><text x="3.3458%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="3.2248%" y="229" width="0.0645%" height="15" fill="rgb(249,21,11)" fg:x="100" fg:w="2"/><text x="3.4748%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="3.2570%" y="213" width="0.0322%" height="15" fill="rgb(222,201,40)" fg:x="101" fg:w="1"/><text x="3.5070%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::check (1 samples, 0.03%)</title><rect x="3.2893%" y="229" width="0.0322%" height="15" fill="rgb(235,61,29)" fg:x="102" fg:w="1"/><text x="3.5393%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.03%)</title><rect x="3.2893%" y="213" width="0.0322%" height="15" fill="rgb(219,207,3)" fg:x="102" fg:w="1"/><text x="3.5393%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (1 samples, 0.03%)</title><rect x="3.2893%" y="197" width="0.0322%" height="15" fill="rgb(222,56,46)" fg:x="102" fg:w="1"/><text x="3.5393%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::get (1 samples, 0.03%)</title><rect x="3.3215%" y="229" width="0.0322%" height="15" fill="rgb(239,76,54)" fg:x="103" fg:w="1"/><text x="3.5715%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="3.3215%" y="213" width="0.0322%" height="15" fill="rgb(231,124,27)" fg:x="103" fg:w="1"/><text x="3.5715%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="3.3215%" y="197" width="0.0322%" height="15" fill="rgb(249,195,6)" fg:x="103" fg:w="1"/><text x="3.5715%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="3.3215%" y="181" width="0.0322%" height="15" fill="rgb(237,174,47)" fg:x="103" fg:w="1"/><text x="3.5715%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="3.3215%" y="165" width="0.0322%" height="15" fill="rgb(206,201,31)" fg:x="103" fg:w="1"/><text x="3.5715%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as core::ops::bit::ShlAssign&gt;::shl_assign (2 samples, 0.06%)</title><rect x="3.3538%" y="213" width="0.0645%" height="15" fill="rgb(231,57,52)" fg:x="104" fg:w="2"/><text x="3.6038%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::maybe_shift_left (4 samples, 0.13%)</title><rect x="3.3538%" y="229" width="0.1290%" height="15" fill="rgb(248,177,22)" fg:x="104" fg:w="4"/><text x="3.6038%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (2 samples, 0.06%)</title><rect x="3.4183%" y="213" width="0.0645%" height="15" fill="rgb(215,211,37)" fg:x="106" fg:w="2"/><text x="3.6683%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (2 samples, 0.06%)</title><rect x="3.4183%" y="197" width="0.0645%" height="15" fill="rgb(241,128,51)" fg:x="106" fg:w="2"/><text x="3.6683%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="3.4827%" y="229" width="0.0322%" height="15" fill="rgb(227,165,31)" fg:x="108" fg:w="1"/><text x="3.7327%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="3.5150%" y="197" width="0.0322%" height="15" fill="rgb(228,167,24)" fg:x="109" fg:w="1"/><text x="3.7650%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt; as core::convert::From&lt;&amp;bitvec::slice::BitSlice&lt;T,O&gt;&gt;&gt;::from (1 samples, 0.03%)</title><rect x="3.5150%" y="181" width="0.0322%" height="15" fill="rgb(228,143,12)" fg:x="109" fg:w="1"/><text x="3.7650%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="3.5150%" y="165" width="0.0322%" height="15" fill="rgb(249,149,8)" fg:x="109" fg:w="1"/><text x="3.7650%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::PartialElement&lt;M,T,O&gt;::new (4 samples, 0.13%)</title><rect x="3.5472%" y="181" width="0.1290%" height="15" fill="rgb(243,35,44)" fg:x="110" fg:w="4"/><text x="3.7972%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::mask (3 samples, 0.10%)</title><rect x="3.5795%" y="165" width="0.0967%" height="15" fill="rgb(246,89,9)" fg:x="111" fg:w="3"/><text x="3.8295%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="3.6440%" y="149" width="0.0322%" height="15" fill="rgb(233,213,13)" fg:x="113" fg:w="1"/><text x="3.8940%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="3.6440%" y="133" width="0.0322%" height="15" fill="rgb(233,141,41)" fg:x="113" fg:w="1"/><text x="3.8940%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.03%)</title><rect x="3.6762%" y="181" width="0.0322%" height="15" fill="rgb(239,167,4)" fg:x="114" fg:w="1"/><text x="3.9262%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::major (6 samples, 0.19%)</title><rect x="3.5472%" y="197" width="0.1935%" height="15" fill="rgb(209,217,16)" fg:x="110" fg:w="6"/><text x="3.7972%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::add (1 samples, 0.03%)</title><rect x="3.7085%" y="181" width="0.0322%" height="15" fill="rgb(219,88,35)" fg:x="115" fg:w="1"/><text x="3.9585%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="3.7085%" y="165" width="0.0322%" height="15" fill="rgb(220,193,23)" fg:x="115" fg:w="1"/><text x="3.9585%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::elements (2 samples, 0.06%)</title><rect x="3.7407%" y="197" width="0.0645%" height="15" fill="rgb(230,90,52)" fg:x="116" fg:w="2"/><text x="3.9907%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::elts (2 samples, 0.06%)</title><rect x="3.7407%" y="181" width="0.0645%" height="15" fill="rgb(252,106,19)" fg:x="116" fg:w="2"/><text x="3.9907%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="3.7730%" y="165" width="0.0322%" height="15" fill="rgb(206,74,20)" fg:x="117" fg:w="1"/><text x="4.0230%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain (10 samples, 0.32%)</title><rect x="3.5150%" y="229" width="0.3225%" height="15" fill="rgb(230,138,44)" fg:x="109" fg:w="10"/><text x="3.7650%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (10 samples, 0.32%)</title><rect x="3.5150%" y="213" width="0.3225%" height="15" fill="rgb(235,182,43)" fg:x="109" fg:w="10"/><text x="3.7650%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::tail (1 samples, 0.03%)</title><rect x="3.8052%" y="197" width="0.0322%" height="15" fill="rgb(242,16,51)" fg:x="118" fg:w="1"/><text x="4.0552%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitEnd&lt;R&gt;::span (1 samples, 0.03%)</title><rect x="3.8052%" y="181" width="0.0322%" height="15" fill="rgb(248,9,4)" fg:x="118" fg:w="1"/><text x="4.0552%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le (27 samples, 0.87%)</title><rect x="2.9990%" y="245" width="0.8707%" height="15" fill="rgb(210,31,22)" fg:x="93" fg:w="27"/><text x="3.2490%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::map (1 samples, 0.03%)</title><rect x="3.8375%" y="229" width="0.0322%" height="15" fill="rgb(239,54,39)" fg:x="119" fg:w="1"/><text x="4.0875%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="3.8697%" y="229" width="0.0322%" height="15" fill="rgb(230,99,41)" fg:x="120" fg:w="1"/><text x="4.1197%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::maybe_shift_right (3 samples, 0.10%)</title><rect x="3.9020%" y="229" width="0.0967%" height="15" fill="rgb(253,106,12)" fg:x="121" fg:w="3"/><text x="4.1520%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (2 samples, 0.06%)</title><rect x="3.9342%" y="213" width="0.0645%" height="15" fill="rgb(213,46,41)" fg:x="122" fg:w="2"/><text x="4.1842%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (2 samples, 0.06%)</title><rect x="3.9342%" y="197" width="0.0645%" height="15" fill="rgb(215,133,35)" fg:x="122" fg:w="2"/><text x="4.1842%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (5 samples, 0.16%)</title><rect x="3.9987%" y="197" width="0.1612%" height="15" fill="rgb(213,28,5)" fg:x="124" fg:w="5"/><text x="4.2487%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (4 samples, 0.13%)</title><rect x="4.0310%" y="181" width="0.1290%" height="15" fill="rgb(215,77,49)" fg:x="125" fg:w="4"/><text x="4.2810%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="4.1277%" y="165" width="0.0322%" height="15" fill="rgb(248,100,22)" fg:x="128" fg:w="1"/><text x="4.3777%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.03%)</title><rect x="4.1277%" y="149" width="0.0322%" height="15" fill="rgb(208,67,9)" fg:x="128" fg:w="1"/><text x="4.3777%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (6 samples, 0.19%)</title><rect x="3.9987%" y="229" width="0.1935%" height="15" fill="rgb(219,133,21)" fg:x="124" fg:w="6"/><text x="4.2487%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (6 samples, 0.19%)</title><rect x="3.9987%" y="213" width="0.1935%" height="15" fill="rgb(246,46,29)" fg:x="124" fg:w="6"/><text x="4.2487%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="4.1599%" y="197" width="0.0322%" height="15" fill="rgb(246,185,52)" fg:x="129" fg:w="1"/><text x="4.4099%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="4.1922%" y="229" width="0.0322%" height="15" fill="rgb(252,136,11)" fg:x="130" fg:w="1"/><text x="4.4422%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="4.1922%" y="213" width="0.0322%" height="15" fill="rgb(219,138,53)" fg:x="130" fg:w="1"/><text x="4.4422%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain_mut (1 samples, 0.03%)</title><rect x="4.2244%" y="229" width="0.0322%" height="15" fill="rgb(211,51,23)" fg:x="131" fg:w="1"/><text x="4.4744%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="4.2244%" y="213" width="0.0322%" height="15" fill="rgb(247,221,28)" fg:x="131" fg:w="1"/><text x="4.4744%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::elements (1 samples, 0.03%)</title><rect x="4.2244%" y="197" width="0.0322%" height="15" fill="rgb(251,222,45)" fg:x="131" fg:w="1"/><text x="4.4744%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="4.2244%" y="181" width="0.0322%" height="15" fill="rgb(217,162,53)" fg:x="131" fg:w="1"/><text x="4.4744%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::store_le (13 samples, 0.42%)</title><rect x="3.8697%" y="245" width="0.4192%" height="15" fill="rgb(229,93,14)" fg:x="120" fg:w="13"/><text x="4.1197%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="4.2567%" y="229" width="0.0322%" height="15" fill="rgb(209,67,49)" fg:x="132" fg:w="1"/><text x="4.5067%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="4.2567%" y="213" width="0.0322%" height="15" fill="rgb(213,87,29)" fg:x="132" fg:w="1"/><text x="4.5067%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="4.2567%" y="197" width="0.0322%" height="15" fill="rgb(205,151,52)" fg:x="132" fg:w="1"/><text x="4.5067%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (1 samples, 0.03%)</title><rect x="4.2889%" y="197" width="0.0322%" height="15" fill="rgb(253,215,39)" fg:x="133" fg:w="1"/><text x="4.5389%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="4.3212%" y="197" width="0.0322%" height="15" fill="rgb(221,220,41)" fg:x="134" fg:w="1"/><text x="4.5712%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (1 samples, 0.03%)</title><rect x="4.3212%" y="181" width="0.0322%" height="15" fill="rgb(218,133,21)" fg:x="134" fg:w="1"/><text x="4.5712%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (1 samples, 0.03%)</title><rect x="4.3212%" y="165" width="0.0322%" height="15" fill="rgb(221,193,43)" fg:x="134" fg:w="1"/><text x="4.5712%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (1 samples, 0.03%)</title><rect x="4.3212%" y="149" width="0.0322%" height="15" fill="rgb(240,128,52)" fg:x="134" fg:w="1"/><text x="4.5712%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="4.3212%" y="133" width="0.0322%" height="15" fill="rgb(253,114,12)" fg:x="134" fg:w="1"/><text x="4.5712%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="4.3212%" y="117" width="0.0322%" height="15" fill="rgb(215,223,47)" fg:x="134" fg:w="1"/><text x="4.5712%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="4.3212%" y="101" width="0.0322%" height="15" fill="rgb(248,225,23)" fg:x="134" fg:w="1"/><text x="4.5712%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::Chunks&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="4.2889%" y="213" width="0.0967%" height="15" fill="rgb(250,108,0)" fg:x="133" fg:w="3"/><text x="4.5389%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="4.3534%" y="197" width="0.0322%" height="15" fill="rgb(228,208,7)" fg:x="135" fg:w="1"/><text x="4.6034%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="4.3534%" y="181" width="0.0322%" height="15" fill="rgb(244,45,10)" fg:x="135" fg:w="1"/><text x="4.6034%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="4.3534%" y="165" width="0.0322%" height="15" fill="rgb(207,125,25)" fg:x="135" fg:w="1"/><text x="4.6034%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (1 samples, 0.03%)</title><rect x="4.4179%" y="149" width="0.0322%" height="15" fill="rgb(210,195,18)" fg:x="137" fg:w="1"/><text x="4.6679%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (1 samples, 0.03%)</title><rect x="4.4179%" y="133" width="0.0322%" height="15" fill="rgb(249,80,12)" fg:x="137" fg:w="1"/><text x="4.6679%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (1 samples, 0.03%)</title><rect x="4.4179%" y="117" width="0.0322%" height="15" fill="rgb(221,65,9)" fg:x="137" fg:w="1"/><text x="4.6679%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::span_unchecked (1 samples, 0.03%)</title><rect x="4.4502%" y="149" width="0.0322%" height="15" fill="rgb(235,49,36)" fg:x="138" fg:w="1"/><text x="4.7002%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="4.4502%" y="133" width="0.0322%" height="15" fill="rgb(225,32,20)" fg:x="138" fg:w="1"/><text x="4.7002%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="4.4824%" y="149" width="0.0322%" height="15" fill="rgb(215,141,46)" fg:x="139" fg:w="1"/><text x="4.7324%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::alias_mut (1 samples, 0.03%)</title><rect x="4.5147%" y="149" width="0.0322%" height="15" fill="rgb(250,160,47)" fg:x="140" fg:w="1"/><text x="4.7647%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (1 samples, 0.03%)</title><rect x="4.5147%" y="133" width="0.0322%" height="15" fill="rgb(216,222,40)" fg:x="140" fg:w="1"/><text x="4.7647%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::from_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="4.5147%" y="117" width="0.0322%" height="15" fill="rgb(234,217,39)" fg:x="140" fg:w="1"/><text x="4.7647%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="4.5147%" y="101" width="0.0322%" height="15" fill="rgb(207,178,40)" fg:x="140" fg:w="1"/><text x="4.7647%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="4.5147%" y="85" width="0.0322%" height="15" fill="rgb(221,136,13)" fg:x="140" fg:w="1"/><text x="4.7647%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut (5 samples, 0.16%)</title><rect x="4.4179%" y="165" width="0.1612%" height="15" fill="rgb(249,199,10)" fg:x="137" fg:w="5"/><text x="4.6679%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="4.5469%" y="149" width="0.0322%" height="15" fill="rgb(249,222,13)" fg:x="141" fg:w="1"/><text x="4.7969%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="4.5469%" y="133" width="0.0322%" height="15" fill="rgb(244,185,38)" fg:x="141" fg:w="1"/><text x="4.7969%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="4.5469%" y="117" width="0.0322%" height="15" fill="rgb(236,202,9)" fg:x="141" fg:w="1"/><text x="4.7969%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.03%)</title><rect x="4.5792%" y="101" width="0.0322%" height="15" fill="rgb(250,229,37)" fg:x="142" fg:w="1"/><text x="4.8292%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::clone_from_bitslice (52 samples, 1.68%)</title><rect x="2.9668%" y="293" width="1.6769%" height="15" fill="rgb(206,174,23)" fg:x="92" fg:w="52"/><text x="3.2168%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::copy_from_bitslice (52 samples, 1.68%)</title><rect x="2.9668%" y="277" width="1.6769%" height="15" fill="rgb(211,33,43)" fg:x="92" fg:w="52"/><text x="3.2168%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_copy_from_bitslice (51 samples, 1.64%)</title><rect x="2.9990%" y="261" width="1.6446%" height="15" fill="rgb(245,58,50)" fg:x="93" fg:w="51"/><text x="3.2490%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.35%)</title><rect x="4.2889%" y="245" width="0.3547%" height="15" fill="rgb(244,68,36)" fg:x="133" fg:w="11"/><text x="4.5389%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (11 samples, 0.35%)</title><rect x="4.2889%" y="229" width="0.3547%" height="15" fill="rgb(232,229,15)" fg:x="133" fg:w="11"/><text x="4.5389%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMutNoAlias&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.26%)</title><rect x="4.3857%" y="213" width="0.2580%" height="15" fill="rgb(254,30,23)" fg:x="136" fg:w="8"/><text x="4.6357%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMut&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.26%)</title><rect x="4.3857%" y="197" width="0.2580%" height="15" fill="rgb(235,160,14)" fg:x="136" fg:w="8"/><text x="4.6357%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut_noalias (8 samples, 0.26%)</title><rect x="4.3857%" y="181" width="0.2580%" height="15" fill="rgb(212,155,44)" fg:x="136" fg:w="8"/><text x="4.6357%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::unalias_mut (2 samples, 0.06%)</title><rect x="4.5792%" y="165" width="0.0645%" height="15" fill="rgb(226,2,50)" fg:x="142" fg:w="2"/><text x="4.8292%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (2 samples, 0.06%)</title><rect x="4.5792%" y="149" width="0.0645%" height="15" fill="rgb(234,177,6)" fg:x="142" fg:w="2"/><text x="4.8292%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::from_bitslice_ptr_mut (2 samples, 0.06%)</title><rect x="4.5792%" y="133" width="0.0645%" height="15" fill="rgb(217,24,9)" fg:x="142" fg:w="2"/><text x="4.8292%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (2 samples, 0.06%)</title><rect x="4.5792%" y="117" width="0.0645%" height="15" fill="rgb(220,13,46)" fg:x="142" fg:w="2"/><text x="4.8292%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="4.6114%" y="101" width="0.0322%" height="15" fill="rgb(239,221,27)" fg:x="143" fg:w="1"/><text x="4.8614%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaNode::new (53 samples, 1.71%)</title><rect x="2.9668%" y="325" width="1.7091%" height="15" fill="rgb(222,198,25)" fg:x="92" fg:w="53"/><text x="3.2168%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::extend_from_bitslice (53 samples, 1.71%)</title><rect x="2.9668%" y="309" width="1.7091%" height="15" fill="rgb(211,99,13)" fg:x="92" fg:w="53"/><text x="3.2168%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::resize (1 samples, 0.03%)</title><rect x="4.6437%" y="293" width="0.0322%" height="15" fill="rgb(232,111,31)" fg:x="144" fg:w="1"/><text x="4.8937%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::reserve (1 samples, 0.03%)</title><rect x="4.6437%" y="277" width="0.0322%" height="15" fill="rgb(245,82,37)" fg:x="144" fg:w="1"/><text x="4.8937%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation (1 samples, 0.03%)</title><rect x="4.6437%" y="261" width="0.0322%" height="15" fill="rgb(227,149,46)" fg:x="144" fg:w="1"/><text x="4.8937%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::with_vec (1 samples, 0.03%)</title><rect x="4.6437%" y="245" width="0.0322%" height="15" fill="rgb(218,36,50)" fg:x="144" fg:w="1"/><text x="4.8937%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation::_{{closure}} (1 samples, 0.03%)</title><rect x="4.6437%" y="229" width="0.0322%" height="15" fill="rgb(226,80,48)" fg:x="144" fg:w="1"/><text x="4.8937%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::resize_with (1 samples, 0.03%)</title><rect x="4.6437%" y="213" width="0.0322%" height="15" fill="rgb(238,224,15)" fg:x="144" fg:w="1"/><text x="4.8937%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.03%)</title><rect x="4.6437%" y="197" width="0.0322%" height="15" fill="rgb(241,136,10)" fg:x="144" fg:w="1"/><text x="4.8937%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.03%)</title><rect x="4.6437%" y="181" width="0.0322%" height="15" fill="rgb(208,32,45)" fg:x="144" fg:w="1"/><text x="4.8937%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (1 samples, 0.03%)</title><rect x="4.6437%" y="165" width="0.0322%" height="15" fill="rgb(207,135,9)" fg:x="144" fg:w="1"/><text x="4.8937%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="4.6437%" y="149" width="0.0322%" height="15" fill="rgb(206,86,44)" fg:x="144" fg:w="1"/><text x="4.8937%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="4.6759%" y="245" width="0.0322%" height="15" fill="rgb(245,177,15)" fg:x="145" fg:w="1"/><text x="4.9259%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le::_{{closure}} (3 samples, 0.10%)</title><rect x="4.7082%" y="213" width="0.0967%" height="15" fill="rgb(206,64,50)" fg:x="146" fg:w="3"/><text x="4.9582%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::sign (3 samples, 0.10%)</title><rect x="4.7082%" y="197" width="0.0967%" height="15" fill="rgb(234,36,40)" fg:x="146" fg:w="3"/><text x="4.9582%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::is_unsigned (3 samples, 0.10%)</title><rect x="4.7082%" y="181" width="0.0967%" height="15" fill="rgb(213,64,8)" fg:x="146" fg:w="3"/><text x="4.9582%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::eq_types (3 samples, 0.10%)</title><rect x="4.7082%" y="165" width="0.0967%" height="15" fill="rgb(210,75,36)" fg:x="146" fg:w="3"/><text x="4.9582%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="4.7727%" y="149" width="0.0322%" height="15" fill="rgb(229,88,21)" fg:x="148" fg:w="1"/><text x="5.0227%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.13%)</title><rect x="4.8371%" y="197" width="0.1290%" height="15" fill="rgb(252,204,47)" fg:x="150" fg:w="4"/><text x="5.0871%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.10%)</title><rect x="4.8694%" y="181" width="0.0967%" height="15" fill="rgb(208,77,27)" fg:x="151" fg:w="3"/><text x="5.1194%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.29%)</title><rect x="4.8049%" y="213" width="0.2902%" height="15" fill="rgb(221,76,26)" fg:x="149" fg:w="9"/><text x="5.0549%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.13%)</title><rect x="4.9661%" y="197" width="0.1290%" height="15" fill="rgb(225,139,18)" fg:x="154" fg:w="4"/><text x="5.2161%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (2 samples, 0.06%)</title><rect x="5.0306%" y="181" width="0.0645%" height="15" fill="rgb(230,137,11)" fg:x="156" fg:w="2"/><text x="5.2806%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::maybe_shift_left (2 samples, 0.06%)</title><rect x="5.0951%" y="213" width="0.0645%" height="15" fill="rgb(212,28,1)" fg:x="158" fg:w="2"/><text x="5.3451%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (2 samples, 0.06%)</title><rect x="5.0951%" y="197" width="0.0645%" height="15" fill="rgb(248,164,17)" fg:x="158" fg:w="2"/><text x="5.3451%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (2 samples, 0.06%)</title><rect x="5.0951%" y="181" width="0.0645%" height="15" fill="rgb(222,171,42)" fg:x="158" fg:w="2"/><text x="5.3451%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (4 samples, 0.13%)</title><rect x="5.1596%" y="213" width="0.1290%" height="15" fill="rgb(243,84,45)" fg:x="160" fg:w="4"/><text x="5.4096%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (4 samples, 0.13%)</title><rect x="5.1596%" y="197" width="0.1290%" height="15" fill="rgb(252,49,23)" fg:x="160" fg:w="4"/><text x="5.4096%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (3 samples, 0.10%)</title><rect x="5.1919%" y="181" width="0.0967%" height="15" fill="rgb(215,19,7)" fg:x="161" fg:w="3"/><text x="5.4419%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (3 samples, 0.10%)</title><rect x="5.1919%" y="165" width="0.0967%" height="15" fill="rgb(238,81,41)" fg:x="161" fg:w="3"/><text x="5.4419%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (2 samples, 0.06%)</title><rect x="5.2241%" y="149" width="0.0645%" height="15" fill="rgb(210,199,37)" fg:x="162" fg:w="2"/><text x="5.4741%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.06%)</title><rect x="5.2241%" y="133" width="0.0645%" height="15" fill="rgb(244,192,49)" fg:x="162" fg:w="2"/><text x="5.4741%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (2 samples, 0.06%)</title><rect x="5.2886%" y="213" width="0.0645%" height="15" fill="rgb(226,211,11)" fg:x="164" fg:w="2"/><text x="5.5386%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (2 samples, 0.06%)</title><rect x="5.2886%" y="197" width="0.0645%" height="15" fill="rgb(236,162,54)" fg:x="164" fg:w="2"/><text x="5.5386%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::PartialElement&lt;M,T,O&gt;::new (4 samples, 0.13%)</title><rect x="5.4176%" y="165" width="0.1290%" height="15" fill="rgb(220,229,9)" fg:x="168" fg:w="4"/><text x="5.6676%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::mask (2 samples, 0.06%)</title><rect x="5.4821%" y="149" width="0.0645%" height="15" fill="rgb(250,87,22)" fg:x="170" fg:w="2"/><text x="5.7321%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="5.5144%" y="133" width="0.0322%" height="15" fill="rgb(239,43,17)" fg:x="171" fg:w="1"/><text x="5.7644%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::add (1 samples, 0.03%)</title><rect x="5.5466%" y="165" width="0.0322%" height="15" fill="rgb(231,177,25)" fg:x="172" fg:w="1"/><text x="5.7966%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="5.5466%" y="149" width="0.0322%" height="15" fill="rgb(219,179,1)" fg:x="172" fg:w="1"/><text x="5.7966%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::add::_{{closure}} (1 samples, 0.03%)</title><rect x="5.5466%" y="133" width="0.0322%" height="15" fill="rgb(238,219,53)" fg:x="172" fg:w="1"/><text x="5.7966%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::major (8 samples, 0.26%)</title><rect x="5.3531%" y="181" width="0.2580%" height="15" fill="rgb(232,167,36)" fg:x="166" fg:w="8"/><text x="5.6031%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::cast (1 samples, 0.03%)</title><rect x="5.5788%" y="165" width="0.0322%" height="15" fill="rgb(244,19,51)" fg:x="173" fg:w="1"/><text x="5.8288%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="5.5788%" y="149" width="0.0322%" height="15" fill="rgb(224,6,22)" fg:x="173" fg:w="1"/><text x="5.8288%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le (31 samples, 1.00%)</title><rect x="4.7082%" y="229" width="0.9997%" height="15" fill="rgb(224,145,5)" fg:x="146" fg:w="31"/><text x="4.9582%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain (11 samples, 0.35%)</title><rect x="5.3531%" y="213" width="0.3547%" height="15" fill="rgb(234,130,49)" fg:x="166" fg:w="11"/><text x="5.6031%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (11 samples, 0.35%)</title><rect x="5.3531%" y="197" width="0.3547%" height="15" fill="rgb(254,6,2)" fg:x="166" fg:w="11"/><text x="5.6031%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::tail (3 samples, 0.10%)</title><rect x="5.6111%" y="181" width="0.0967%" height="15" fill="rgb(208,96,46)" fg:x="174" fg:w="3"/><text x="5.8611%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::span (3 samples, 0.10%)</title><rect x="5.6111%" y="165" width="0.0967%" height="15" fill="rgb(239,3,39)" fg:x="174" fg:w="3"/><text x="5.8611%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitEnd&lt;R&gt;::span (3 samples, 0.10%)</title><rect x="5.6111%" y="149" width="0.0967%" height="15" fill="rgb(233,210,1)" fg:x="174" fg:w="3"/><text x="5.8611%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="5.6756%" y="133" width="0.0322%" height="15" fill="rgb(244,137,37)" fg:x="176" fg:w="1"/><text x="5.9256%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="5.7078%" y="213" width="0.0645%" height="15" fill="rgb(240,136,2)" fg:x="177" fg:w="2"/><text x="5.9578%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::maybe_shift_right (1 samples, 0.03%)</title><rect x="5.7723%" y="213" width="0.0322%" height="15" fill="rgb(239,18,37)" fg:x="179" fg:w="1"/><text x="6.0223%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="5.7723%" y="197" width="0.0322%" height="15" fill="rgb(218,185,22)" fg:x="179" fg:w="1"/><text x="6.0223%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="5.7723%" y="181" width="0.0322%" height="15" fill="rgb(225,218,4)" fg:x="179" fg:w="1"/><text x="6.0223%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (3 samples, 0.10%)</title><rect x="5.8046%" y="181" width="0.0967%" height="15" fill="rgb(230,182,32)" fg:x="180" fg:w="3"/><text x="6.0546%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (3 samples, 0.10%)</title><rect x="5.8046%" y="165" width="0.0967%" height="15" fill="rgb(242,56,43)" fg:x="180" fg:w="3"/><text x="6.0546%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (3 samples, 0.10%)</title><rect x="5.8046%" y="149" width="0.0967%" height="15" fill="rgb(233,99,24)" fg:x="180" fg:w="3"/><text x="6.0546%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.03%)</title><rect x="5.8691%" y="133" width="0.0322%" height="15" fill="rgb(234,209,42)" fg:x="182" fg:w="1"/><text x="6.1191%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (4 samples, 0.13%)</title><rect x="5.8046%" y="197" width="0.1290%" height="15" fill="rgb(227,7,12)" fg:x="180" fg:w="4"/><text x="6.0546%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="5.9013%" y="181" width="0.0322%" height="15" fill="rgb(245,203,43)" fg:x="183" fg:w="1"/><text x="6.1513%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (5 samples, 0.16%)</title><rect x="5.8046%" y="213" width="0.1612%" height="15" fill="rgb(238,205,33)" fg:x="180" fg:w="5"/><text x="6.0546%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="5.9336%" y="197" width="0.0322%" height="15" fill="rgb(231,56,7)" fg:x="184" fg:w="1"/><text x="6.1836%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::spanning (1 samples, 0.03%)</title><rect x="5.9981%" y="181" width="0.0322%" height="15" fill="rgb(244,186,29)" fg:x="186" fg:w="1"/><text x="6.2481%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::cast (1 samples, 0.03%)</title><rect x="5.9981%" y="165" width="0.0322%" height="15" fill="rgb(234,111,31)" fg:x="186" fg:w="1"/><text x="6.2481%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="5.9981%" y="149" width="0.0322%" height="15" fill="rgb(241,149,10)" fg:x="186" fg:w="1"/><text x="6.2481%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::elements (1 samples, 0.03%)</title><rect x="6.0303%" y="181" width="0.0322%" height="15" fill="rgb(249,206,44)" fg:x="187" fg:w="1"/><text x="6.2803%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::elts (1 samples, 0.03%)</title><rect x="6.0303%" y="165" width="0.0322%" height="15" fill="rgb(251,153,30)" fg:x="187" fg:w="1"/><text x="6.2803%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::span (2 samples, 0.06%)</title><rect x="6.0626%" y="165" width="0.0645%" height="15" fill="rgb(239,152,38)" fg:x="188" fg:w="2"/><text x="6.3126%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitEnd&lt;R&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="6.0626%" y="149" width="0.0645%" height="15" fill="rgb(249,139,47)" fg:x="188" fg:w="2"/><text x="6.3126%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (2 samples, 0.06%)</title><rect x="6.0626%" y="133" width="0.0645%" height="15" fill="rgb(244,64,35)" fg:x="188" fg:w="2"/><text x="6.3126%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::store_le (14 samples, 0.45%)</title><rect x="5.7078%" y="229" width="0.4515%" height="15" fill="rgb(216,46,15)" fg:x="177" fg:w="14"/><text x="5.9578%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain_mut (6 samples, 0.19%)</title><rect x="5.9658%" y="213" width="0.1935%" height="15" fill="rgb(250,74,19)" fg:x="185" fg:w="6"/><text x="6.2158%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (6 samples, 0.19%)</title><rect x="5.9658%" y="197" width="0.1935%" height="15" fill="rgb(249,42,33)" fg:x="185" fg:w="6"/><text x="6.2158%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::tail (3 samples, 0.10%)</title><rect x="6.0626%" y="181" width="0.0967%" height="15" fill="rgb(242,149,17)" fg:x="188" fg:w="3"/><text x="6.3126%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="6.1271%" y="165" width="0.0322%" height="15" fill="rgb(244,29,21)" fg:x="190" fg:w="1"/><text x="6.3771%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="6.1271%" y="149" width="0.0322%" height="15" fill="rgb(220,130,37)" fg:x="190" fg:w="1"/><text x="6.3771%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="6.1271%" y="133" width="0.0322%" height="15" fill="rgb(211,67,2)" fg:x="190" fg:w="1"/><text x="6.3771%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="6.1271%" y="117" width="0.0322%" height="15" fill="rgb(235,68,52)" fg:x="190" fg:w="1"/><text x="6.3771%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="6.1593%" y="229" width="0.0322%" height="15" fill="rgb(246,142,3)" fg:x="191" fg:w="1"/><text x="6.4093%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (2 samples, 0.06%)</title><rect x="6.2238%" y="165" width="0.0645%" height="15" fill="rgb(241,25,7)" fg:x="193" fg:w="2"/><text x="6.4738%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (2 samples, 0.06%)</title><rect x="6.2238%" y="149" width="0.0645%" height="15" fill="rgb(242,119,39)" fg:x="193" fg:w="2"/><text x="6.4738%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (2 samples, 0.06%)</title><rect x="6.2238%" y="133" width="0.0645%" height="15" fill="rgb(241,98,45)" fg:x="193" fg:w="2"/><text x="6.4738%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="6.2238%" y="117" width="0.0645%" height="15" fill="rgb(254,28,30)" fg:x="193" fg:w="2"/><text x="6.4738%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="6.2560%" y="101" width="0.0322%" height="15" fill="rgb(241,142,54)" fg:x="194" fg:w="1"/><text x="6.5060%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::span_unchecked (1 samples, 0.03%)</title><rect x="6.2883%" y="165" width="0.0322%" height="15" fill="rgb(222,85,15)" fg:x="195" fg:w="1"/><text x="6.5383%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="6.2883%" y="149" width="0.0322%" height="15" fill="rgb(210,85,47)" fg:x="195" fg:w="1"/><text x="6.5383%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="6.2883%" y="133" width="0.0322%" height="15" fill="rgb(224,206,25)" fg:x="195" fg:w="1"/><text x="6.5383%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked (4 samples, 0.13%)</title><rect x="6.2238%" y="181" width="0.1290%" height="15" fill="rgb(243,201,19)" fg:x="193" fg:w="4"/><text x="6.4738%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="6.3205%" y="165" width="0.0322%" height="15" fill="rgb(236,59,4)" fg:x="196" fg:w="1"/><text x="6.5705%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="6.3205%" y="149" width="0.0322%" height="15" fill="rgb(254,179,45)" fg:x="196" fg:w="1"/><text x="6.5705%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="6.3205%" y="133" width="0.0322%" height="15" fill="rgb(226,14,10)" fg:x="196" fg:w="1"/><text x="6.5705%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.03%)</title><rect x="6.3205%" y="117" width="0.0322%" height="15" fill="rgb(244,27,41)" fg:x="196" fg:w="1"/><text x="6.5705%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::Chunks&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.16%)</title><rect x="6.2238%" y="197" width="0.1612%" height="15" fill="rgb(235,35,32)" fg:x="193" fg:w="5"/><text x="6.4738%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min (1 samples, 0.03%)</title><rect x="6.3528%" y="181" width="0.0322%" height="15" fill="rgb(218,68,31)" fg:x="197" fg:w="1"/><text x="6.6028%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="6.3528%" y="165" width="0.0322%" height="15" fill="rgb(207,120,37)" fg:x="197" fg:w="1"/><text x="6.6028%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="6.3528%" y="149" width="0.0322%" height="15" fill="rgb(227,98,0)" fg:x="197" fg:w="1"/><text x="6.6028%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="6.3528%" y="133" width="0.0322%" height="15" fill="rgb(207,7,3)" fg:x="197" fg:w="1"/><text x="6.6028%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.03%)</title><rect x="6.3528%" y="117" width="0.0322%" height="15" fill="rgb(206,98,19)" fg:x="197" fg:w="1"/><text x="6.6028%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::span_unchecked (1 samples, 0.03%)</title><rect x="6.4495%" y="133" width="0.0322%" height="15" fill="rgb(217,5,26)" fg:x="200" fg:w="1"/><text x="6.6995%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="6.4495%" y="117" width="0.0322%" height="15" fill="rgb(235,190,38)" fg:x="200" fg:w="1"/><text x="6.6995%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="6.4818%" y="117" width="0.0322%" height="15" fill="rgb(247,86,24)" fg:x="201" fg:w="1"/><text x="6.7318%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="6.4818%" y="101" width="0.0322%" height="15" fill="rgb(205,101,16)" fg:x="201" fg:w="1"/><text x="6.7318%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="6.4818%" y="85" width="0.0322%" height="15" fill="rgb(246,168,33)" fg:x="201" fg:w="1"/><text x="6.7318%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::alias_mut (2 samples, 0.06%)</title><rect x="6.4818%" y="133" width="0.0645%" height="15" fill="rgb(231,114,1)" fg:x="201" fg:w="2"/><text x="6.7318%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (1 samples, 0.03%)</title><rect x="6.5140%" y="117" width="0.0322%" height="15" fill="rgb(207,184,53)" fg:x="202" fg:w="1"/><text x="6.7640%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="6.5785%" y="101" width="0.0322%" height="15" fill="rgb(224,95,51)" fg:x="204" fg:w="1"/><text x="6.8285%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (4 samples, 0.13%)</title><rect x="6.5463%" y="117" width="0.1290%" height="15" fill="rgb(212,188,45)" fg:x="203" fg:w="4"/><text x="6.7963%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (2 samples, 0.06%)</title><rect x="6.6108%" y="101" width="0.0645%" height="15" fill="rgb(223,154,38)" fg:x="205" fg:w="2"/><text x="6.8608%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="6.6108%" y="85" width="0.0645%" height="15" fill="rgb(251,22,52)" fg:x="205" fg:w="2"/><text x="6.8608%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (2 samples, 0.06%)</title><rect x="6.6108%" y="69" width="0.0645%" height="15" fill="rgb(229,209,22)" fg:x="205" fg:w="2"/><text x="6.8608%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (2 samples, 0.06%)</title><rect x="6.6108%" y="53" width="0.0645%" height="15" fill="rgb(234,138,34)" fg:x="205" fg:w="2"/><text x="6.8608%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitptr (5 samples, 0.16%)</title><rect x="6.5463%" y="133" width="0.1612%" height="15" fill="rgb(212,95,11)" fg:x="203" fg:w="5"/><text x="6.7963%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (1 samples, 0.03%)</title><rect x="6.6753%" y="117" width="0.0322%" height="15" fill="rgb(240,179,47)" fg:x="207" fg:w="1"/><text x="6.9253%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="6.6753%" y="101" width="0.0322%" height="15" fill="rgb(240,163,11)" fg:x="207" fg:w="1"/><text x="6.9253%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut (11 samples, 0.35%)</title><rect x="6.3850%" y="149" width="0.3547%" height="15" fill="rgb(236,37,12)" fg:x="198" fg:w="11"/><text x="6.6350%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="6.7075%" y="133" width="0.0322%" height="15" fill="rgb(232,164,16)" fg:x="208" fg:w="1"/><text x="6.9575%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="6.7075%" y="117" width="0.0322%" height="15" fill="rgb(244,205,15)" fg:x="208" fg:w="1"/><text x="6.9575%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="6.7075%" y="101" width="0.0322%" height="15" fill="rgb(223,117,47)" fg:x="208" fg:w="1"/><text x="6.9575%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="6.7398%" y="133" width="0.0322%" height="15" fill="rgb(244,107,35)" fg:x="209" fg:w="1"/><text x="6.9898%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="6.7398%" y="117" width="0.0322%" height="15" fill="rgb(205,140,8)" fg:x="209" fg:w="1"/><text x="6.9898%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="6.7398%" y="101" width="0.0322%" height="15" fill="rgb(228,84,46)" fg:x="209" fg:w="1"/><text x="6.9898%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="6.7398%" y="85" width="0.0322%" height="15" fill="rgb(254,188,9)" fg:x="209" fg:w="1"/><text x="6.9898%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut_noalias (13 samples, 0.42%)</title><rect x="6.3850%" y="165" width="0.4192%" height="15" fill="rgb(206,112,54)" fg:x="198" fg:w="13"/><text x="6.6350%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::unalias_mut (2 samples, 0.06%)</title><rect x="6.7398%" y="149" width="0.0645%" height="15" fill="rgb(216,84,49)" fg:x="209" fg:w="2"/><text x="6.9898%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (1 samples, 0.03%)</title><rect x="6.7720%" y="133" width="0.0322%" height="15" fill="rgb(214,194,35)" fg:x="210" fg:w="1"/><text x="7.0220%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::from_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="6.7720%" y="117" width="0.0322%" height="15" fill="rgb(249,28,3)" fg:x="210" fg:w="1"/><text x="7.0220%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="6.7720%" y="101" width="0.0322%" height="15" fill="rgb(222,56,52)" fg:x="210" fg:w="1"/><text x="7.0220%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMut&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.45%)</title><rect x="6.3850%" y="181" width="0.4515%" height="15" fill="rgb(245,217,50)" fg:x="198" fg:w="14"/><text x="6.6350%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::mem::take (1 samples, 0.03%)</title><rect x="6.8043%" y="165" width="0.0322%" height="15" fill="rgb(213,201,24)" fg:x="211" fg:w="1"/><text x="7.0543%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::traits::_&lt;impl core::default::Default for &amp;mut bitvec::slice::BitSlice&lt;T,O&gt;&gt;::default (1 samples, 0.03%)</title><rect x="6.8043%" y="149" width="0.0322%" height="15" fill="rgb(248,116,28)" fg:x="211" fg:w="1"/><text x="7.0543%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::empty_mut (1 samples, 0.03%)</title><rect x="6.8043%" y="133" width="0.0322%" height="15" fill="rgb(219,72,43)" fg:x="211" fg:w="1"/><text x="7.0543%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="6.8043%" y="117" width="0.0322%" height="15" fill="rgb(209,138,14)" fg:x="211" fg:w="1"/><text x="7.0543%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="6.8043%" y="101" width="0.0322%" height="15" fill="rgb(222,18,33)" fg:x="211" fg:w="1"/><text x="7.0543%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="6.8043%" y="85" width="0.0322%" height="15" fill="rgb(213,199,7)" fg:x="211" fg:w="1"/><text x="7.0543%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="6.8043%" y="69" width="0.0322%" height="15" fill="rgb(250,110,10)" fg:x="211" fg:w="1"/><text x="7.0543%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min (1 samples, 0.03%)</title><rect x="6.8365%" y="181" width="0.0322%" height="15" fill="rgb(248,123,6)" fg:x="212" fg:w="1"/><text x="7.0865%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="6.9010%" y="133" width="0.0322%" height="15" fill="rgb(206,91,31)" fg:x="214" fg:w="1"/><text x="7.1510%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="6.9010%" y="117" width="0.0322%" height="15" fill="rgb(211,154,13)" fg:x="214" fg:w="1"/><text x="7.1510%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="6.9010%" y="101" width="0.0322%" height="15" fill="rgb(225,148,7)" fg:x="214" fg:w="1"/><text x="7.1510%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="6.9010%" y="85" width="0.0322%" height="15" fill="rgb(220,160,43)" fg:x="214" fg:w="1"/><text x="7.1510%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::clone_from_bitslice (71 samples, 2.29%)</title><rect x="4.6759%" y="277" width="2.2896%" height="15" fill="rgb(213,52,39)" fg:x="145" fg:w="71"/><text x="4.9259%" y="287.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::copy_from_bitslice (71 samples, 2.29%)</title><rect x="4.6759%" y="261" width="2.2896%" height="15" fill="rgb(243,137,7)" fg:x="145" fg:w="71"/><text x="4.9259%" y="271.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_copy_from_bitslice (70 samples, 2.26%)</title><rect x="4.7082%" y="245" width="2.2573%" height="15" fill="rgb(230,79,13)" fg:x="146" fg:w="70"/><text x="4.9582%" y="255.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.77%)</title><rect x="6.1916%" y="229" width="0.7739%" height="15" fill="rgb(247,105,23)" fg:x="192" fg:w="24"/><text x="6.4416%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (24 samples, 0.77%)</title><rect x="6.1916%" y="213" width="0.7739%" height="15" fill="rgb(223,179,41)" fg:x="192" fg:w="24"/><text x="6.4416%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMutNoAlias&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.58%)</title><rect x="6.3850%" y="197" width="0.5805%" height="15" fill="rgb(218,9,34)" fg:x="198" fg:w="18"/><text x="6.6350%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::map (3 samples, 0.10%)</title><rect x="6.8688%" y="181" width="0.0967%" height="15" fill="rgb(222,106,8)" fg:x="213" fg:w="3"/><text x="7.1188%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMutNoAlias&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (3 samples, 0.10%)</title><rect x="6.8688%" y="165" width="0.0967%" height="15" fill="rgb(211,220,0)" fg:x="213" fg:w="3"/><text x="7.1188%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::unalias_mut (3 samples, 0.10%)</title><rect x="6.8688%" y="149" width="0.0967%" height="15" fill="rgb(229,52,16)" fg:x="213" fg:w="3"/><text x="7.1188%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (1 samples, 0.03%)</title><rect x="6.9332%" y="133" width="0.0322%" height="15" fill="rgb(212,155,18)" fg:x="215" fg:w="1"/><text x="7.1832%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::from_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="6.9332%" y="117" width="0.0322%" height="15" fill="rgb(242,21,14)" fg:x="215" fg:w="1"/><text x="7.1832%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="6.9332%" y="101" width="0.0322%" height="15" fill="rgb(222,19,48)" fg:x="215" fg:w="1"/><text x="7.1832%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="6.9332%" y="85" width="0.0322%" height="15" fill="rgb(232,45,27)" fg:x="215" fg:w="1"/><text x="7.1832%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::fill (1 samples, 0.03%)</title><rect x="6.9655%" y="261" width="0.0322%" height="15" fill="rgb(249,103,42)" fg:x="216" fg:w="1"/><text x="7.2155%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (4 samples, 0.13%)</title><rect x="7.1590%" y="117" width="0.1290%" height="15" fill="rgb(246,81,33)" fg:x="222" fg:w="4"/><text x="7.4090%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (2 samples, 0.06%)</title><rect x="7.2235%" y="101" width="0.0645%" height="15" fill="rgb(252,33,42)" fg:x="224" fg:w="2"/><text x="7.4735%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::resize_with (10 samples, 0.32%)</title><rect x="6.9977%" y="197" width="0.3225%" height="15" fill="rgb(209,212,41)" fg:x="217" fg:w="10"/><text x="7.2477%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (10 samples, 0.32%)</title><rect x="6.9977%" y="181" width="0.3225%" height="15" fill="rgb(207,154,6)" fg:x="217" fg:w="10"/><text x="7.2477%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (10 samples, 0.32%)</title><rect x="6.9977%" y="165" width="0.3225%" height="15" fill="rgb(223,64,47)" fg:x="217" fg:w="10"/><text x="7.2477%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (10 samples, 0.32%)</title><rect x="6.9977%" y="149" width="0.3225%" height="15" fill="rgb(211,161,38)" fg:x="217" fg:w="10"/><text x="7.2477%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.32%)</title><rect x="6.9977%" y="133" width="0.3225%" height="15" fill="rgb(219,138,40)" fg:x="217" fg:w="10"/><text x="7.2477%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="7.2880%" y="117" width="0.0322%" height="15" fill="rgb(241,228,46)" fg:x="226" fg:w="1"/><text x="7.5380%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaNode::new (83 samples, 2.68%)</title><rect x="4.6759%" y="309" width="2.6766%" height="15" fill="rgb(223,209,38)" fg:x="145" fg:w="83"/><text x="4.9259%" y="319.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::extend_from_bitslice (83 samples, 2.68%)</title><rect x="4.6759%" y="293" width="2.6766%" height="15" fill="rgb(236,164,45)" fg:x="145" fg:w="83"/><text x="4.9259%" y="303.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::resize (12 samples, 0.39%)</title><rect x="6.9655%" y="277" width="0.3870%" height="15" fill="rgb(231,15,5)" fg:x="216" fg:w="12"/><text x="7.2155%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::reserve (11 samples, 0.35%)</title><rect x="6.9977%" y="261" width="0.3547%" height="15" fill="rgb(252,35,15)" fg:x="217" fg:w="11"/><text x="7.2477%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation (11 samples, 0.35%)</title><rect x="6.9977%" y="245" width="0.3547%" height="15" fill="rgb(248,181,18)" fg:x="217" fg:w="11"/><text x="7.2477%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::with_vec (11 samples, 0.35%)</title><rect x="6.9977%" y="229" width="0.3547%" height="15" fill="rgb(233,39,42)" fg:x="217" fg:w="11"/><text x="7.2477%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation::_{{closure}} (11 samples, 0.35%)</title><rect x="6.9977%" y="213" width="0.3547%" height="15" fill="rgb(238,110,33)" fg:x="217" fg:w="11"/><text x="7.2477%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="7.3202%" y="197" width="0.0322%" height="15" fill="rgb(233,195,10)" fg:x="227" fg:w="1"/><text x="7.5702%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="7.3202%" y="181" width="0.0322%" height="15" fill="rgb(254,105,3)" fg:x="227" fg:w="1"/><text x="7.5702%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="7.3202%" y="165" width="0.0322%" height="15" fill="rgb(221,225,9)" fg:x="227" fg:w="1"/><text x="7.5702%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="7.3202%" y="149" width="0.0322%" height="15" fill="rgb(224,227,45)" fg:x="227" fg:w="1"/><text x="7.5702%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="7.3202%" y="133" width="0.0322%" height="15" fill="rgb(229,198,43)" fg:x="227" fg:w="1"/><text x="7.5702%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="7.3202%" y="117" width="0.0322%" height="15" fill="rgb(206,209,35)" fg:x="227" fg:w="1"/><text x="7.5702%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="7.3202%" y="101" width="0.0322%" height="15" fill="rgb(245,195,53)" fg:x="227" fg:w="1"/><text x="7.5702%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="7.3202%" y="85" width="0.0322%" height="15" fill="rgb(240,92,26)" fg:x="227" fg:w="1"/><text x="7.5702%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="7.3525%" y="229" width="0.0322%" height="15" fill="rgb(207,40,23)" fg:x="228" fg:w="1"/><text x="7.6025%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le::_{{closure}} (2 samples, 0.06%)</title><rect x="7.4170%" y="197" width="0.0645%" height="15" fill="rgb(223,111,35)" fg:x="230" fg:w="2"/><text x="7.6670%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::sign (2 samples, 0.06%)</title><rect x="7.4170%" y="181" width="0.0645%" height="15" fill="rgb(229,147,28)" fg:x="230" fg:w="2"/><text x="7.6670%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::is_unsigned (2 samples, 0.06%)</title><rect x="7.4170%" y="165" width="0.0645%" height="15" fill="rgb(211,29,28)" fg:x="230" fg:w="2"/><text x="7.6670%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::eq_types (2 samples, 0.06%)</title><rect x="7.4170%" y="149" width="0.0645%" height="15" fill="rgb(228,72,33)" fg:x="230" fg:w="2"/><text x="7.6670%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (2 samples, 0.06%)</title><rect x="7.4170%" y="133" width="0.0645%" height="15" fill="rgb(205,214,31)" fg:x="230" fg:w="2"/><text x="7.6670%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.13%)</title><rect x="7.4815%" y="197" width="0.1290%" height="15" fill="rgb(224,111,15)" fg:x="232" fg:w="4"/><text x="7.7315%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="7.5137%" y="181" width="0.0967%" height="15" fill="rgb(253,21,26)" fg:x="233" fg:w="3"/><text x="7.7637%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.10%)</title><rect x="7.5137%" y="165" width="0.0967%" height="15" fill="rgb(245,139,43)" fg:x="233" fg:w="3"/><text x="7.7637%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::check (1 samples, 0.03%)</title><rect x="7.6104%" y="197" width="0.0322%" height="15" fill="rgb(252,170,7)" fg:x="236" fg:w="1"/><text x="7.8604%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.03%)</title><rect x="7.6104%" y="181" width="0.0322%" height="15" fill="rgb(231,118,14)" fg:x="236" fg:w="1"/><text x="7.8604%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::range::RangeBounds::contains (1 samples, 0.03%)</title><rect x="7.6104%" y="165" width="0.0322%" height="15" fill="rgb(238,83,0)" fg:x="236" fg:w="1"/><text x="7.8604%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::get (1 samples, 0.03%)</title><rect x="7.6427%" y="197" width="0.0322%" height="15" fill="rgb(221,39,39)" fg:x="237" fg:w="1"/><text x="7.8927%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="7.6427%" y="181" width="0.0322%" height="15" fill="rgb(222,119,46)" fg:x="237" fg:w="1"/><text x="7.8927%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="7.6427%" y="165" width="0.0322%" height="15" fill="rgb(222,165,49)" fg:x="237" fg:w="1"/><text x="7.8927%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="7.6427%" y="149" width="0.0322%" height="15" fill="rgb(219,113,52)" fg:x="237" fg:w="1"/><text x="7.8927%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="7.6427%" y="133" width="0.0322%" height="15" fill="rgb(214,7,15)" fg:x="237" fg:w="1"/><text x="7.8927%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (3 samples, 0.10%)</title><rect x="7.6749%" y="181" width="0.0967%" height="15" fill="rgb(235,32,4)" fg:x="238" fg:w="3"/><text x="7.9249%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (3 samples, 0.10%)</title><rect x="7.6749%" y="165" width="0.0967%" height="15" fill="rgb(238,90,54)" fg:x="238" fg:w="3"/><text x="7.9249%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (3 samples, 0.10%)</title><rect x="7.6749%" y="149" width="0.0967%" height="15" fill="rgb(213,208,19)" fg:x="238" fg:w="3"/><text x="7.9249%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (4 samples, 0.13%)</title><rect x="7.6749%" y="197" width="0.1290%" height="15" fill="rgb(233,156,4)" fg:x="238" fg:w="4"/><text x="7.9249%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="7.7717%" y="181" width="0.0322%" height="15" fill="rgb(207,194,5)" fg:x="241" fg:w="1"/><text x="8.0217%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="7.8039%" y="197" width="0.0322%" height="15" fill="rgb(206,111,30)" fg:x="242" fg:w="1"/><text x="8.0539%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="7.8039%" y="181" width="0.0322%" height="15" fill="rgb(243,70,54)" fg:x="242" fg:w="1"/><text x="8.0539%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::index::BitIdx&lt;R&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="7.9007%" y="165" width="0.0322%" height="15" fill="rgb(242,28,8)" fg:x="245" fg:w="1"/><text x="8.1507%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::PartialElement&lt;M,T,O&gt;::new (2 samples, 0.06%)</title><rect x="7.9652%" y="149" width="0.0645%" height="15" fill="rgb(219,106,18)" fg:x="247" fg:w="2"/><text x="8.2152%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::mask (2 samples, 0.06%)</title><rect x="7.9652%" y="133" width="0.0645%" height="15" fill="rgb(244,222,10)" fg:x="247" fg:w="2"/><text x="8.2152%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (1 samples, 0.03%)</title><rect x="7.9974%" y="117" width="0.0322%" height="15" fill="rgb(236,179,52)" fg:x="248" fg:w="1"/><text x="8.2474%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::add (1 samples, 0.03%)</title><rect x="8.0297%" y="149" width="0.0322%" height="15" fill="rgb(213,23,39)" fg:x="249" fg:w="1"/><text x="8.2797%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="8.0297%" y="133" width="0.0322%" height="15" fill="rgb(238,48,10)" fg:x="249" fg:w="1"/><text x="8.2797%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::major (5 samples, 0.16%)</title><rect x="7.9329%" y="165" width="0.1612%" height="15" fill="rgb(251,196,23)" fg:x="246" fg:w="5"/><text x="8.1829%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::cast (1 samples, 0.03%)</title><rect x="8.0619%" y="149" width="0.0322%" height="15" fill="rgb(250,152,24)" fg:x="250" fg:w="1"/><text x="8.3119%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="8.0619%" y="133" width="0.0322%" height="15" fill="rgb(209,150,17)" fg:x="250" fg:w="1"/><text x="8.3119%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="8.0619%" y="117" width="0.0322%" height="15" fill="rgb(234,202,34)" fg:x="250" fg:w="1"/><text x="8.3119%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="8.0619%" y="101" width="0.0322%" height="15" fill="rgb(253,148,53)" fg:x="250" fg:w="1"/><text x="8.3119%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (1 samples, 0.03%)</title><rect x="8.0942%" y="165" width="0.0322%" height="15" fill="rgb(218,129,16)" fg:x="251" fg:w="1"/><text x="8.3442%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::elements (1 samples, 0.03%)</title><rect x="8.1264%" y="165" width="0.0322%" height="15" fill="rgb(216,85,19)" fg:x="252" fg:w="1"/><text x="8.3764%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::elts (1 samples, 0.03%)</title><rect x="8.1264%" y="149" width="0.0322%" height="15" fill="rgb(235,228,7)" fg:x="252" fg:w="1"/><text x="8.3764%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (2 samples, 0.06%)</title><rect x="8.1587%" y="165" width="0.0645%" height="15" fill="rgb(245,175,0)" fg:x="253" fg:w="2"/><text x="8.4087%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitEnd&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="8.2232%" y="133" width="0.0322%" height="15" fill="rgb(208,168,36)" fg:x="255" fg:w="1"/><text x="8.4732%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="8.2232%" y="117" width="0.0322%" height="15" fill="rgb(246,171,24)" fg:x="255" fg:w="1"/><text x="8.4732%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="8.2232%" y="101" width="0.0322%" height="15" fill="rgb(215,142,24)" fg:x="255" fg:w="1"/><text x="8.4732%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitEnd&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="8.2554%" y="117" width="0.0322%" height="15" fill="rgb(250,187,7)" fg:x="256" fg:w="1"/><text x="8.5054%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::tail (3 samples, 0.10%)</title><rect x="8.2232%" y="165" width="0.0967%" height="15" fill="rgb(228,66,33)" fg:x="255" fg:w="3"/><text x="8.4732%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::span (3 samples, 0.10%)</title><rect x="8.2232%" y="149" width="0.0967%" height="15" fill="rgb(234,215,21)" fg:x="255" fg:w="3"/><text x="8.4732%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitEnd&lt;R&gt;::span (2 samples, 0.06%)</title><rect x="8.2554%" y="133" width="0.0645%" height="15" fill="rgb(222,191,20)" fg:x="256" fg:w="2"/><text x="8.5054%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="8.2876%" y="117" width="0.0322%" height="15" fill="rgb(245,79,54)" fg:x="257" fg:w="1"/><text x="8.5376%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="8.2876%" y="101" width="0.0322%" height="15" fill="rgb(240,10,37)" fg:x="257" fg:w="1"/><text x="8.5376%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain (16 samples, 0.52%)</title><rect x="7.8362%" y="197" width="0.5160%" height="15" fill="rgb(214,192,32)" fg:x="243" fg:w="16"/><text x="8.0862%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (16 samples, 0.52%)</title><rect x="7.8362%" y="181" width="0.5160%" height="15" fill="rgb(209,36,54)" fg:x="243" fg:w="16"/><text x="8.0862%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::add (1 samples, 0.03%)</title><rect x="8.3199%" y="165" width="0.0322%" height="15" fill="rgb(220,10,11)" fg:x="258" fg:w="1"/><text x="8.5699%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::len (1 samples, 0.03%)</title><rect x="8.3521%" y="181" width="0.0322%" height="15" fill="rgb(221,106,17)" fg:x="259" fg:w="1"/><text x="8.6021%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le (32 samples, 1.03%)</title><rect x="7.3847%" y="213" width="1.0319%" height="15" fill="rgb(251,142,44)" fg:x="229" fg:w="32"/><text x="7.6347%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (2 samples, 0.06%)</title><rect x="8.3521%" y="197" width="0.0645%" height="15" fill="rgb(238,13,15)" fg:x="259" fg:w="2"/><text x="8.6021%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="8.3844%" y="181" width="0.0322%" height="15" fill="rgb(208,107,27)" fg:x="260" fg:w="1"/><text x="8.6344%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="8.3844%" y="165" width="0.0322%" height="15" fill="rgb(205,136,37)" fg:x="260" fg:w="1"/><text x="8.6344%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="8.5134%" y="197" width="0.0322%" height="15" fill="rgb(250,205,27)" fg:x="264" fg:w="1"/><text x="8.7634%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (8 samples, 0.26%)</title><rect x="8.5779%" y="165" width="0.2580%" height="15" fill="rgb(210,80,43)" fg:x="266" fg:w="8"/><text x="8.8279%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (6 samples, 0.19%)</title><rect x="8.6424%" y="149" width="0.1935%" height="15" fill="rgb(247,160,36)" fg:x="268" fg:w="6"/><text x="8.8924%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (4 samples, 0.13%)</title><rect x="8.7069%" y="133" width="0.1290%" height="15" fill="rgb(234,13,49)" fg:x="270" fg:w="4"/><text x="8.9569%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (4 samples, 0.13%)</title><rect x="8.7069%" y="117" width="0.1290%" height="15" fill="rgb(234,122,0)" fg:x="270" fg:w="4"/><text x="8.9569%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (10 samples, 0.32%)</title><rect x="8.5456%" y="197" width="0.3225%" height="15" fill="rgb(207,146,38)" fg:x="265" fg:w="10"/><text x="8.7956%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (9 samples, 0.29%)</title><rect x="8.5779%" y="181" width="0.2902%" height="15" fill="rgb(207,177,25)" fg:x="266" fg:w="9"/><text x="8.8279%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="8.8359%" y="165" width="0.0322%" height="15" fill="rgb(211,178,42)" fg:x="274" fg:w="1"/><text x="9.0859%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="8.8681%" y="197" width="0.0322%" height="15" fill="rgb(230,69,54)" fg:x="275" fg:w="1"/><text x="9.1181%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="8.8681%" y="181" width="0.0322%" height="15" fill="rgb(214,135,41)" fg:x="275" fg:w="1"/><text x="9.1181%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::elements (2 samples, 0.06%)</title><rect x="8.9326%" y="165" width="0.0645%" height="15" fill="rgb(237,67,25)" fg:x="277" fg:w="2"/><text x="9.1826%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::elts (2 samples, 0.06%)</title><rect x="8.9326%" y="149" width="0.0645%" height="15" fill="rgb(222,189,50)" fg:x="277" fg:w="2"/><text x="9.1826%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::span (1 samples, 0.03%)</title><rect x="8.9971%" y="149" width="0.0322%" height="15" fill="rgb(245,148,34)" fg:x="279" fg:w="1"/><text x="9.2471%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain_mut (5 samples, 0.16%)</title><rect x="8.9004%" y="197" width="0.1612%" height="15" fill="rgb(222,29,6)" fg:x="276" fg:w="5"/><text x="9.1504%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (5 samples, 0.16%)</title><rect x="8.9004%" y="181" width="0.1612%" height="15" fill="rgb(221,189,43)" fg:x="276" fg:w="5"/><text x="9.1504%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::tail (2 samples, 0.06%)</title><rect x="8.9971%" y="165" width="0.0645%" height="15" fill="rgb(207,36,27)" fg:x="279" fg:w="2"/><text x="9.2471%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="9.0293%" y="149" width="0.0322%" height="15" fill="rgb(217,90,24)" fg:x="280" fg:w="1"/><text x="9.2793%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="9.0293%" y="133" width="0.0322%" height="15" fill="rgb(224,66,35)" fg:x="280" fg:w="1"/><text x="9.2793%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::store_le (21 samples, 0.68%)</title><rect x="8.4166%" y="213" width="0.6772%" height="15" fill="rgb(221,13,50)" fg:x="261" fg:w="21"/><text x="8.6666%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="9.0616%" y="197" width="0.0322%" height="15" fill="rgb(236,68,49)" fg:x="281" fg:w="1"/><text x="9.3116%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="9.0616%" y="181" width="0.0322%" height="15" fill="rgb(229,146,28)" fg:x="281" fg:w="1"/><text x="9.3116%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="9.0616%" y="165" width="0.0322%" height="15" fill="rgb(225,31,38)" fg:x="281" fg:w="1"/><text x="9.3116%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::span_unchecked (1 samples, 0.03%)</title><rect x="9.0938%" y="165" width="0.0322%" height="15" fill="rgb(250,208,3)" fg:x="282" fg:w="1"/><text x="9.3438%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (2 samples, 0.06%)</title><rect x="9.1261%" y="117" width="0.0645%" height="15" fill="rgb(246,54,23)" fg:x="283" fg:w="2"/><text x="9.3761%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="9.1583%" y="101" width="0.0322%" height="15" fill="rgb(243,76,11)" fg:x="284" fg:w="1"/><text x="9.4083%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (1 samples, 0.03%)</title><rect x="9.1906%" y="117" width="0.0322%" height="15" fill="rgb(245,21,50)" fg:x="285" fg:w="1"/><text x="9.4406%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="9.1906%" y="101" width="0.0322%" height="15" fill="rgb(228,9,43)" fg:x="285" fg:w="1"/><text x="9.4406%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (4 samples, 0.13%)</title><rect x="9.1261%" y="149" width="0.1290%" height="15" fill="rgb(208,100,47)" fg:x="283" fg:w="4"/><text x="9.3761%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (4 samples, 0.13%)</title><rect x="9.1261%" y="133" width="0.1290%" height="15" fill="rgb(232,26,8)" fg:x="283" fg:w="4"/><text x="9.3761%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="9.2228%" y="117" width="0.0322%" height="15" fill="rgb(216,166,38)" fg:x="286" fg:w="1"/><text x="9.4728%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::span_unchecked (1 samples, 0.03%)</title><rect x="9.2551%" y="149" width="0.0322%" height="15" fill="rgb(251,202,51)" fg:x="287" fg:w="1"/><text x="9.5051%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="9.2551%" y="133" width="0.0322%" height="15" fill="rgb(254,216,34)" fg:x="287" fg:w="1"/><text x="9.5051%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (2 samples, 0.06%)</title><rect x="9.2873%" y="133" width="0.0645%" height="15" fill="rgb(251,32,27)" fg:x="288" fg:w="2"/><text x="9.5373%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="9.2873%" y="117" width="0.0645%" height="15" fill="rgb(208,127,28)" fg:x="288" fg:w="2"/><text x="9.5373%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (3 samples, 0.10%)</title><rect x="9.2873%" y="149" width="0.0967%" height="15" fill="rgb(224,137,22)" fg:x="288" fg:w="3"/><text x="9.5373%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="9.3518%" y="133" width="0.0322%" height="15" fill="rgb(254,70,32)" fg:x="290" fg:w="1"/><text x="9.6018%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="9.3518%" y="117" width="0.0322%" height="15" fill="rgb(229,75,37)" fg:x="290" fg:w="1"/><text x="9.6018%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::Chunks&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.32%)</title><rect x="9.0938%" y="181" width="0.3225%" height="15" fill="rgb(252,64,23)" fg:x="282" fg:w="10"/><text x="9.3438%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked (9 samples, 0.29%)</title><rect x="9.1261%" y="165" width="0.2902%" height="15" fill="rgb(232,162,48)" fg:x="283" fg:w="9"/><text x="9.3761%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="9.3841%" y="149" width="0.0322%" height="15" fill="rgb(246,160,12)" fg:x="291" fg:w="1"/><text x="9.6341%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="9.3841%" y="133" width="0.0322%" height="15" fill="rgb(247,166,0)" fg:x="291" fg:w="1"/><text x="9.6341%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="9.3841%" y="117" width="0.0322%" height="15" fill="rgb(249,219,21)" fg:x="291" fg:w="1"/><text x="9.6341%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (1 samples, 0.03%)</title><rect x="9.4163%" y="117" width="0.0322%" height="15" fill="rgb(205,209,3)" fg:x="292" fg:w="1"/><text x="9.6663%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (1 samples, 0.03%)</title><rect x="9.4163%" y="101" width="0.0322%" height="15" fill="rgb(243,44,1)" fg:x="292" fg:w="1"/><text x="9.6663%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="9.4163%" y="85" width="0.0322%" height="15" fill="rgb(206,159,16)" fg:x="292" fg:w="1"/><text x="9.6663%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="9.4163%" y="69" width="0.0322%" height="15" fill="rgb(244,77,30)" fg:x="292" fg:w="1"/><text x="9.6663%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (1 samples, 0.03%)</title><rect x="9.4163%" y="53" width="0.0322%" height="15" fill="rgb(218,69,12)" fg:x="292" fg:w="1"/><text x="9.6663%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::alias_mut (1 samples, 0.03%)</title><rect x="9.4486%" y="117" width="0.0322%" height="15" fill="rgb(212,87,7)" fg:x="293" fg:w="1"/><text x="9.6986%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (1 samples, 0.03%)</title><rect x="9.4486%" y="101" width="0.0322%" height="15" fill="rgb(245,114,25)" fg:x="293" fg:w="1"/><text x="9.6986%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::from_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="9.4486%" y="85" width="0.0322%" height="15" fill="rgb(210,61,42)" fg:x="293" fg:w="1"/><text x="9.6986%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="9.4486%" y="69" width="0.0322%" height="15" fill="rgb(211,52,33)" fg:x="293" fg:w="1"/><text x="9.6986%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut (4 samples, 0.13%)</title><rect x="9.4163%" y="133" width="0.1290%" height="15" fill="rgb(234,58,33)" fg:x="292" fg:w="4"/><text x="9.6663%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitptr (2 samples, 0.06%)</title><rect x="9.4808%" y="117" width="0.0645%" height="15" fill="rgb(220,115,36)" fg:x="294" fg:w="2"/><text x="9.7308%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (1 samples, 0.03%)</title><rect x="9.5131%" y="101" width="0.0322%" height="15" fill="rgb(243,153,54)" fg:x="295" fg:w="1"/><text x="9.7631%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="9.5131%" y="85" width="0.0322%" height="15" fill="rgb(251,47,18)" fg:x="295" fg:w="1"/><text x="9.7631%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="9.5131%" y="69" width="0.0322%" height="15" fill="rgb(242,102,42)" fg:x="295" fg:w="1"/><text x="9.7631%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="9.5131%" y="53" width="0.0322%" height="15" fill="rgb(234,31,38)" fg:x="295" fg:w="1"/><text x="9.7631%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="9.5131%" y="37" width="0.0322%" height="15" fill="rgb(221,117,51)" fg:x="295" fg:w="1"/><text x="9.7631%" y="47.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (2 samples, 0.06%)</title><rect x="9.5453%" y="85" width="0.0645%" height="15" fill="rgb(212,20,18)" fg:x="296" fg:w="2"/><text x="9.7953%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut_noalias (7 samples, 0.23%)</title><rect x="9.4163%" y="149" width="0.2257%" height="15" fill="rgb(245,133,36)" fg:x="292" fg:w="7"/><text x="9.6663%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::unalias_mut (3 samples, 0.10%)</title><rect x="9.5453%" y="133" width="0.0967%" height="15" fill="rgb(212,6,19)" fg:x="296" fg:w="3"/><text x="9.7953%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (3 samples, 0.10%)</title><rect x="9.5453%" y="117" width="0.0967%" height="15" fill="rgb(218,1,36)" fg:x="296" fg:w="3"/><text x="9.7953%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::from_bitslice_ptr_mut (3 samples, 0.10%)</title><rect x="9.5453%" y="101" width="0.0967%" height="15" fill="rgb(246,84,54)" fg:x="296" fg:w="3"/><text x="9.7953%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.03%)</title><rect x="9.6098%" y="85" width="0.0322%" height="15" fill="rgb(242,110,6)" fg:x="298" fg:w="1"/><text x="9.8598%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMut&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.26%)</title><rect x="9.4163%" y="165" width="0.2580%" height="15" fill="rgb(214,47,5)" fg:x="292" fg:w="8"/><text x="9.6663%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::mem::take (1 samples, 0.03%)</title><rect x="9.6421%" y="149" width="0.0322%" height="15" fill="rgb(218,159,25)" fg:x="299" fg:w="1"/><text x="9.8921%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::traits::_&lt;impl core::default::Default for &amp;mut bitvec::slice::BitSlice&lt;T,O&gt;&gt;::default (1 samples, 0.03%)</title><rect x="9.6421%" y="133" width="0.0322%" height="15" fill="rgb(215,211,28)" fg:x="299" fg:w="1"/><text x="9.8921%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::empty_mut (1 samples, 0.03%)</title><rect x="9.6421%" y="117" width="0.0322%" height="15" fill="rgb(238,59,32)" fg:x="299" fg:w="1"/><text x="9.8921%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="9.6421%" y="101" width="0.0322%" height="15" fill="rgb(226,82,3)" fg:x="299" fg:w="1"/><text x="9.8921%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::clone_from_bitslice (73 samples, 2.35%)</title><rect x="7.3525%" y="261" width="2.3541%" height="15" fill="rgb(240,164,32)" fg:x="228" fg:w="73"/><text x="7.6025%" y="271.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::copy_from_bitslice (73 samples, 2.35%)</title><rect x="7.3525%" y="245" width="2.3541%" height="15" fill="rgb(232,46,7)" fg:x="228" fg:w="73"/><text x="7.6025%" y="255.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_copy_from_bitslice (72 samples, 2.32%)</title><rect x="7.3847%" y="229" width="2.3218%" height="15" fill="rgb(229,129,53)" fg:x="229" fg:w="72"/><text x="7.6347%" y="239.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.61%)</title><rect x="9.0938%" y="213" width="0.6127%" height="15" fill="rgb(234,188,29)" fg:x="282" fg:w="19"/><text x="9.3438%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (19 samples, 0.61%)</title><rect x="9.0938%" y="197" width="0.6127%" height="15" fill="rgb(246,141,4)" fg:x="282" fg:w="19"/><text x="9.3438%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMutNoAlias&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.29%)</title><rect x="9.4163%" y="181" width="0.2902%" height="15" fill="rgb(229,23,39)" fg:x="292" fg:w="9"/><text x="9.6663%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="9.6743%" y="165" width="0.0322%" height="15" fill="rgb(206,12,3)" fg:x="300" fg:w="1"/><text x="9.9243%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::store_value (1 samples, 0.03%)</title><rect x="9.7065%" y="245" width="0.0322%" height="15" fill="rgb(252,226,20)" fg:x="301" fg:w="1"/><text x="9.9565%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::fill (2 samples, 0.06%)</title><rect x="9.7388%" y="245" width="0.0645%" height="15" fill="rgb(216,123,35)" fg:x="302" fg:w="2"/><text x="9.9888%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="9.7388%" y="229" width="0.0645%" height="15" fill="rgb(212,68,40)" fg:x="302" fg:w="2"/><text x="9.9888%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::resize_with (3 samples, 0.10%)</title><rect x="9.8033%" y="181" width="0.0967%" height="15" fill="rgb(254,125,32)" fg:x="304" fg:w="3"/><text x="10.0533%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.10%)</title><rect x="9.8033%" y="165" width="0.0967%" height="15" fill="rgb(253,97,22)" fg:x="304" fg:w="3"/><text x="10.0533%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3 samples, 0.10%)</title><rect x="9.8033%" y="149" width="0.0967%" height="15" fill="rgb(241,101,14)" fg:x="304" fg:w="3"/><text x="10.0533%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (3 samples, 0.10%)</title><rect x="9.8033%" y="133" width="0.0967%" height="15" fill="rgb(238,103,29)" fg:x="304" fg:w="3"/><text x="10.0533%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.10%)</title><rect x="9.8033%" y="117" width="0.0967%" height="15" fill="rgb(233,195,47)" fg:x="304" fg:w="3"/><text x="10.0533%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="9.8678%" y="101" width="0.0322%" height="15" fill="rgb(246,218,30)" fg:x="306" fg:w="1"/><text x="10.1178%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaNode::new (80 samples, 2.58%)</title><rect x="7.3525%" y="293" width="2.5798%" height="15" fill="rgb(219,145,47)" fg:x="228" fg:w="80"/><text x="7.6025%" y="303.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::extend_from_bitslice (80 samples, 2.58%)</title><rect x="7.3525%" y="277" width="2.5798%" height="15" fill="rgb(243,12,26)" fg:x="228" fg:w="80"/><text x="7.6025%" y="287.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::resize (7 samples, 0.23%)</title><rect x="9.7065%" y="261" width="0.2257%" height="15" fill="rgb(214,87,16)" fg:x="301" fg:w="7"/><text x="9.9565%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::reserve (4 samples, 0.13%)</title><rect x="9.8033%" y="245" width="0.1290%" height="15" fill="rgb(208,99,42)" fg:x="304" fg:w="4"/><text x="10.0533%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation (4 samples, 0.13%)</title><rect x="9.8033%" y="229" width="0.1290%" height="15" fill="rgb(253,99,2)" fg:x="304" fg:w="4"/><text x="10.0533%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::with_vec (4 samples, 0.13%)</title><rect x="9.8033%" y="213" width="0.1290%" height="15" fill="rgb(220,168,23)" fg:x="304" fg:w="4"/><text x="10.0533%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation::_{{closure}} (4 samples, 0.13%)</title><rect x="9.8033%" y="197" width="0.1290%" height="15" fill="rgb(242,38,24)" fg:x="304" fg:w="4"/><text x="10.0533%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="9.9000%" y="181" width="0.0322%" height="15" fill="rgb(225,182,9)" fg:x="307" fg:w="1"/><text x="10.1500%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="9.9000%" y="165" width="0.0322%" height="15" fill="rgb(243,178,37)" fg:x="307" fg:w="1"/><text x="10.1500%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="9.9000%" y="149" width="0.0322%" height="15" fill="rgb(232,139,19)" fg:x="307" fg:w="1"/><text x="10.1500%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="9.9000%" y="133" width="0.0322%" height="15" fill="rgb(225,201,24)" fg:x="307" fg:w="1"/><text x="10.1500%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="9.9000%" y="117" width="0.0322%" height="15" fill="rgb(221,47,46)" fg:x="307" fg:w="1"/><text x="10.1500%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="9.9645%" y="181" width="0.0967%" height="15" fill="rgb(249,23,13)" fg:x="309" fg:w="3"/><text x="10.2145%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="10.0290%" y="165" width="0.0322%" height="15" fill="rgb(219,9,5)" fg:x="311" fg:w="1"/><text x="10.2790%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="10.0290%" y="149" width="0.0322%" height="15" fill="rgb(254,171,16)" fg:x="311" fg:w="1"/><text x="10.2790%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="10.0290%" y="133" width="0.0322%" height="15" fill="rgb(230,171,20)" fg:x="311" fg:w="1"/><text x="10.2790%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as core::ops::bit::ShlAssign&gt;::shl_assign (2 samples, 0.06%)</title><rect x="10.0613%" y="181" width="0.0645%" height="15" fill="rgb(210,71,41)" fg:x="312" fg:w="2"/><text x="10.3113%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::check (1 samples, 0.03%)</title><rect x="10.1258%" y="181" width="0.0322%" height="15" fill="rgb(206,173,20)" fg:x="314" fg:w="1"/><text x="10.3758%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.03%)</title><rect x="10.1258%" y="165" width="0.0322%" height="15" fill="rgb(233,88,34)" fg:x="314" fg:w="1"/><text x="10.3758%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::range::RangeBounds::contains (1 samples, 0.03%)</title><rect x="10.1258%" y="149" width="0.0322%" height="15" fill="rgb(223,209,46)" fg:x="314" fg:w="1"/><text x="10.3758%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as core::ops::bit::ShlAssign&gt;::shl_assign (2 samples, 0.06%)</title><rect x="10.1580%" y="165" width="0.0645%" height="15" fill="rgb(250,43,18)" fg:x="315" fg:w="2"/><text x="10.4080%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::maybe_shift_left (5 samples, 0.16%)</title><rect x="10.1580%" y="181" width="0.1612%" height="15" fill="rgb(208,13,10)" fg:x="315" fg:w="5"/><text x="10.4080%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (3 samples, 0.10%)</title><rect x="10.2225%" y="165" width="0.0967%" height="15" fill="rgb(212,200,36)" fg:x="317" fg:w="3"/><text x="10.4725%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (3 samples, 0.10%)</title><rect x="10.2225%" y="149" width="0.0967%" height="15" fill="rgb(225,90,30)" fg:x="317" fg:w="3"/><text x="10.4725%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (3 samples, 0.10%)</title><rect x="10.3193%" y="181" width="0.0967%" height="15" fill="rgb(236,182,39)" fg:x="320" fg:w="3"/><text x="10.5693%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (3 samples, 0.10%)</title><rect x="10.3193%" y="165" width="0.0967%" height="15" fill="rgb(212,144,35)" fg:x="320" fg:w="3"/><text x="10.5693%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (3 samples, 0.10%)</title><rect x="10.3193%" y="149" width="0.0967%" height="15" fill="rgb(228,63,44)" fg:x="320" fg:w="3"/><text x="10.5693%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (2 samples, 0.06%)</title><rect x="10.3515%" y="133" width="0.0645%" height="15" fill="rgb(228,109,6)" fg:x="321" fg:w="2"/><text x="10.6015%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="10.3837%" y="117" width="0.0322%" height="15" fill="rgb(238,117,24)" fg:x="322" fg:w="1"/><text x="10.6337%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="10.4160%" y="181" width="0.0322%" height="15" fill="rgb(242,26,26)" fg:x="323" fg:w="1"/><text x="10.6660%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="10.4482%" y="181" width="0.0322%" height="15" fill="rgb(221,92,48)" fg:x="324" fg:w="1"/><text x="10.6982%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="10.4805%" y="181" width="0.0322%" height="15" fill="rgb(209,209,32)" fg:x="325" fg:w="1"/><text x="10.7305%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;wyz::comu::Address&lt;wyz::comu::Const,[T]&gt; as wyz::comu::SliceReferential&gt;::from_raw_parts (1 samples, 0.03%)</title><rect x="10.5772%" y="133" width="0.0322%" height="15" fill="rgb(221,70,22)" fg:x="328" fg:w="1"/><text x="10.8272%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::mask (2 samples, 0.06%)</title><rect x="10.6095%" y="117" width="0.0645%" height="15" fill="rgb(248,145,5)" fg:x="329" fg:w="2"/><text x="10.8595%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.03%)</title><rect x="10.6417%" y="101" width="0.0322%" height="15" fill="rgb(226,116,26)" fg:x="330" fg:w="1"/><text x="10.8917%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::PartialElement&lt;M,T,O&gt;::new (3 samples, 0.10%)</title><rect x="10.6095%" y="133" width="0.0967%" height="15" fill="rgb(244,5,17)" fg:x="329" fg:w="3"/><text x="10.8595%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.03%)</title><rect x="10.6740%" y="117" width="0.0322%" height="15" fill="rgb(252,159,33)" fg:x="331" fg:w="1"/><text x="10.9240%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::add::_{{closure}} (1 samples, 0.03%)</title><rect x="10.7062%" y="117" width="0.0322%" height="15" fill="rgb(206,71,0)" fg:x="332" fg:w="1"/><text x="10.9562%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::add (2 samples, 0.06%)</title><rect x="10.7062%" y="133" width="0.0645%" height="15" fill="rgb(233,118,54)" fg:x="332" fg:w="2"/><text x="10.9562%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="10.7385%" y="117" width="0.0322%" height="15" fill="rgb(234,83,48)" fg:x="333" fg:w="1"/><text x="10.9885%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::major (10 samples, 0.32%)</title><rect x="10.5450%" y="149" width="0.3225%" height="15" fill="rgb(228,3,54)" fg:x="327" fg:w="10"/><text x="10.7950%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::cast (3 samples, 0.10%)</title><rect x="10.7707%" y="133" width="0.0967%" height="15" fill="rgb(226,155,13)" fg:x="334" fg:w="3"/><text x="11.0207%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (3 samples, 0.10%)</title><rect x="10.7707%" y="117" width="0.0967%" height="15" fill="rgb(241,28,37)" fg:x="334" fg:w="3"/><text x="11.0207%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="10.8352%" y="101" width="0.0322%" height="15" fill="rgb(233,93,10)" fg:x="336" fg:w="1"/><text x="11.0852%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="10.8675%" y="149" width="0.0322%" height="15" fill="rgb(225,113,19)" fg:x="337" fg:w="1"/><text x="11.1175%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="10.8675%" y="133" width="0.0322%" height="15" fill="rgb(241,2,18)" fg:x="337" fg:w="1"/><text x="11.1175%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="10.8675%" y="117" width="0.0322%" height="15" fill="rgb(228,207,21)" fg:x="337" fg:w="1"/><text x="11.1175%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="10.8675%" y="101" width="0.0322%" height="15" fill="rgb(213,211,35)" fg:x="337" fg:w="1"/><text x="11.1175%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain (14 samples, 0.45%)</title><rect x="10.5127%" y="181" width="0.4515%" height="15" fill="rgb(209,83,10)" fg:x="326" fg:w="14"/><text x="10.7627%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (14 samples, 0.45%)</title><rect x="10.5127%" y="165" width="0.4515%" height="15" fill="rgb(209,164,1)" fg:x="326" fg:w="14"/><text x="10.7627%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::tail (2 samples, 0.06%)</title><rect x="10.8997%" y="149" width="0.0645%" height="15" fill="rgb(213,184,43)" fg:x="338" fg:w="2"/><text x="11.1497%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::span (2 samples, 0.06%)</title><rect x="10.8997%" y="133" width="0.0645%" height="15" fill="rgb(231,61,34)" fg:x="338" fg:w="2"/><text x="11.1497%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitEnd&lt;R&gt;::span (2 samples, 0.06%)</title><rect x="10.8997%" y="117" width="0.0645%" height="15" fill="rgb(235,75,3)" fg:x="338" fg:w="2"/><text x="11.1497%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="10.9642%" y="181" width="0.0322%" height="15" fill="rgb(220,106,47)" fg:x="340" fg:w="1"/><text x="11.2142%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le (34 samples, 1.10%)</title><rect x="9.9323%" y="197" width="1.0964%" height="15" fill="rgb(210,196,33)" fg:x="308" fg:w="34"/><text x="10.1823%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="10.9965%" y="181" width="0.0322%" height="15" fill="rgb(229,154,42)" fg:x="341" fg:w="1"/><text x="11.2465%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::store_value (1 samples, 0.03%)</title><rect x="11.0609%" y="181" width="0.0322%" height="15" fill="rgb(228,114,26)" fg:x="343" fg:w="1"/><text x="11.3109%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::maybe_shift_right (1 samples, 0.03%)</title><rect x="11.0932%" y="181" width="0.0322%" height="15" fill="rgb(208,144,1)" fg:x="344" fg:w="1"/><text x="11.3432%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (6 samples, 0.19%)</title><rect x="11.1254%" y="149" width="0.1935%" height="15" fill="rgb(239,112,37)" fg:x="345" fg:w="6"/><text x="11.3754%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (5 samples, 0.16%)</title><rect x="11.1577%" y="133" width="0.1612%" height="15" fill="rgb(210,96,50)" fg:x="346" fg:w="5"/><text x="11.4077%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (3 samples, 0.10%)</title><rect x="11.2222%" y="117" width="0.0967%" height="15" fill="rgb(222,178,2)" fg:x="348" fg:w="3"/><text x="11.4722%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.06%)</title><rect x="11.2544%" y="101" width="0.0645%" height="15" fill="rgb(226,74,18)" fg:x="349" fg:w="2"/><text x="11.5044%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (7 samples, 0.23%)</title><rect x="11.1254%" y="181" width="0.2257%" height="15" fill="rgb(225,67,54)" fg:x="345" fg:w="7"/><text x="11.3754%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (7 samples, 0.23%)</title><rect x="11.1254%" y="165" width="0.2257%" height="15" fill="rgb(251,92,32)" fg:x="345" fg:w="7"/><text x="11.3754%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="11.3189%" y="149" width="0.0322%" height="15" fill="rgb(228,149,22)" fg:x="351" fg:w="1"/><text x="11.5689%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (1 samples, 0.03%)</title><rect x="11.3834%" y="149" width="0.0322%" height="15" fill="rgb(243,54,13)" fg:x="353" fg:w="1"/><text x="11.6334%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="11.3834%" y="133" width="0.0322%" height="15" fill="rgb(243,180,28)" fg:x="353" fg:w="1"/><text x="11.6334%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::elements (1 samples, 0.03%)</title><rect x="11.4157%" y="149" width="0.0322%" height="15" fill="rgb(208,167,24)" fg:x="354" fg:w="1"/><text x="11.6657%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::elts (1 samples, 0.03%)</title><rect x="11.4157%" y="133" width="0.0322%" height="15" fill="rgb(245,73,45)" fg:x="354" fg:w="1"/><text x="11.6657%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="11.4157%" y="117" width="0.0322%" height="15" fill="rgb(237,203,48)" fg:x="354" fg:w="1"/><text x="11.6657%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="11.4479%" y="149" width="0.0322%" height="15" fill="rgb(211,197,16)" fg:x="355" fg:w="1"/><text x="11.6979%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="11.4479%" y="133" width="0.0322%" height="15" fill="rgb(243,99,51)" fg:x="355" fg:w="1"/><text x="11.6979%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="11.4479%" y="117" width="0.0322%" height="15" fill="rgb(215,123,29)" fg:x="355" fg:w="1"/><text x="11.6979%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="11.4479%" y="101" width="0.0322%" height="15" fill="rgb(239,186,37)" fg:x="355" fg:w="1"/><text x="11.6979%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain_mut (7 samples, 0.23%)</title><rect x="11.3512%" y="181" width="0.2257%" height="15" fill="rgb(252,136,39)" fg:x="352" fg:w="7"/><text x="11.6012%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (7 samples, 0.23%)</title><rect x="11.3512%" y="165" width="0.2257%" height="15" fill="rgb(223,213,32)" fg:x="352" fg:w="7"/><text x="11.6012%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::tail (3 samples, 0.10%)</title><rect x="11.4802%" y="149" width="0.0967%" height="15" fill="rgb(233,115,5)" fg:x="356" fg:w="3"/><text x="11.7302%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::span (2 samples, 0.06%)</title><rect x="11.5124%" y="133" width="0.0645%" height="15" fill="rgb(207,226,44)" fg:x="357" fg:w="2"/><text x="11.7624%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitEnd&lt;R&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="11.5124%" y="117" width="0.0645%" height="15" fill="rgb(208,126,0)" fg:x="357" fg:w="2"/><text x="11.7624%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="11.5447%" y="101" width="0.0322%" height="15" fill="rgb(244,66,21)" fg:x="358" fg:w="1"/><text x="11.7947%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="11.5447%" y="85" width="0.0322%" height="15" fill="rgb(222,97,12)" fg:x="358" fg:w="1"/><text x="11.7947%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::store_le (18 samples, 0.58%)</title><rect x="11.0287%" y="197" width="0.5805%" height="15" fill="rgb(219,213,19)" fg:x="342" fg:w="18"/><text x="11.2787%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="11.5769%" y="181" width="0.0322%" height="15" fill="rgb(252,169,30)" fg:x="359" fg:w="1"/><text x="11.8269%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="11.6092%" y="101" width="0.0322%" height="15" fill="rgb(206,32,51)" fg:x="360" fg:w="1"/><text x="11.8592%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="11.6092%" y="85" width="0.0322%" height="15" fill="rgb(250,172,42)" fg:x="360" fg:w="1"/><text x="11.8592%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="11.6092%" y="69" width="0.0322%" height="15" fill="rgb(209,34,43)" fg:x="360" fg:w="1"/><text x="11.8592%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (2 samples, 0.06%)</title><rect x="11.6092%" y="133" width="0.0645%" height="15" fill="rgb(223,11,35)" fg:x="360" fg:w="2"/><text x="11.8592%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (2 samples, 0.06%)</title><rect x="11.6092%" y="117" width="0.0645%" height="15" fill="rgb(251,219,26)" fg:x="360" fg:w="2"/><text x="11.8592%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (1 samples, 0.03%)</title><rect x="11.6414%" y="101" width="0.0322%" height="15" fill="rgb(231,119,3)" fg:x="361" fg:w="1"/><text x="11.8914%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="11.6414%" y="85" width="0.0322%" height="15" fill="rgb(216,97,11)" fg:x="361" fg:w="1"/><text x="11.8914%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::get_addr (1 samples, 0.03%)</title><rect x="11.6737%" y="117" width="0.0322%" height="15" fill="rgb(223,59,9)" fg:x="362" fg:w="1"/><text x="11.9237%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::const_ptr::_&lt;impl *const T&gt;::read_unaligned (1 samples, 0.03%)</title><rect x="11.6737%" y="101" width="0.0322%" height="15" fill="rgb(233,93,31)" fg:x="362" fg:w="1"/><text x="11.9237%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::span_unchecked (2 samples, 0.06%)</title><rect x="11.6737%" y="133" width="0.0645%" height="15" fill="rgb(239,81,33)" fg:x="362" fg:w="2"/><text x="11.9237%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="11.7059%" y="117" width="0.0322%" height="15" fill="rgb(213,120,34)" fg:x="363" fg:w="1"/><text x="11.9559%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (1 samples, 0.03%)</title><rect x="11.7381%" y="133" width="0.0322%" height="15" fill="rgb(243,49,53)" fg:x="364" fg:w="1"/><text x="11.9881%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="11.7381%" y="117" width="0.0322%" height="15" fill="rgb(247,216,33)" fg:x="364" fg:w="1"/><text x="11.9881%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="11.7381%" y="101" width="0.0322%" height="15" fill="rgb(226,26,14)" fg:x="364" fg:w="1"/><text x="11.9881%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (1 samples, 0.03%)</title><rect x="11.7704%" y="117" width="0.0322%" height="15" fill="rgb(215,49,53)" fg:x="365" fg:w="1"/><text x="12.0204%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (1 samples, 0.03%)</title><rect x="11.8026%" y="117" width="0.0322%" height="15" fill="rgb(245,162,40)" fg:x="366" fg:w="1"/><text x="12.0526%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="11.8026%" y="101" width="0.0322%" height="15" fill="rgb(229,68,17)" fg:x="366" fg:w="1"/><text x="12.0526%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="11.8026%" y="85" width="0.0322%" height="15" fill="rgb(213,182,10)" fg:x="366" fg:w="1"/><text x="12.0526%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="11.8026%" y="69" width="0.0322%" height="15" fill="rgb(245,125,30)" fg:x="366" fg:w="1"/><text x="12.0526%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked (8 samples, 0.26%)</title><rect x="11.6092%" y="149" width="0.2580%" height="15" fill="rgb(232,202,2)" fg:x="360" fg:w="8"/><text x="11.8592%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (3 samples, 0.10%)</title><rect x="11.7704%" y="133" width="0.0967%" height="15" fill="rgb(237,140,51)" fg:x="365" fg:w="3"/><text x="12.0204%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="11.8349%" y="117" width="0.0322%" height="15" fill="rgb(236,157,25)" fg:x="367" fg:w="1"/><text x="12.0849%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="11.8349%" y="101" width="0.0322%" height="15" fill="rgb(219,209,0)" fg:x="367" fg:w="1"/><text x="12.0849%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::Chunks&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.29%)</title><rect x="11.6092%" y="165" width="0.2902%" height="15" fill="rgb(240,116,54)" fg:x="360" fg:w="9"/><text x="11.8592%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="11.8671%" y="149" width="0.0322%" height="15" fill="rgb(216,10,36)" fg:x="368" fg:w="1"/><text x="12.1171%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="11.8671%" y="133" width="0.0322%" height="15" fill="rgb(222,72,44)" fg:x="368" fg:w="1"/><text x="12.1171%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="11.8671%" y="117" width="0.0322%" height="15" fill="rgb(232,159,9)" fg:x="368" fg:w="1"/><text x="12.1171%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (1 samples, 0.03%)</title><rect x="11.9639%" y="69" width="0.0322%" height="15" fill="rgb(210,39,32)" fg:x="371" fg:w="1"/><text x="12.2139%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="11.9639%" y="53" width="0.0322%" height="15" fill="rgb(216,194,45)" fg:x="371" fg:w="1"/><text x="12.2139%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (2 samples, 0.06%)</title><rect x="11.9639%" y="101" width="0.0645%" height="15" fill="rgb(218,18,35)" fg:x="371" fg:w="2"/><text x="12.2139%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (2 samples, 0.06%)</title><rect x="11.9639%" y="85" width="0.0645%" height="15" fill="rgb(207,83,51)" fg:x="371" fg:w="2"/><text x="12.2139%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="11.9961%" y="69" width="0.0322%" height="15" fill="rgb(225,63,43)" fg:x="372" fg:w="1"/><text x="12.2461%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="11.9961%" y="53" width="0.0322%" height="15" fill="rgb(207,57,36)" fg:x="372" fg:w="1"/><text x="12.2461%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::get_addr (1 samples, 0.03%)</title><rect x="12.0284%" y="101" width="0.0322%" height="15" fill="rgb(216,99,33)" fg:x="373" fg:w="1"/><text x="12.2784%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::get_addr (1 samples, 0.03%)</title><rect x="12.0606%" y="85" width="0.0322%" height="15" fill="rgb(225,42,16)" fg:x="374" fg:w="1"/><text x="12.3106%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::const_ptr::_&lt;impl *const T&gt;::read_unaligned (1 samples, 0.03%)</title><rect x="12.0606%" y="69" width="0.0322%" height="15" fill="rgb(220,201,45)" fg:x="374" fg:w="1"/><text x="12.3106%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::span_unchecked (2 samples, 0.06%)</title><rect x="12.0606%" y="101" width="0.0645%" height="15" fill="rgb(225,33,4)" fg:x="374" fg:w="2"/><text x="12.3106%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="12.0929%" y="85" width="0.0322%" height="15" fill="rgb(224,33,50)" fg:x="375" fg:w="1"/><text x="12.3429%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (2 samples, 0.06%)</title><rect x="12.1251%" y="101" width="0.0645%" height="15" fill="rgb(246,198,51)" fg:x="376" fg:w="2"/><text x="12.3751%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (2 samples, 0.06%)</title><rect x="12.1251%" y="85" width="0.0645%" height="15" fill="rgb(205,22,4)" fg:x="376" fg:w="2"/><text x="12.3751%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="12.1574%" y="69" width="0.0322%" height="15" fill="rgb(206,3,8)" fg:x="377" fg:w="1"/><text x="12.4074%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::alias_mut (1 samples, 0.03%)</title><rect x="12.1896%" y="101" width="0.0322%" height="15" fill="rgb(251,23,15)" fg:x="378" fg:w="1"/><text x="12.4396%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="12.1896%" y="85" width="0.0322%" height="15" fill="rgb(252,88,28)" fg:x="378" fg:w="1"/><text x="12.4396%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="12.1896%" y="69" width="0.0322%" height="15" fill="rgb(212,127,14)" fg:x="378" fg:w="1"/><text x="12.4396%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="12.1896%" y="53" width="0.0322%" height="15" fill="rgb(247,145,37)" fg:x="378" fg:w="1"/><text x="12.4396%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitptr (1 samples, 0.03%)</title><rect x="12.2219%" y="101" width="0.0322%" height="15" fill="rgb(209,117,53)" fg:x="379" fg:w="1"/><text x="12.4719%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (1 samples, 0.03%)</title><rect x="12.2219%" y="85" width="0.0322%" height="15" fill="rgb(212,90,42)" fg:x="379" fg:w="1"/><text x="12.4719%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::from_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="12.2219%" y="69" width="0.0322%" height="15" fill="rgb(218,164,37)" fg:x="379" fg:w="1"/><text x="12.4719%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="12.2219%" y="53" width="0.0322%" height="15" fill="rgb(246,65,34)" fg:x="379" fg:w="1"/><text x="12.4719%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut (12 samples, 0.39%)</title><rect x="11.8994%" y="117" width="0.3870%" height="15" fill="rgb(231,100,33)" fg:x="369" fg:w="12"/><text x="12.1494%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="12.2541%" y="101" width="0.0322%" height="15" fill="rgb(228,126,14)" fg:x="380" fg:w="1"/><text x="12.5041%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="12.2541%" y="85" width="0.0322%" height="15" fill="rgb(215,173,21)" fg:x="380" fg:w="1"/><text x="12.5041%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="12.2541%" y="69" width="0.0322%" height="15" fill="rgb(210,6,40)" fg:x="380" fg:w="1"/><text x="12.5041%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::cast (1 samples, 0.03%)</title><rect x="12.2864%" y="101" width="0.0322%" height="15" fill="rgb(212,48,18)" fg:x="381" fg:w="1"/><text x="12.5364%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut_noalias (14 samples, 0.45%)</title><rect x="11.8994%" y="133" width="0.4515%" height="15" fill="rgb(230,214,11)" fg:x="369" fg:w="14"/><text x="12.1494%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::unalias_mut (2 samples, 0.06%)</title><rect x="12.2864%" y="117" width="0.0645%" height="15" fill="rgb(254,105,39)" fg:x="381" fg:w="2"/><text x="12.5364%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="12.3186%" y="101" width="0.0322%" height="15" fill="rgb(245,158,5)" fg:x="382" fg:w="1"/><text x="12.5686%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="12.3186%" y="85" width="0.0322%" height="15" fill="rgb(249,208,11)" fg:x="382" fg:w="1"/><text x="12.5686%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="12.3186%" y="69" width="0.0322%" height="15" fill="rgb(210,39,28)" fg:x="382" fg:w="1"/><text x="12.5686%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="12.3186%" y="53" width="0.0322%" height="15" fill="rgb(211,56,53)" fg:x="382" fg:w="1"/><text x="12.5686%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMut&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.48%)</title><rect x="11.8994%" y="149" width="0.4837%" height="15" fill="rgb(226,201,30)" fg:x="369" fg:w="15"/><text x="12.1494%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::mem::take (1 samples, 0.03%)</title><rect x="12.3509%" y="133" width="0.0322%" height="15" fill="rgb(239,101,34)" fg:x="383" fg:w="1"/><text x="12.6009%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::traits::_&lt;impl core::default::Default for &amp;mut bitvec::slice::BitSlice&lt;T,O&gt;&gt;::default (1 samples, 0.03%)</title><rect x="12.3509%" y="117" width="0.0322%" height="15" fill="rgb(226,209,5)" fg:x="383" fg:w="1"/><text x="12.6009%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::empty_mut (1 samples, 0.03%)</title><rect x="12.3509%" y="101" width="0.0322%" height="15" fill="rgb(250,105,47)" fg:x="383" fg:w="1"/><text x="12.6009%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="12.3509%" y="85" width="0.0322%" height="15" fill="rgb(230,72,3)" fg:x="383" fg:w="1"/><text x="12.6009%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="12.3509%" y="69" width="0.0322%" height="15" fill="rgb(232,218,39)" fg:x="383" fg:w="1"/><text x="12.6009%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="12.3509%" y="53" width="0.0322%" height="15" fill="rgb(248,166,6)" fg:x="383" fg:w="1"/><text x="12.6009%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="12.3509%" y="37" width="0.0322%" height="15" fill="rgb(247,89,20)" fg:x="383" fg:w="1"/><text x="12.6009%" y="47.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::clone_from_bitslice (77 samples, 2.48%)</title><rect x="9.9323%" y="245" width="2.4831%" height="15" fill="rgb(248,130,54)" fg:x="308" fg:w="77"/><text x="10.1823%" y="255.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::copy_from_bitslice (77 samples, 2.48%)</title><rect x="9.9323%" y="229" width="2.4831%" height="15" fill="rgb(234,196,4)" fg:x="308" fg:w="77"/><text x="10.1823%" y="239.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_copy_from_bitslice (77 samples, 2.48%)</title><rect x="9.9323%" y="213" width="2.4831%" height="15" fill="rgb(250,143,31)" fg:x="308" fg:w="77"/><text x="10.1823%" y="223.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.81%)</title><rect x="11.6092%" y="197" width="0.8062%" height="15" fill="rgb(211,110,34)" fg:x="360" fg:w="25"/><text x="11.8592%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (25 samples, 0.81%)</title><rect x="11.6092%" y="181" width="0.8062%" height="15" fill="rgb(215,124,48)" fg:x="360" fg:w="25"/><text x="11.8592%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMutNoAlias&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.52%)</title><rect x="11.8994%" y="165" width="0.5160%" height="15" fill="rgb(216,46,13)" fg:x="369" fg:w="16"/><text x="12.1494%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="12.3831%" y="149" width="0.0322%" height="15" fill="rgb(205,184,25)" fg:x="384" fg:w="1"/><text x="12.6331%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMutNoAlias&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (1 samples, 0.03%)</title><rect x="12.3831%" y="133" width="0.0322%" height="15" fill="rgb(228,1,10)" fg:x="384" fg:w="1"/><text x="12.6331%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::unalias_mut (1 samples, 0.03%)</title><rect x="12.3831%" y="117" width="0.0322%" height="15" fill="rgb(213,116,27)" fg:x="384" fg:w="1"/><text x="12.6331%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_mut_bitspan (1 samples, 0.03%)</title><rect x="12.3831%" y="101" width="0.0322%" height="15" fill="rgb(241,95,50)" fg:x="384" fg:w="1"/><text x="12.6331%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::fill (1 samples, 0.03%)</title><rect x="12.4153%" y="229" width="0.0322%" height="15" fill="rgb(238,48,32)" fg:x="385" fg:w="1"/><text x="12.6653%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="12.4153%" y="213" width="0.0322%" height="15" fill="rgb(235,113,49)" fg:x="385" fg:w="1"/><text x="12.6653%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaNode::new (84 samples, 2.71%)</title><rect x="9.9323%" y="277" width="2.7088%" height="15" fill="rgb(205,127,43)" fg:x="308" fg:w="84"/><text x="10.1823%" y="287.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::extend_from_bitslice (84 samples, 2.71%)</title><rect x="9.9323%" y="261" width="2.7088%" height="15" fill="rgb(250,162,2)" fg:x="308" fg:w="84"/><text x="10.1823%" y="271.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::resize (7 samples, 0.23%)</title><rect x="12.4153%" y="245" width="0.2257%" height="15" fill="rgb(220,13,41)" fg:x="385" fg:w="7"/><text x="12.6653%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::reserve (6 samples, 0.19%)</title><rect x="12.4476%" y="229" width="0.1935%" height="15" fill="rgb(249,221,25)" fg:x="386" fg:w="6"/><text x="12.6976%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation (6 samples, 0.19%)</title><rect x="12.4476%" y="213" width="0.1935%" height="15" fill="rgb(215,208,19)" fg:x="386" fg:w="6"/><text x="12.6976%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::with_vec (6 samples, 0.19%)</title><rect x="12.4476%" y="197" width="0.1935%" height="15" fill="rgb(236,175,2)" fg:x="386" fg:w="6"/><text x="12.6976%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::do_reservation::_{{closure}} (6 samples, 0.19%)</title><rect x="12.4476%" y="181" width="0.1935%" height="15" fill="rgb(241,52,2)" fg:x="386" fg:w="6"/><text x="12.6976%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::resize_with (6 samples, 0.19%)</title><rect x="12.4476%" y="165" width="0.1935%" height="15" fill="rgb(248,140,14)" fg:x="386" fg:w="6"/><text x="12.6976%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (6 samples, 0.19%)</title><rect x="12.4476%" y="149" width="0.1935%" height="15" fill="rgb(253,22,42)" fg:x="386" fg:w="6"/><text x="12.6976%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (6 samples, 0.19%)</title><rect x="12.4476%" y="133" width="0.1935%" height="15" fill="rgb(234,61,47)" fg:x="386" fg:w="6"/><text x="12.6976%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (6 samples, 0.19%)</title><rect x="12.4476%" y="117" width="0.1935%" height="15" fill="rgb(208,226,15)" fg:x="386" fg:w="6"/><text x="12.6976%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.19%)</title><rect x="12.4476%" y="101" width="0.1935%" height="15" fill="rgb(217,221,4)" fg:x="386" fg:w="6"/><text x="12.6976%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le::_{{closure}} (1 samples, 0.03%)</title><rect x="12.6411%" y="165" width="0.0322%" height="15" fill="rgb(212,174,34)" fg:x="392" fg:w="1"/><text x="12.8911%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::sign (1 samples, 0.03%)</title><rect x="12.6411%" y="149" width="0.0322%" height="15" fill="rgb(253,83,4)" fg:x="392" fg:w="1"/><text x="12.8911%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::is_unsigned (1 samples, 0.03%)</title><rect x="12.6411%" y="133" width="0.0322%" height="15" fill="rgb(250,195,49)" fg:x="392" fg:w="1"/><text x="12.8911%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::any::TypeId::of (1 samples, 0.03%)</title><rect x="12.6411%" y="117" width="0.0322%" height="15" fill="rgb(241,192,25)" fg:x="392" fg:w="1"/><text x="12.8911%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="12.6733%" y="165" width="0.0322%" height="15" fill="rgb(208,124,10)" fg:x="393" fg:w="1"/><text x="12.9233%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="12.6733%" y="149" width="0.0322%" height="15" fill="rgb(222,33,0)" fg:x="393" fg:w="1"/><text x="12.9233%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.03%)</title><rect x="12.6733%" y="133" width="0.0322%" height="15" fill="rgb(234,209,28)" fg:x="393" fg:w="1"/><text x="12.9233%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::maybe_shift_left (1 samples, 0.03%)</title><rect x="12.7056%" y="165" width="0.0322%" height="15" fill="rgb(224,11,23)" fg:x="394" fg:w="1"/><text x="12.9556%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="12.7056%" y="149" width="0.0322%" height="15" fill="rgb(232,99,1)" fg:x="394" fg:w="1"/><text x="12.9556%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="12.7056%" y="133" width="0.0322%" height="15" fill="rgb(237,95,45)" fg:x="394" fg:w="1"/><text x="12.9556%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="12.7378%" y="165" width="0.0322%" height="15" fill="rgb(208,109,11)" fg:x="395" fg:w="1"/><text x="12.9878%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="12.7378%" y="149" width="0.0322%" height="15" fill="rgb(216,190,48)" fg:x="395" fg:w="1"/><text x="12.9878%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="12.7378%" y="133" width="0.0322%" height="15" fill="rgb(251,171,36)" fg:x="395" fg:w="1"/><text x="12.9878%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="12.7378%" y="117" width="0.0322%" height="15" fill="rgb(230,62,22)" fg:x="395" fg:w="1"/><text x="12.9878%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="12.7378%" y="101" width="0.0322%" height="15" fill="rgb(225,114,35)" fg:x="395" fg:w="1"/><text x="12.9878%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.03%)</title><rect x="12.7378%" y="85" width="0.0322%" height="15" fill="rgb(215,118,42)" fg:x="395" fg:w="1"/><text x="12.9878%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="12.7701%" y="165" width="0.0322%" height="15" fill="rgb(243,119,21)" fg:x="396" fg:w="1"/><text x="13.0201%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="12.7701%" y="149" width="0.0322%" height="15" fill="rgb(252,177,53)" fg:x="396" fg:w="1"/><text x="13.0201%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="12.8023%" y="133" width="0.0322%" height="15" fill="rgb(237,209,29)" fg:x="397" fg:w="1"/><text x="13.0523%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt; as core::convert::From&lt;&amp;bitvec::slice::BitSlice&lt;T,O&gt;&gt;&gt;::from (1 samples, 0.03%)</title><rect x="12.8023%" y="117" width="0.0322%" height="15" fill="rgb(212,65,23)" fg:x="397" fg:w="1"/><text x="13.0523%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="12.8023%" y="101" width="0.0322%" height="15" fill="rgb(230,222,46)" fg:x="397" fg:w="1"/><text x="13.0523%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::mask (1 samples, 0.03%)</title><rect x="12.8346%" y="101" width="0.0322%" height="15" fill="rgb(215,135,32)" fg:x="398" fg:w="1"/><text x="13.0846%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="12.8346%" y="85" width="0.0322%" height="15" fill="rgb(246,101,22)" fg:x="398" fg:w="1"/><text x="13.0846%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::major (2 samples, 0.06%)</title><rect x="12.8346%" y="133" width="0.0645%" height="15" fill="rgb(206,107,13)" fg:x="398" fg:w="2"/><text x="13.0846%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::PartialElement&lt;M,T,O&gt;::new (2 samples, 0.06%)</title><rect x="12.8346%" y="117" width="0.0645%" height="15" fill="rgb(250,100,44)" fg:x="398" fg:w="2"/><text x="13.0846%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.03%)</title><rect x="12.8668%" y="101" width="0.0322%" height="15" fill="rgb(231,147,38)" fg:x="399" fg:w="1"/><text x="13.1168%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::elements (1 samples, 0.03%)</title><rect x="12.8991%" y="133" width="0.0322%" height="15" fill="rgb(229,8,40)" fg:x="400" fg:w="1"/><text x="13.1491%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::elts (1 samples, 0.03%)</title><rect x="12.8991%" y="117" width="0.0322%" height="15" fill="rgb(221,135,30)" fg:x="400" fg:w="1"/><text x="13.1491%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le (10 samples, 0.32%)</title><rect x="12.6411%" y="181" width="0.3225%" height="15" fill="rgb(249,193,18)" fg:x="392" fg:w="10"/><text x="12.8911%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain (5 samples, 0.16%)</title><rect x="12.8023%" y="165" width="0.1612%" height="15" fill="rgb(209,133,39)" fg:x="397" fg:w="5"/><text x="13.0523%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (5 samples, 0.16%)</title><rect x="12.8023%" y="149" width="0.1612%" height="15" fill="rgb(232,100,14)" fg:x="397" fg:w="5"/><text x="13.0523%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="12.9313%" y="133" width="0.0322%" height="15" fill="rgb(224,185,1)" fg:x="401" fg:w="1"/><text x="13.1813%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="12.9313%" y="117" width="0.0322%" height="15" fill="rgb(223,139,8)" fg:x="401" fg:w="1"/><text x="13.1813%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="12.9636%" y="165" width="0.0645%" height="15" fill="rgb(232,213,38)" fg:x="402" fg:w="2"/><text x="13.2136%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="13.0281%" y="165" width="0.0322%" height="15" fill="rgb(207,94,22)" fg:x="404" fg:w="1"/><text x="13.2781%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize_inner (1 samples, 0.03%)</title><rect x="13.0281%" y="149" width="0.0322%" height="15" fill="rgb(219,183,54)" fg:x="404" fg:w="1"/><text x="13.2781%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="13.0281%" y="133" width="0.0322%" height="15" fill="rgb(216,185,54)" fg:x="404" fg:w="1"/><text x="13.2781%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="13.0281%" y="117" width="0.0322%" height="15" fill="rgb(254,217,39)" fg:x="404" fg:w="1"/><text x="13.2781%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="13.0603%" y="165" width="0.0322%" height="15" fill="rgb(240,178,23)" fg:x="405" fg:w="1"/><text x="13.3103%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="13.0603%" y="149" width="0.0322%" height="15" fill="rgb(218,11,47)" fg:x="405" fg:w="1"/><text x="13.3103%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::store_le (5 samples, 0.16%)</title><rect x="12.9636%" y="181" width="0.1612%" height="15" fill="rgb(218,51,51)" fg:x="402" fg:w="5"/><text x="13.2136%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain_mut (1 samples, 0.03%)</title><rect x="13.0926%" y="165" width="0.0322%" height="15" fill="rgb(238,126,27)" fg:x="406" fg:w="1"/><text x="13.3426%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="13.0926%" y="149" width="0.0322%" height="15" fill="rgb(249,202,22)" fg:x="406" fg:w="1"/><text x="13.3426%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::spanning (1 samples, 0.03%)</title><rect x="13.0926%" y="133" width="0.0322%" height="15" fill="rgb(254,195,49)" fg:x="406" fg:w="1"/><text x="13.3426%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;wyz::comu::Address&lt;wyz::comu::Mut,[T]&gt; as wyz::comu::SliceReferential&gt;::from_raw_parts (1 samples, 0.03%)</title><rect x="13.0926%" y="117" width="0.0322%" height="15" fill="rgb(208,123,14)" fg:x="406" fg:w="1"/><text x="13.3426%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="13.0926%" y="101" width="0.0322%" height="15" fill="rgb(224,200,8)" fg:x="406" fg:w="1"/><text x="13.3426%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut (1 samples, 0.03%)</title><rect x="13.1570%" y="101" width="0.0322%" height="15" fill="rgb(217,61,36)" fg:x="408" fg:w="1"/><text x="13.4070%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (1 samples, 0.03%)</title><rect x="13.1570%" y="85" width="0.0322%" height="15" fill="rgb(206,35,45)" fg:x="408" fg:w="1"/><text x="13.4070%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (1 samples, 0.03%)</title><rect x="13.1570%" y="69" width="0.0322%" height="15" fill="rgb(217,65,33)" fg:x="408" fg:w="1"/><text x="13.4070%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (1 samples, 0.03%)</title><rect x="13.1570%" y="53" width="0.0322%" height="15" fill="rgb(222,158,48)" fg:x="408" fg:w="1"/><text x="13.4070%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut_noalias (2 samples, 0.06%)</title><rect x="13.1570%" y="117" width="0.0645%" height="15" fill="rgb(254,2,54)" fg:x="408" fg:w="2"/><text x="13.4070%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::unalias_mut (1 samples, 0.03%)</title><rect x="13.1893%" y="101" width="0.0322%" height="15" fill="rgb(250,143,38)" fg:x="409" fg:w="1"/><text x="13.4393%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_mut (1 samples, 0.03%)</title><rect x="13.1893%" y="85" width="0.0322%" height="15" fill="rgb(248,25,0)" fg:x="409" fg:w="1"/><text x="13.4393%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Mut,T,O&gt;::into_bitslice_ptr_mut (1 samples, 0.03%)</title><rect x="13.1893%" y="69" width="0.0322%" height="15" fill="rgb(206,152,27)" fg:x="409" fg:w="1"/><text x="13.4393%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.13%)</title><rect x="13.1248%" y="181" width="0.1290%" height="15" fill="rgb(240,77,30)" fg:x="407" fg:w="4"/><text x="13.3748%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4 samples, 0.13%)</title><rect x="13.1248%" y="165" width="0.1290%" height="15" fill="rgb(231,5,3)" fg:x="407" fg:w="4"/><text x="13.3748%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMutNoAlias&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="13.1570%" y="149" width="0.0967%" height="15" fill="rgb(207,226,32)" fg:x="408" fg:w="3"/><text x="13.4070%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMut&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="13.1570%" y="133" width="0.0967%" height="15" fill="rgb(222,207,47)" fg:x="408" fg:w="3"/><text x="13.4070%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min (1 samples, 0.03%)</title><rect x="13.2215%" y="117" width="0.0322%" height="15" fill="rgb(229,115,45)" fg:x="410" fg:w="1"/><text x="13.4715%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="13.2215%" y="101" width="0.0322%" height="15" fill="rgb(224,191,6)" fg:x="410" fg:w="1"/><text x="13.4715%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::min_by (1 samples, 0.03%)</title><rect x="13.2215%" y="85" width="0.0322%" height="15" fill="rgb(230,227,24)" fg:x="410" fg:w="1"/><text x="13.4715%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="13.2215%" y="69" width="0.0322%" height="15" fill="rgb(228,80,19)" fg:x="410" fg:w="1"/><text x="13.4715%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.03%)</title><rect x="13.2215%" y="53" width="0.0322%" height="15" fill="rgb(247,229,0)" fg:x="410" fg:w="1"/><text x="13.4715%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaNode::new (20 samples, 0.64%)</title><rect x="12.6411%" y="261" width="0.6450%" height="15" fill="rgb(237,194,15)" fg:x="392" fg:w="20"/><text x="12.8911%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::extend_from_bitslice (20 samples, 0.64%)</title><rect x="12.6411%" y="245" width="0.6450%" height="15" fill="rgb(219,203,20)" fg:x="392" fg:w="20"/><text x="12.8911%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::clone_from_bitslice (20 samples, 0.64%)</title><rect x="12.6411%" y="229" width="0.6450%" height="15" fill="rgb(234,128,8)" fg:x="392" fg:w="20"/><text x="12.8911%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::copy_from_bitslice (20 samples, 0.64%)</title><rect x="12.6411%" y="213" width="0.6450%" height="15" fill="rgb(248,202,8)" fg:x="392" fg:w="20"/><text x="12.8911%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_copy_from_bitslice (20 samples, 0.64%)</title><rect x="12.6411%" y="197" width="0.6450%" height="15" fill="rgb(206,104,37)" fg:x="392" fg:w="20"/><text x="12.8911%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="13.2538%" y="181" width="0.0322%" height="15" fill="rgb(223,8,27)" fg:x="411" fg:w="1"/><text x="13.5038%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le::_{{closure}} (1 samples, 0.03%)</title><rect x="13.2860%" y="149" width="0.0322%" height="15" fill="rgb(216,217,28)" fg:x="412" fg:w="1"/><text x="13.5360%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::sign (1 samples, 0.03%)</title><rect x="13.2860%" y="133" width="0.0322%" height="15" fill="rgb(249,199,1)" fg:x="412" fg:w="1"/><text x="13.5360%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::devel::is_unsigned (1 samples, 0.03%)</title><rect x="13.2860%" y="117" width="0.0322%" height="15" fill="rgb(240,85,17)" fg:x="412" fg:w="1"/><text x="13.5360%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="13.3183%" y="149" width="0.0322%" height="15" fill="rgb(206,108,45)" fg:x="413" fg:w="1"/><text x="13.5683%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="13.3183%" y="133" width="0.0322%" height="15" fill="rgb(245,210,41)" fg:x="413" fg:w="1"/><text x="13.5683%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="13.3183%" y="117" width="0.0322%" height="15" fill="rgb(206,13,37)" fg:x="413" fg:w="1"/><text x="13.5683%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="13.3183%" y="101" width="0.0322%" height="15" fill="rgb(250,61,18)" fg:x="413" fg:w="1"/><text x="13.5683%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::field::resize (1 samples, 0.03%)</title><rect x="13.3505%" y="149" width="0.0322%" height="15" fill="rgb(235,172,48)" fg:x="414" fg:w="1"/><text x="13.6005%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::load_le (4 samples, 0.13%)</title><rect x="13.2860%" y="165" width="0.1290%" height="15" fill="rgb(249,201,17)" fg:x="412" fg:w="4"/><text x="13.5360%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain (1 samples, 0.03%)</title><rect x="13.3828%" y="149" width="0.0322%" height="15" fill="rgb(219,208,6)" fg:x="415" fg:w="1"/><text x="13.6328%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="13.3828%" y="133" width="0.0322%" height="15" fill="rgb(248,31,23)" fg:x="415" fg:w="1"/><text x="13.6328%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::elements (1 samples, 0.03%)</title><rect x="13.3828%" y="117" width="0.0322%" height="15" fill="rgb(245,15,42)" fg:x="415" fg:w="1"/><text x="13.6328%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::elts (1 samples, 0.03%)</title><rect x="13.3828%" y="101" width="0.0322%" height="15" fill="rgb(222,217,39)" fg:x="415" fg:w="1"/><text x="13.6328%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::elts (1 samples, 0.03%)</title><rect x="13.4150%" y="101" width="0.0322%" height="15" fill="rgb(210,219,27)" fg:x="416" fg:w="1"/><text x="13.6650%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::new (2 samples, 0.06%)</title><rect x="13.4150%" y="133" width="0.0645%" height="15" fill="rgb(252,166,36)" fg:x="416" fg:w="2"/><text x="13.6650%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::elements (2 samples, 0.06%)</title><rect x="13.4150%" y="117" width="0.0645%" height="15" fill="rgb(245,132,34)" fg:x="416" fg:w="2"/><text x="13.6650%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="13.4473%" y="101" width="0.0322%" height="15" fill="rgb(236,54,3)" fg:x="417" fg:w="1"/><text x="13.6973%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="13.4473%" y="85" width="0.0322%" height="15" fill="rgb(241,173,43)" fg:x="417" fg:w="1"/><text x="13.6973%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="13.4473%" y="69" width="0.0322%" height="15" fill="rgb(215,190,9)" fg:x="417" fg:w="1"/><text x="13.6973%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="13.4473%" y="53" width="0.0322%" height="15" fill="rgb(242,101,16)" fg:x="417" fg:w="1"/><text x="13.6973%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::BitSlice&lt;T&gt; as bitvec::field::BitField&gt;::store_le (3 samples, 0.10%)</title><rect x="13.4150%" y="165" width="0.0967%" height="15" fill="rgb(223,190,21)" fg:x="416" fg:w="3"/><text x="13.6650%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::domain_mut (3 samples, 0.10%)</title><rect x="13.4150%" y="149" width="0.0967%" height="15" fill="rgb(215,228,25)" fg:x="416" fg:w="3"/><text x="13.6650%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::domain::Domain&lt;M,T,O&gt;::spanning (1 samples, 0.03%)</title><rect x="13.4795%" y="133" width="0.0322%" height="15" fill="rgb(225,36,22)" fg:x="418" fg:w="1"/><text x="13.7295%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_and_insert (8 samples, 0.26%)</title><rect x="13.2860%" y="261" width="0.2580%" height="15" fill="rgb(251,106,46)" fg:x="412" fg:w="8"/><text x="13.5360%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaNode::new (8 samples, 0.26%)</title><rect x="13.2860%" y="245" width="0.2580%" height="15" fill="rgb(208,90,1)" fg:x="412" fg:w="8"/><text x="13.5360%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::extend_from_bitslice (8 samples, 0.26%)</title><rect x="13.2860%" y="229" width="0.2580%" height="15" fill="rgb(243,10,4)" fg:x="412" fg:w="8"/><text x="13.5360%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::clone_from_bitslice (8 samples, 0.26%)</title><rect x="13.2860%" y="213" width="0.2580%" height="15" fill="rgb(212,137,27)" fg:x="412" fg:w="8"/><text x="13.5360%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::copy_from_bitslice (8 samples, 0.26%)</title><rect x="13.2860%" y="197" width="0.2580%" height="15" fill="rgb(231,220,49)" fg:x="412" fg:w="8"/><text x="13.5360%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_copy_from_bitslice (8 samples, 0.26%)</title><rect x="13.2860%" y="181" width="0.2580%" height="15" fill="rgb(237,96,20)" fg:x="412" fg:w="8"/><text x="13.5360%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="13.5118%" y="165" width="0.0322%" height="15" fill="rgb(239,229,30)" fg:x="419" fg:w="1"/><text x="13.7618%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="13.5118%" y="149" width="0.0322%" height="15" fill="rgb(219,65,33)" fg:x="419" fg:w="1"/><text x="13.7618%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMutNoAlias&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="13.5118%" y="133" width="0.0322%" height="15" fill="rgb(243,134,7)" fg:x="419" fg:w="1"/><text x="13.7618%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::slice::iter::ChunksMut&lt;T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="13.5118%" y="117" width="0.0322%" height="15" fill="rgb(216,177,54)" fg:x="419" fg:w="1"/><text x="13.7618%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut_noalias (1 samples, 0.03%)</title><rect x="13.5118%" y="101" width="0.0322%" height="15" fill="rgb(211,160,20)" fg:x="419" fg:w="1"/><text x="13.7618%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked_mut (1 samples, 0.03%)</title><rect x="13.5118%" y="85" width="0.0322%" height="15" fill="rgb(239,85,39)" fg:x="419" fg:w="1"/><text x="13.7618%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::alias_mut (1 samples, 0.03%)</title><rect x="13.5118%" y="69" width="0.0322%" height="15" fill="rgb(232,125,22)" fg:x="419" fg:w="1"/><text x="13.7618%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::cast (1 samples, 0.03%)</title><rect x="13.5118%" y="53" width="0.0322%" height="15" fill="rgb(244,57,34)" fg:x="419" fg:w="1"/><text x="13.7618%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_and_insert (32 samples, 1.03%)</title><rect x="12.6411%" y="277" width="1.0319%" height="15" fill="rgb(214,203,32)" fg:x="392" fg:w="32"/><text x="12.8911%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (4 samples, 0.13%)</title><rect x="13.5440%" y="261" width="0.1290%" height="15" fill="rgb(207,58,43)" fg:x="420" fg:w="4"/><text x="13.7940%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (4 samples, 0.13%)</title><rect x="13.5440%" y="245" width="0.1290%" height="15" fill="rgb(215,193,15)" fg:x="420" fg:w="4"/><text x="13.7940%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.13%)</title><rect x="13.5440%" y="229" width="0.1290%" height="15" fill="rgb(232,15,44)" fg:x="420" fg:w="4"/><text x="13.7940%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.13%)</title><rect x="13.5440%" y="213" width="0.1290%" height="15" fill="rgb(212,3,48)" fg:x="420" fg:w="4"/><text x="13.7940%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.13%)</title><rect x="13.5440%" y="197" width="0.1290%" height="15" fill="rgb(218,128,7)" fg:x="420" fg:w="4"/><text x="13.7940%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.13%)</title><rect x="13.5440%" y="181" width="0.1290%" height="15" fill="rgb(226,216,39)" fg:x="420" fg:w="4"/><text x="13.7940%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.13%)</title><rect x="13.5440%" y="165" width="0.1290%" height="15" fill="rgb(243,47,51)" fg:x="420" fg:w="4"/><text x="13.7940%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="13.5763%" y="149" width="0.0967%" height="15" fill="rgb(241,183,40)" fg:x="421" fg:w="3"/><text x="13.8263%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="13.6408%" y="133" width="0.0322%" height="15" fill="rgb(231,217,32)" fg:x="423" fg:w="1"/><text x="13.8908%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (1 samples, 0.03%)</title><rect x="13.6408%" y="117" width="0.0322%" height="15" fill="rgb(229,61,38)" fg:x="423" fg:w="1"/><text x="13.8908%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="13.8987%" y="133" width="0.0322%" height="15" fill="rgb(225,210,5)" fg:x="431" fg:w="1"/><text x="14.1487%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::option::Option&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.03%)</title><rect x="13.8987%" y="117" width="0.0322%" height="15" fill="rgb(231,79,45)" fg:x="431" fg:w="1"/><text x="14.1487%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.23%)</title><rect x="13.8020%" y="149" width="0.2257%" height="15" fill="rgb(224,100,7)" fg:x="428" fg:w="7"/><text x="14.0520%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (3 samples, 0.10%)</title><rect x="13.9310%" y="133" width="0.0967%" height="15" fill="rgb(241,198,18)" fg:x="432" fg:w="3"/><text x="14.1810%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_and_insert (128 samples, 4.13%)</title><rect x="9.9323%" y="293" width="4.1277%" height="15" fill="rgb(252,97,53)" fg:x="308" fg:w="128"/><text x="10.1823%" y="303.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (12 samples, 0.39%)</title><rect x="13.6730%" y="277" width="0.3870%" height="15" fill="rgb(220,88,7)" fg:x="424" fg:w="12"/><text x="13.9230%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (12 samples, 0.39%)</title><rect x="13.6730%" y="261" width="0.3870%" height="15" fill="rgb(213,176,14)" fg:x="424" fg:w="12"/><text x="13.9230%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.39%)</title><rect x="13.6730%" y="245" width="0.3870%" height="15" fill="rgb(246,73,7)" fg:x="424" fg:w="12"/><text x="13.9230%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.39%)</title><rect x="13.6730%" y="229" width="0.3870%" height="15" fill="rgb(245,64,36)" fg:x="424" fg:w="12"/><text x="13.9230%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.39%)</title><rect x="13.6730%" y="213" width="0.3870%" height="15" fill="rgb(245,80,10)" fg:x="424" fg:w="12"/><text x="13.9230%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.39%)</title><rect x="13.6730%" y="197" width="0.3870%" height="15" fill="rgb(232,107,50)" fg:x="424" fg:w="12"/><text x="13.9230%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (12 samples, 0.39%)</title><rect x="13.6730%" y="181" width="0.3870%" height="15" fill="rgb(253,3,0)" fg:x="424" fg:w="12"/><text x="13.9230%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.32%)</title><rect x="13.7375%" y="165" width="0.3225%" height="15" fill="rgb(212,99,53)" fg:x="426" fg:w="10"/><text x="13.9875%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="14.0277%" y="149" width="0.0322%" height="15" fill="rgb(249,111,54)" fg:x="435" fg:w="1"/><text x="14.2777%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="14.0922%" y="197" width="0.0322%" height="15" fill="rgb(249,55,30)" fg:x="437" fg:w="1"/><text x="14.3422%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="14.4147%" y="149" width="0.0322%" height="15" fill="rgb(237,47,42)" fg:x="447" fg:w="1"/><text x="14.6647%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::option::Option&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.03%)</title><rect x="14.4147%" y="133" width="0.0322%" height="15" fill="rgb(211,20,18)" fg:x="447" fg:w="1"/><text x="14.6647%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="14.4470%" y="149" width="0.0322%" height="15" fill="rgb(231,203,46)" fg:x="448" fg:w="1"/><text x="14.6970%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="14.4147%" y="165" width="0.0967%" height="15" fill="rgb(237,142,3)" fg:x="447" fg:w="3"/><text x="14.6647%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (1 samples, 0.03%)</title><rect x="14.4792%" y="149" width="0.0322%" height="15" fill="rgb(241,107,1)" fg:x="449" fg:w="1"/><text x="14.7292%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_and_insert (223 samples, 7.19%)</title><rect x="7.3525%" y="309" width="7.1912%" height="15" fill="rgb(229,83,13)" fg:x="228" fg:w="223"/><text x="7.6025%" y="319.50">basic_algo..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (15 samples, 0.48%)</title><rect x="14.0600%" y="293" width="0.4837%" height="15" fill="rgb(241,91,40)" fg:x="436" fg:w="15"/><text x="14.3100%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (15 samples, 0.48%)</title><rect x="14.0600%" y="277" width="0.4837%" height="15" fill="rgb(225,3,45)" fg:x="436" fg:w="15"/><text x="14.3100%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.48%)</title><rect x="14.0600%" y="261" width="0.4837%" height="15" fill="rgb(244,223,14)" fg:x="436" fg:w="15"/><text x="14.3100%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.48%)</title><rect x="14.0600%" y="245" width="0.4837%" height="15" fill="rgb(224,124,37)" fg:x="436" fg:w="15"/><text x="14.3100%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.48%)</title><rect x="14.0600%" y="229" width="0.4837%" height="15" fill="rgb(251,171,30)" fg:x="436" fg:w="15"/><text x="14.3100%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.45%)</title><rect x="14.0922%" y="213" width="0.4515%" height="15" fill="rgb(236,46,54)" fg:x="437" fg:w="14"/><text x="14.3422%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (13 samples, 0.42%)</title><rect x="14.1245%" y="197" width="0.4192%" height="15" fill="rgb(245,213,5)" fg:x="438" fg:w="13"/><text x="14.3745%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.26%)</title><rect x="14.2857%" y="181" width="0.2580%" height="15" fill="rgb(230,144,27)" fg:x="443" fg:w="8"/><text x="14.5357%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="14.5114%" y="165" width="0.0322%" height="15" fill="rgb(220,86,6)" fg:x="450" fg:w="1"/><text x="14.7614%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="14.5114%" y="149" width="0.0322%" height="15" fill="rgb(240,20,13)" fg:x="450" fg:w="1"/><text x="14.7614%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::new (1 samples, 0.03%)</title><rect x="14.5114%" y="133" width="0.0322%" height="15" fill="rgb(217,89,34)" fg:x="450" fg:w="1"/><text x="14.7614%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="14.7372%" y="165" width="0.0322%" height="15" fill="rgb(229,13,5)" fg:x="457" fg:w="1"/><text x="14.9872%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::take (4 samples, 0.13%)</title><rect x="14.7694%" y="165" width="0.1290%" height="15" fill="rgb(244,67,35)" fg:x="458" fg:w="4"/><text x="15.0194%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.26%)</title><rect x="14.6727%" y="181" width="0.2580%" height="15" fill="rgb(221,40,2)" fg:x="455" fg:w="8"/><text x="14.9227%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (1 samples, 0.03%)</title><rect x="14.8984%" y="165" width="0.0322%" height="15" fill="rgb(237,157,21)" fg:x="462" fg:w="1"/><text x="15.1484%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.39%)</title><rect x="14.6082%" y="197" width="0.3870%" height="15" fill="rgb(222,94,11)" fg:x="453" fg:w="12"/><text x="14.8582%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.06%)</title><rect x="14.9307%" y="181" width="0.0645%" height="15" fill="rgb(249,113,6)" fg:x="463" fg:w="2"/><text x="15.1807%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="14.9629%" y="165" width="0.0322%" height="15" fill="rgb(238,137,36)" fg:x="464" fg:w="1"/><text x="15.2129%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_and_insert (321 samples, 10.35%)</title><rect x="4.6759%" y="325" width="10.3515%" height="15" fill="rgb(210,102,26)" fg:x="145" fg:w="321"/><text x="4.9259%" y="335.50">basic_algorithm..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (15 samples, 0.48%)</title><rect x="14.5437%" y="309" width="0.4837%" height="15" fill="rgb(218,30,30)" fg:x="451" fg:w="15"/><text x="14.7937%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (15 samples, 0.48%)</title><rect x="14.5437%" y="293" width="0.4837%" height="15" fill="rgb(214,67,26)" fg:x="451" fg:w="15"/><text x="14.7937%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.48%)</title><rect x="14.5437%" y="277" width="0.4837%" height="15" fill="rgb(251,9,53)" fg:x="451" fg:w="15"/><text x="14.7937%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.48%)</title><rect x="14.5437%" y="261" width="0.4837%" height="15" fill="rgb(228,204,25)" fg:x="451" fg:w="15"/><text x="14.7937%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.48%)</title><rect x="14.5437%" y="245" width="0.4837%" height="15" fill="rgb(207,153,8)" fg:x="451" fg:w="15"/><text x="14.7937%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.48%)</title><rect x="14.5437%" y="229" width="0.4837%" height="15" fill="rgb(242,9,16)" fg:x="451" fg:w="15"/><text x="14.7937%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.48%)</title><rect x="14.5437%" y="213" width="0.4837%" height="15" fill="rgb(217,211,10)" fg:x="451" fg:w="15"/><text x="14.7937%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="14.9952%" y="197" width="0.0322%" height="15" fill="rgb(219,228,52)" fg:x="465" fg:w="1"/><text x="15.2452%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="14.9952%" y="181" width="0.0322%" height="15" fill="rgb(231,92,29)" fg:x="465" fg:w="1"/><text x="15.2452%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="14.9952%" y="165" width="0.0322%" height="15" fill="rgb(232,8,23)" fg:x="465" fg:w="1"/><text x="15.2452%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="14.9952%" y="149" width="0.0322%" height="15" fill="rgb(216,211,34)" fg:x="465" fg:w="1"/><text x="15.2452%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="14.9952%" y="133" width="0.0322%" height="15" fill="rgb(236,151,0)" fg:x="465" fg:w="1"/><text x="15.2452%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="14.9952%" y="117" width="0.0322%" height="15" fill="rgb(209,168,3)" fg:x="465" fg:w="1"/><text x="15.2452%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.03%)</title><rect x="14.9952%" y="101" width="0.0322%" height="15" fill="rgb(208,129,28)" fg:x="465" fg:w="1"/><text x="15.2452%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="14.9952%" y="85" width="0.0322%" height="15" fill="rgb(229,78,22)" fg:x="465" fg:w="1"/><text x="15.2452%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="14.9952%" y="69" width="0.0322%" height="15" fill="rgb(228,187,13)" fg:x="465" fg:w="1"/><text x="15.2452%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="14.9952%" y="53" width="0.0322%" height="15" fill="rgb(240,119,24)" fg:x="465" fg:w="1"/><text x="15.2452%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.06%)</title><rect x="15.6079%" y="181" width="0.0645%" height="15" fill="rgb(209,194,42)" fg:x="484" fg:w="2"/><text x="15.8579%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="15.6724%" y="181" width="0.0322%" height="15" fill="rgb(247,200,46)" fg:x="486" fg:w="1"/><text x="15.9224%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.39%)</title><rect x="15.4144%" y="197" width="0.3870%" height="15" fill="rgb(218,76,16)" fg:x="478" fg:w="12"/><text x="15.6644%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (3 samples, 0.10%)</title><rect x="15.7046%" y="181" width="0.0967%" height="15" fill="rgb(225,21,48)" fg:x="487" fg:w="3"/><text x="15.9546%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_and_insert (399 samples, 12.87%)</title><rect x="2.9668%" y="341" width="12.8668%" height="15" fill="rgb(239,223,50)" fg:x="92" fg:w="399"/><text x="3.2168%" y="351.50">basic_algorithms_an..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (25 samples, 0.81%)</title><rect x="15.0274%" y="325" width="0.8062%" height="15" fill="rgb(244,45,21)" fg:x="466" fg:w="25"/><text x="15.2774%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (25 samples, 0.81%)</title><rect x="15.0274%" y="309" width="0.8062%" height="15" fill="rgb(232,33,43)" fg:x="466" fg:w="25"/><text x="15.2774%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (25 samples, 0.81%)</title><rect x="15.0274%" y="293" width="0.8062%" height="15" fill="rgb(209,8,3)" fg:x="466" fg:w="25"/><text x="15.2774%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.81%)</title><rect x="15.0274%" y="277" width="0.8062%" height="15" fill="rgb(214,25,53)" fg:x="466" fg:w="25"/><text x="15.2774%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (25 samples, 0.81%)</title><rect x="15.0274%" y="261" width="0.8062%" height="15" fill="rgb(254,186,54)" fg:x="466" fg:w="25"/><text x="15.2774%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.81%)</title><rect x="15.0274%" y="245" width="0.8062%" height="15" fill="rgb(208,174,49)" fg:x="466" fg:w="25"/><text x="15.2774%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (25 samples, 0.81%)</title><rect x="15.0274%" y="229" width="0.8062%" height="15" fill="rgb(233,191,51)" fg:x="466" fg:w="25"/><text x="15.2774%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.61%)</title><rect x="15.2209%" y="213" width="0.6127%" height="15" fill="rgb(222,134,10)" fg:x="472" fg:w="19"/><text x="15.4709%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="15.8014%" y="197" width="0.0322%" height="15" fill="rgb(230,226,20)" fg:x="490" fg:w="1"/><text x="16.0514%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.06%)</title><rect x="16.0916%" y="197" width="0.0645%" height="15" fill="rgb(251,111,25)" fg:x="499" fg:w="2"/><text x="16.3416%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::option::Option&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.06%)</title><rect x="16.0916%" y="181" width="0.0645%" height="15" fill="rgb(224,40,46)" fg:x="499" fg:w="2"/><text x="16.3416%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::take (2 samples, 0.06%)</title><rect x="16.1561%" y="197" width="0.0645%" height="15" fill="rgb(236,108,47)" fg:x="501" fg:w="2"/><text x="16.4061%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.48%)</title><rect x="15.9626%" y="213" width="0.4837%" height="15" fill="rgb(234,93,0)" fg:x="495" fg:w="15"/><text x="16.2126%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (7 samples, 0.23%)</title><rect x="16.2206%" y="197" width="0.2257%" height="15" fill="rgb(224,213,32)" fg:x="503" fg:w="7"/><text x="16.4706%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="16.4463%" y="213" width="0.0322%" height="15" fill="rgb(251,11,48)" fg:x="510" fg:w="1"/><text x="16.6963%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (26 samples, 0.84%)</title><rect x="15.8336%" y="341" width="0.8384%" height="15" fill="rgb(236,173,5)" fg:x="491" fg:w="26"/><text x="16.0836%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (26 samples, 0.84%)</title><rect x="15.8336%" y="325" width="0.8384%" height="15" fill="rgb(230,95,12)" fg:x="491" fg:w="26"/><text x="16.0836%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.84%)</title><rect x="15.8336%" y="309" width="0.8384%" height="15" fill="rgb(232,209,1)" fg:x="491" fg:w="26"/><text x="16.0836%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.84%)</title><rect x="15.8336%" y="293" width="0.8384%" height="15" fill="rgb(232,6,1)" fg:x="491" fg:w="26"/><text x="16.0836%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 0.84%)</title><rect x="15.8336%" y="277" width="0.8384%" height="15" fill="rgb(210,224,50)" fg:x="491" fg:w="26"/><text x="16.0836%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26 samples, 0.84%)</title><rect x="15.8336%" y="261" width="0.8384%" height="15" fill="rgb(228,127,35)" fg:x="491" fg:w="26"/><text x="16.0836%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (26 samples, 0.84%)</title><rect x="15.8336%" y="245" width="0.8384%" height="15" fill="rgb(245,102,45)" fg:x="491" fg:w="26"/><text x="16.0836%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.77%)</title><rect x="15.8981%" y="229" width="0.7739%" height="15" fill="rgb(214,1,49)" fg:x="493" fg:w="24"/><text x="16.1481%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.19%)</title><rect x="16.4786%" y="213" width="0.1935%" height="15" fill="rgb(226,163,40)" fg:x="511" fg:w="6"/><text x="16.7286%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (4 samples, 0.13%)</title><rect x="16.5431%" y="197" width="0.1290%" height="15" fill="rgb(239,212,28)" fg:x="513" fg:w="4"/><text x="16.7931%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (1 samples, 0.03%)</title><rect x="16.6720%" y="309" width="0.0322%" height="15" fill="rgb(220,20,13)" fg:x="517" fg:w="1"/><text x="16.9220%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (1 samples, 0.03%)</title><rect x="16.6720%" y="293" width="0.0322%" height="15" fill="rgb(210,164,35)" fg:x="517" fg:w="1"/><text x="16.9220%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (1 samples, 0.03%)</title><rect x="16.6720%" y="277" width="0.0322%" height="15" fill="rgb(248,109,41)" fg:x="517" fg:w="1"/><text x="16.9220%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="16.6720%" y="261" width="0.0322%" height="15" fill="rgb(238,23,50)" fg:x="517" fg:w="1"/><text x="16.9220%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_and_insert (456 samples, 14.70%)</title><rect x="2.0316%" y="357" width="14.7049%" height="15" fill="rgb(211,48,49)" fg:x="63" fg:w="456"/><text x="2.2816%" y="367.50">basic_algorithms_and_d..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::split_at (2 samples, 0.06%)</title><rect x="16.6720%" y="341" width="0.0645%" height="15" fill="rgb(223,36,21)" fg:x="517" fg:w="2"/><text x="16.9220%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked (2 samples, 0.06%)</title><rect x="16.6720%" y="325" width="0.0645%" height="15" fill="rgb(207,123,46)" fg:x="517" fg:w="2"/><text x="16.9220%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (1 samples, 0.03%)</title><rect x="16.7043%" y="309" width="0.0322%" height="15" fill="rgb(240,218,32)" fg:x="518" fg:w="1"/><text x="16.9543%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (1 samples, 0.03%)</title><rect x="16.7043%" y="293" width="0.0322%" height="15" fill="rgb(252,5,43)" fg:x="518" fg:w="1"/><text x="16.9543%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (1 samples, 0.03%)</title><rect x="16.7043%" y="277" width="0.0322%" height="15" fill="rgb(252,84,19)" fg:x="518" fg:w="1"/><text x="16.9543%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="16.7043%" y="261" width="0.0322%" height="15" fill="rgb(243,152,39)" fg:x="518" fg:w="1"/><text x="16.9543%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="16.7043%" y="245" width="0.0322%" height="15" fill="rgb(234,160,15)" fg:x="518" fg:w="1"/><text x="16.9543%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="16.7043%" y="229" width="0.0322%" height="15" fill="rgb(237,34,20)" fg:x="518" fg:w="1"/><text x="16.9543%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec::_{{closure}} (1 samples, 0.03%)</title><rect x="16.7365%" y="341" width="0.0322%" height="15" fill="rgb(229,97,13)" fg:x="519" fg:w="1"/><text x="16.9865%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::set_len (1 samples, 0.03%)</title><rect x="16.7365%" y="325" width="0.0322%" height="15" fill="rgb(234,71,50)" fg:x="519" fg:w="1"/><text x="16.9865%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::set_len (1 samples, 0.03%)</title><rect x="16.7365%" y="309" width="0.0322%" height="15" fill="rgb(253,155,4)" fg:x="519" fg:w="1"/><text x="16.9865%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="17.2203%" y="213" width="0.0322%" height="15" fill="rgb(222,185,37)" fg:x="534" fg:w="1"/><text x="17.4703%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::option::Option&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.03%)</title><rect x="17.2203%" y="197" width="0.0322%" height="15" fill="rgb(251,177,13)" fg:x="534" fg:w="1"/><text x="17.4703%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.29%)</title><rect x="17.0268%" y="229" width="0.2902%" height="15" fill="rgb(250,179,40)" fg:x="528" fg:w="9"/><text x="17.2768%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (2 samples, 0.06%)</title><rect x="17.2525%" y="213" width="0.0645%" height="15" fill="rgb(242,44,2)" fg:x="535" fg:w="2"/><text x="17.5025%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.42%)</title><rect x="16.9300%" y="245" width="0.4192%" height="15" fill="rgb(216,177,13)" fg:x="525" fg:w="13"/><text x="17.1800%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="17.3170%" y="229" width="0.0322%" height="15" fill="rgb(216,106,43)" fg:x="537" fg:w="1"/><text x="17.5670%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="17.3492%" y="197" width="0.0322%" height="15" fill="rgb(216,183,2)" fg:x="538" fg:w="1"/><text x="17.5992%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="17.3492%" y="181" width="0.0322%" height="15" fill="rgb(249,75,3)" fg:x="538" fg:w="1"/><text x="17.5992%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="17.3492%" y="165" width="0.0322%" height="15" fill="rgb(219,67,39)" fg:x="538" fg:w="1"/><text x="17.5992%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.03%)</title><rect x="17.3492%" y="149" width="0.0322%" height="15" fill="rgb(253,228,2)" fg:x="538" fg:w="1"/><text x="17.5992%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="17.3492%" y="133" width="0.0322%" height="15" fill="rgb(235,138,27)" fg:x="538" fg:w="1"/><text x="17.5992%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="17.3492%" y="117" width="0.0322%" height="15" fill="rgb(236,97,51)" fg:x="538" fg:w="1"/><text x="17.5992%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="17.3492%" y="101" width="0.0322%" height="15" fill="rgb(240,80,30)" fg:x="538" fg:w="1"/><text x="17.5992%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="17.3492%" y="85" width="0.0322%" height="15" fill="rgb(230,178,19)" fg:x="538" fg:w="1"/><text x="17.5992%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (21 samples, 0.68%)</title><rect x="16.7365%" y="357" width="0.6772%" height="15" fill="rgb(210,190,27)" fg:x="519" fg:w="21"/><text x="16.9865%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (20 samples, 0.64%)</title><rect x="16.7688%" y="341" width="0.6450%" height="15" fill="rgb(222,107,31)" fg:x="520" fg:w="20"/><text x="17.0188%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.64%)</title><rect x="16.7688%" y="325" width="0.6450%" height="15" fill="rgb(216,127,34)" fg:x="520" fg:w="20"/><text x="17.0188%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.64%)</title><rect x="16.7688%" y="309" width="0.6450%" height="15" fill="rgb(234,116,52)" fg:x="520" fg:w="20"/><text x="17.0188%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (20 samples, 0.64%)</title><rect x="16.7688%" y="293" width="0.6450%" height="15" fill="rgb(222,124,15)" fg:x="520" fg:w="20"/><text x="17.0188%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (20 samples, 0.64%)</title><rect x="16.7688%" y="277" width="0.6450%" height="15" fill="rgb(231,179,28)" fg:x="520" fg:w="20"/><text x="17.0188%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (20 samples, 0.64%)</title><rect x="16.7688%" y="261" width="0.6450%" height="15" fill="rgb(226,93,45)" fg:x="520" fg:w="20"/><text x="17.0188%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="17.3492%" y="245" width="0.0645%" height="15" fill="rgb(215,8,51)" fg:x="538" fg:w="2"/><text x="17.5992%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.06%)</title><rect x="17.3492%" y="229" width="0.0645%" height="15" fill="rgb(223,106,5)" fg:x="538" fg:w="2"/><text x="17.5992%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="17.3492%" y="213" width="0.0645%" height="15" fill="rgb(250,191,5)" fg:x="538" fg:w="2"/><text x="17.5992%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="17.3815%" y="197" width="0.0322%" height="15" fill="rgb(242,132,44)" fg:x="539" fg:w="1"/><text x="17.6315%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_and_insert (490 samples, 15.80%)</title><rect x="1.6446%" y="373" width="15.8014%" height="15" fill="rgb(251,152,29)" fg:x="51" fg:w="490"/><text x="1.8946%" y="383.50">basic_algorithms_and_dat..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (1 samples, 0.03%)</title><rect x="17.4137%" y="357" width="0.0322%" height="15" fill="rgb(218,179,5)" fg:x="540" fg:w="1"/><text x="17.6637%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (1 samples, 0.03%)</title><rect x="17.4137%" y="341" width="0.0322%" height="15" fill="rgb(227,67,19)" fg:x="540" fg:w="1"/><text x="17.6637%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (1 samples, 0.03%)</title><rect x="17.4137%" y="325" width="0.0322%" height="15" fill="rgb(233,119,31)" fg:x="540" fg:w="1"/><text x="17.6637%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (1 samples, 0.03%)</title><rect x="17.4137%" y="309" width="0.0322%" height="15" fill="rgb(241,120,22)" fg:x="540" fg:w="1"/><text x="17.6637%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="17.4137%" y="293" width="0.0322%" height="15" fill="rgb(224,102,30)" fg:x="540" fg:w="1"/><text x="17.6637%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (1 samples, 0.03%)</title><rect x="17.4137%" y="277" width="0.0322%" height="15" fill="rgb(210,164,37)" fg:x="540" fg:w="1"/><text x="17.6637%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::to_const (1 samples, 0.03%)</title><rect x="17.4137%" y="261" width="0.0322%" height="15" fill="rgb(226,191,16)" fg:x="540" fg:w="1"/><text x="17.6637%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="17.9297%" y="229" width="0.0322%" height="15" fill="rgb(214,40,45)" fg:x="556" fg:w="1"/><text x="18.1797%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="17.9619%" y="229" width="0.0322%" height="15" fill="rgb(244,29,26)" fg:x="557" fg:w="1"/><text x="18.2119%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.42%)</title><rect x="17.6072%" y="245" width="0.4192%" height="15" fill="rgb(216,16,5)" fg:x="546" fg:w="13"/><text x="17.8572%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (1 samples, 0.03%)</title><rect x="17.9942%" y="229" width="0.0322%" height="15" fill="rgb(249,76,35)" fg:x="558" fg:w="1"/><text x="18.2442%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.10%)</title><rect x="18.0264%" y="245" width="0.0967%" height="15" fill="rgb(207,11,44)" fg:x="559" fg:w="3"/><text x="18.2764%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="18.0909%" y="229" width="0.0322%" height="15" fill="rgb(228,190,49)" fg:x="561" fg:w="1"/><text x="18.3409%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::new (1 samples, 0.03%)</title><rect x="18.0909%" y="213" width="0.0322%" height="15" fill="rgb(214,173,12)" fg:x="561" fg:w="1"/><text x="18.3409%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.68%)</title><rect x="17.4782%" y="261" width="0.6772%" height="15" fill="rgb(218,26,35)" fg:x="542" fg:w="21"/><text x="17.7282%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (1 samples, 0.03%)</title><rect x="18.1232%" y="245" width="0.0322%" height="15" fill="rgb(220,200,19)" fg:x="562" fg:w="1"/><text x="18.3732%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (24 samples, 0.77%)</title><rect x="17.4460%" y="373" width="0.7739%" height="15" fill="rgb(239,95,49)" fg:x="541" fg:w="24"/><text x="17.6960%" y="383.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (24 samples, 0.77%)</title><rect x="17.4460%" y="357" width="0.7739%" height="15" fill="rgb(235,85,53)" fg:x="541" fg:w="24"/><text x="17.6960%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.77%)</title><rect x="17.4460%" y="341" width="0.7739%" height="15" fill="rgb(233,133,31)" fg:x="541" fg:w="24"/><text x="17.6960%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.77%)</title><rect x="17.4460%" y="325" width="0.7739%" height="15" fill="rgb(218,25,20)" fg:x="541" fg:w="24"/><text x="17.6960%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24 samples, 0.77%)</title><rect x="17.4460%" y="309" width="0.7739%" height="15" fill="rgb(252,210,38)" fg:x="541" fg:w="24"/><text x="17.6960%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.77%)</title><rect x="17.4460%" y="293" width="0.7739%" height="15" fill="rgb(242,134,21)" fg:x="541" fg:w="24"/><text x="17.6960%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (24 samples, 0.77%)</title><rect x="17.4460%" y="277" width="0.7739%" height="15" fill="rgb(213,28,48)" fg:x="541" fg:w="24"/><text x="17.6960%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="18.1554%" y="261" width="0.0645%" height="15" fill="rgb(250,196,2)" fg:x="563" fg:w="2"/><text x="18.4054%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.06%)</title><rect x="18.1554%" y="245" width="0.0645%" height="15" fill="rgb(227,5,17)" fg:x="563" fg:w="2"/><text x="18.4054%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="18.1554%" y="229" width="0.0645%" height="15" fill="rgb(221,226,24)" fg:x="563" fg:w="2"/><text x="18.4054%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::finish_grow (2 samples, 0.06%)</title><rect x="18.1554%" y="213" width="0.0645%" height="15" fill="rgb(211,5,48)" fg:x="563" fg:w="2"/><text x="18.4054%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.06%)</title><rect x="18.1554%" y="197" width="0.0645%" height="15" fill="rgb(219,150,6)" fg:x="563" fg:w="2"/><text x="18.4054%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::alloc::Global::grow_impl (2 samples, 0.06%)</title><rect x="18.1554%" y="181" width="0.0645%" height="15" fill="rgb(251,46,16)" fg:x="563" fg:w="2"/><text x="18.4054%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.03%)</title><rect x="18.1877%" y="165" width="0.0322%" height="15" fill="rgb(220,204,40)" fg:x="564" fg:w="1"/><text x="18.4377%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="18.1877%" y="149" width="0.0322%" height="15" fill="rgb(211,85,2)" fg:x="564" fg:w="1"/><text x="18.4377%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.03%)</title><rect x="18.1877%" y="133" width="0.0322%" height="15" fill="rgb(229,17,7)" fg:x="564" fg:w="1"/><text x="18.4377%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (1 samples, 0.03%)</title><rect x="18.1877%" y="117" width="0.0322%" height="15" fill="rgb(239,72,28)" fg:x="564" fg:w="1"/><text x="18.4377%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.03%)</title><rect x="18.1877%" y="101" width="0.0322%" height="15" fill="rgb(230,47,54)" fg:x="564" fg:w="1"/><text x="18.4377%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::insert (520 samples, 16.77%)</title><rect x="1.4834%" y="405" width="16.7688%" height="15" fill="rgb(214,50,8)" fg:x="46" fg:w="520"/><text x="1.7334%" y="415.50">basic_algorithms_and_data_..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_and_insert (520 samples, 16.77%)</title><rect x="1.4834%" y="389" width="16.7688%" height="15" fill="rgb(216,198,43)" fg:x="46" fg:w="520"/><text x="1.7334%" y="399.50">basic_algorithms_and_data_..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::vec::BitVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="18.2199%" y="373" width="0.0322%" height="15" fill="rgb(234,20,35)" fg:x="565" fg:w="1"/><text x="18.4699%" y="383.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::drop::Drop for bitvec::vec::BitVec&lt;T,O&gt;&gt;::drop (1 samples, 0.03%)</title><rect x="18.2199%" y="357" width="0.0322%" height="15" fill="rgb(254,45,19)" fg:x="565" fg:w="1"/><text x="18.4699%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::with_vec (1 samples, 0.03%)</title><rect x="18.2199%" y="341" width="0.0322%" height="15" fill="rgb(219,14,44)" fg:x="565" fg:w="1"/><text x="18.4699%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::drop::Drop for bitvec::vec::BitVec&lt;T,O&gt;&gt;::drop::_{{closure}} (1 samples, 0.03%)</title><rect x="18.2199%" y="325" width="0.0322%" height="15" fill="rgb(217,220,26)" fg:x="565" fg:w="1"/><text x="18.4699%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::mem::manually_drop::ManuallyDrop&lt;T&gt;::drop (1 samples, 0.03%)</title><rect x="18.2199%" y="309" width="0.0322%" height="15" fill="rgb(213,158,28)" fg:x="565" fg:w="1"/><text x="18.4699%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="18.2199%" y="293" width="0.0322%" height="15" fill="rgb(252,51,52)" fg:x="565" fg:w="1"/><text x="18.4699%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="18.2199%" y="277" width="0.0322%" height="15" fill="rgb(246,89,16)" fg:x="565" fg:w="1"/><text x="18.4699%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="18.2199%" y="261" width="0.0322%" height="15" fill="rgb(216,158,49)" fg:x="565" fg:w="1"/><text x="18.4699%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="18.2199%" y="245" width="0.0322%" height="15" fill="rgb(236,107,19)" fg:x="565" fg:w="1"/><text x="18.4699%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (4 samples, 0.13%)</title><rect x="18.5102%" y="229" width="0.1290%" height="15" fill="rgb(228,185,30)" fg:x="574" fg:w="4"/><text x="18.7602%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="18.6069%" y="213" width="0.0322%" height="15" fill="rgb(246,134,8)" fg:x="577" fg:w="1"/><text x="18.8569%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="18.6069%" y="197" width="0.0322%" height="15" fill="rgb(214,143,50)" fg:x="577" fg:w="1"/><text x="18.8569%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="18.6714%" y="213" width="0.0322%" height="15" fill="rgb(228,75,8)" fg:x="579" fg:w="1"/><text x="18.9214%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (6 samples, 0.19%)</title><rect x="18.6391%" y="229" width="0.1935%" height="15" fill="rgb(207,175,4)" fg:x="578" fg:w="6"/><text x="18.8891%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (4 samples, 0.13%)</title><rect x="18.7036%" y="213" width="0.1290%" height="15" fill="rgb(205,108,24)" fg:x="580" fg:w="4"/><text x="18.9536%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (1 samples, 0.03%)</title><rect x="18.8004%" y="197" width="0.0322%" height="15" fill="rgb(244,120,49)" fg:x="583" fg:w="1"/><text x="19.0504%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (6 samples, 0.19%)</title><rect x="18.8326%" y="229" width="0.1935%" height="15" fill="rgb(223,47,38)" fg:x="584" fg:w="6"/><text x="19.0826%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (6 samples, 0.19%)</title><rect x="18.8326%" y="213" width="0.1935%" height="15" fill="rgb(229,179,11)" fg:x="584" fg:w="6"/><text x="19.0826%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (3 samples, 0.10%)</title><rect x="18.9294%" y="197" width="0.0967%" height="15" fill="rgb(231,122,1)" fg:x="587" fg:w="3"/><text x="19.1794%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="18.9616%" y="181" width="0.0645%" height="15" fill="rgb(245,119,9)" fg:x="588" fg:w="2"/><text x="19.2116%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (18 samples, 0.58%)</title><rect x="18.4779%" y="261" width="0.5805%" height="15" fill="rgb(241,163,25)" fg:x="573" fg:w="18"/><text x="18.7279%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (18 samples, 0.58%)</title><rect x="18.4779%" y="245" width="0.5805%" height="15" fill="rgb(217,214,3)" fg:x="573" fg:w="18"/><text x="18.7279%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="19.0261%" y="229" width="0.0322%" height="15" fill="rgb(240,86,28)" fg:x="590" fg:w="1"/><text x="19.2761%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="19.1551%" y="213" width="0.0322%" height="15" fill="rgb(215,47,9)" fg:x="594" fg:w="1"/><text x="19.4051%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (5 samples, 0.16%)</title><rect x="19.2196%" y="181" width="0.1612%" height="15" fill="rgb(252,25,45)" fg:x="596" fg:w="5"/><text x="19.4696%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (4 samples, 0.13%)</title><rect x="19.2519%" y="165" width="0.1290%" height="15" fill="rgb(251,164,9)" fg:x="597" fg:w="4"/><text x="19.5019%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as funty::Integral&gt;::count_ones (2 samples, 0.06%)</title><rect x="19.3163%" y="149" width="0.0645%" height="15" fill="rgb(233,194,0)" fg:x="599" fg:w="2"/><text x="19.5663%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (11 samples, 0.35%)</title><rect x="19.0584%" y="245" width="0.3547%" height="15" fill="rgb(249,111,24)" fg:x="591" fg:w="11"/><text x="19.3084%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (8 samples, 0.26%)</title><rect x="19.1551%" y="229" width="0.2580%" height="15" fill="rgb(250,223,3)" fg:x="594" fg:w="8"/><text x="19.4051%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::store::BitStore::get_bit (7 samples, 0.23%)</title><rect x="19.1874%" y="213" width="0.2257%" height="15" fill="rgb(236,178,37)" fg:x="595" fg:w="7"/><text x="19.4374%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (6 samples, 0.19%)</title><rect x="19.2196%" y="197" width="0.1935%" height="15" fill="rgb(241,158,50)" fg:x="596" fg:w="6"/><text x="19.4696%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="19.3808%" y="181" width="0.0322%" height="15" fill="rgb(213,121,41)" fg:x="601" fg:w="1"/><text x="19.6308%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (12 samples, 0.39%)</title><rect x="19.0584%" y="261" width="0.3870%" height="15" fill="rgb(240,92,3)" fg:x="591" fg:w="12"/><text x="19.3084%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::to_const (1 samples, 0.03%)</title><rect x="19.4131%" y="245" width="0.0322%" height="15" fill="rgb(205,123,3)" fg:x="602" fg:w="1"/><text x="19.6631%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="19.5743%" y="197" width="0.0322%" height="15" fill="rgb(205,97,47)" fg:x="607" fg:w="1"/><text x="19.8243%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (6 samples, 0.19%)</title><rect x="19.4453%" y="229" width="0.1935%" height="15" fill="rgb(247,152,14)" fg:x="603" fg:w="6"/><text x="19.6953%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (4 samples, 0.13%)</title><rect x="19.5098%" y="213" width="0.1290%" height="15" fill="rgb(248,195,53)" fg:x="605" fg:w="4"/><text x="19.7598%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (1 samples, 0.03%)</title><rect x="19.6066%" y="197" width="0.0322%" height="15" fill="rgb(226,201,16)" fg:x="608" fg:w="1"/><text x="19.8566%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (1 samples, 0.03%)</title><rect x="19.6388%" y="229" width="0.0322%" height="15" fill="rgb(205,98,0)" fg:x="609" fg:w="1"/><text x="19.8888%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="19.6388%" y="213" width="0.0322%" height="15" fill="rgb(214,191,48)" fg:x="609" fg:w="1"/><text x="19.8888%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (10 samples, 0.32%)</title><rect x="19.4453%" y="245" width="0.3225%" height="15" fill="rgb(237,112,39)" fg:x="603" fg:w="10"/><text x="19.6953%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (3 samples, 0.10%)</title><rect x="19.6711%" y="229" width="0.0967%" height="15" fill="rgb(247,203,27)" fg:x="610" fg:w="3"/><text x="19.9211%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (3 samples, 0.10%)</title><rect x="19.6711%" y="213" width="0.0967%" height="15" fill="rgb(235,124,28)" fg:x="610" fg:w="3"/><text x="19.9211%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="19.7356%" y="197" width="0.0322%" height="15" fill="rgb(208,207,46)" fg:x="612" fg:w="1"/><text x="19.9856%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="19.7356%" y="181" width="0.0322%" height="15" fill="rgb(234,176,4)" fg:x="612" fg:w="1"/><text x="19.9856%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (2 samples, 0.06%)</title><rect x="19.7678%" y="229" width="0.0645%" height="15" fill="rgb(230,133,28)" fg:x="613" fg:w="2"/><text x="20.0178%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="19.8001%" y="213" width="0.0322%" height="15" fill="rgb(211,137,40)" fg:x="614" fg:w="1"/><text x="20.0501%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (48 samples, 1.55%)</title><rect x="18.3167%" y="277" width="1.5479%" height="15" fill="rgb(254,35,13)" fg:x="568" fg:w="48"/><text x="18.5667%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (13 samples, 0.42%)</title><rect x="19.4453%" y="261" width="0.4192%" height="15" fill="rgb(225,49,51)" fg:x="603" fg:w="13"/><text x="19.6953%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (3 samples, 0.10%)</title><rect x="19.7678%" y="245" width="0.0967%" height="15" fill="rgb(251,10,15)" fg:x="613" fg:w="3"/><text x="20.0178%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="19.8323%" y="229" width="0.0322%" height="15" fill="rgb(228,207,15)" fg:x="615" fg:w="1"/><text x="20.0823%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (54 samples, 1.74%)</title><rect x="18.3167%" y="309" width="1.7414%" height="15" fill="rgb(241,99,19)" fg:x="568" fg:w="54"/><text x="18.5667%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (54 samples, 1.74%)</title><rect x="18.3167%" y="293" width="1.7414%" height="15" fill="rgb(207,104,49)" fg:x="568" fg:w="54"/><text x="18.5667%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (6 samples, 0.19%)</title><rect x="19.8646%" y="277" width="0.1935%" height="15" fill="rgb(234,99,18)" fg:x="616" fg:w="6"/><text x="20.1146%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (6 samples, 0.19%)</title><rect x="19.8646%" y="261" width="0.1935%" height="15" fill="rgb(213,191,49)" fg:x="616" fg:w="6"/><text x="20.1146%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (6 samples, 0.19%)</title><rect x="19.8646%" y="245" width="0.1935%" height="15" fill="rgb(210,226,19)" fg:x="616" fg:w="6"/><text x="20.1146%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="19.9936%" y="229" width="0.0645%" height="15" fill="rgb(229,97,18)" fg:x="620" fg:w="2"/><text x="20.2436%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (57 samples, 1.84%)</title><rect x="18.2844%" y="325" width="1.8381%" height="15" fill="rgb(211,167,15)" fg:x="567" fg:w="57"/><text x="18.5344%" y="335.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (2 samples, 0.06%)</title><rect x="20.0580%" y="309" width="0.0645%" height="15" fill="rgb(210,169,34)" fg:x="622" fg:w="2"/><text x="20.3080%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="20.0903%" y="293" width="0.0322%" height="15" fill="rgb(241,121,31)" fg:x="623" fg:w="1"/><text x="20.3403%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_number_of_matching_bits (62 samples, 2.00%)</title><rect x="18.2522%" y="357" width="1.9994%" height="15" fill="rgb(232,40,11)" fg:x="566" fg:w="62"/><text x="18.5022%" y="367.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (62 samples, 2.00%)</title><rect x="18.2522%" y="341" width="1.9994%" height="15" fill="rgb(205,86,26)" fg:x="566" fg:w="62"/><text x="18.5022%" y="351.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (4 samples, 0.13%)</title><rect x="20.1225%" y="325" width="0.1290%" height="15" fill="rgb(231,126,28)" fg:x="624" fg:w="4"/><text x="20.3725%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (1 samples, 0.03%)</title><rect x="20.2193%" y="309" width="0.0322%" height="15" fill="rgb(219,221,18)" fg:x="627" fg:w="1"/><text x="20.4693%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="20.2193%" y="293" width="0.0322%" height="15" fill="rgb(211,40,0)" fg:x="627" fg:w="1"/><text x="20.4693%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="20.2193%" y="277" width="0.0322%" height="15" fill="rgb(239,85,43)" fg:x="627" fg:w="1"/><text x="20.4693%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (11 samples, 0.35%)</title><rect x="20.6385%" y="213" width="0.3547%" height="15" fill="rgb(231,55,21)" fg:x="640" fg:w="11"/><text x="20.8885%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (5 samples, 0.16%)</title><rect x="20.8320%" y="197" width="0.1612%" height="15" fill="rgb(225,184,43)" fg:x="646" fg:w="5"/><text x="21.0820%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (2 samples, 0.06%)</title><rect x="20.9287%" y="181" width="0.0645%" height="15" fill="rgb(251,158,41)" fg:x="649" fg:w="2"/><text x="21.1787%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="20.9610%" y="165" width="0.0322%" height="15" fill="rgb(234,159,37)" fg:x="650" fg:w="1"/><text x="21.2110%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="21.0577%" y="181" width="0.0322%" height="15" fill="rgb(216,204,22)" fg:x="653" fg:w="1"/><text x="21.3077%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (4 samples, 0.13%)</title><rect x="20.9932%" y="213" width="0.1290%" height="15" fill="rgb(214,17,3)" fg:x="651" fg:w="4"/><text x="21.2432%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (3 samples, 0.10%)</title><rect x="21.0255%" y="197" width="0.0967%" height="15" fill="rgb(212,111,17)" fg:x="652" fg:w="3"/><text x="21.2755%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (1 samples, 0.03%)</title><rect x="21.0900%" y="181" width="0.0322%" height="15" fill="rgb(221,157,24)" fg:x="654" fg:w="1"/><text x="21.3400%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="21.1222%" y="197" width="0.0322%" height="15" fill="rgb(252,16,13)" fg:x="655" fg:w="1"/><text x="21.3722%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (23 samples, 0.74%)</title><rect x="20.6063%" y="245" width="0.7417%" height="15" fill="rgb(221,62,2)" fg:x="639" fg:w="23"/><text x="20.8563%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (23 samples, 0.74%)</title><rect x="20.6063%" y="229" width="0.7417%" height="15" fill="rgb(247,87,22)" fg:x="639" fg:w="23"/><text x="20.8563%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (7 samples, 0.23%)</title><rect x="21.1222%" y="213" width="0.2257%" height="15" fill="rgb(215,73,9)" fg:x="655" fg:w="7"/><text x="21.3722%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (6 samples, 0.19%)</title><rect x="21.1545%" y="197" width="0.1935%" height="15" fill="rgb(207,175,33)" fg:x="656" fg:w="6"/><text x="21.4045%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (4 samples, 0.13%)</title><rect x="21.2190%" y="181" width="0.1290%" height="15" fill="rgb(243,129,54)" fg:x="658" fg:w="4"/><text x="21.4690%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (3 samples, 0.10%)</title><rect x="21.2512%" y="165" width="0.0967%" height="15" fill="rgb(227,119,45)" fg:x="659" fg:w="3"/><text x="21.5012%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (2 samples, 0.06%)</title><rect x="21.4447%" y="149" width="0.0645%" height="15" fill="rgb(205,109,36)" fg:x="665" fg:w="2"/><text x="21.6947%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (4 samples, 0.13%)</title><rect x="21.4447%" y="181" width="0.1290%" height="15" fill="rgb(205,6,39)" fg:x="665" fg:w="4"/><text x="21.6947%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (4 samples, 0.13%)</title><rect x="21.4447%" y="165" width="0.1290%" height="15" fill="rgb(221,32,16)" fg:x="665" fg:w="4"/><text x="21.6947%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="21.5092%" y="149" width="0.0645%" height="15" fill="rgb(228,144,50)" fg:x="667" fg:w="2"/><text x="21.7592%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as funty::Integral&gt;::count_ones (2 samples, 0.06%)</title><rect x="21.5092%" y="133" width="0.0645%" height="15" fill="rgb(229,201,53)" fg:x="667" fg:w="2"/><text x="21.7592%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="21.5737%" y="181" width="0.0322%" height="15" fill="rgb(249,153,27)" fg:x="669" fg:w="1"/><text x="21.8237%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (7 samples, 0.23%)</title><rect x="21.4124%" y="229" width="0.2257%" height="15" fill="rgb(227,106,25)" fg:x="664" fg:w="7"/><text x="21.6624%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (7 samples, 0.23%)</title><rect x="21.4124%" y="213" width="0.2257%" height="15" fill="rgb(230,65,29)" fg:x="664" fg:w="7"/><text x="21.6624%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::store::BitStore::get_bit (7 samples, 0.23%)</title><rect x="21.4124%" y="197" width="0.2257%" height="15" fill="rgb(221,57,46)" fg:x="664" fg:w="7"/><text x="21.6624%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (1 samples, 0.03%)</title><rect x="21.6059%" y="181" width="0.0322%" height="15" fill="rgb(229,161,17)" fg:x="670" fg:w="1"/><text x="21.8559%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (10 samples, 0.32%)</title><rect x="21.3480%" y="245" width="0.3225%" height="15" fill="rgb(222,213,11)" fg:x="662" fg:w="10"/><text x="21.5980%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::to_const (1 samples, 0.03%)</title><rect x="21.6382%" y="229" width="0.0322%" height="15" fill="rgb(235,35,13)" fg:x="671" fg:w="1"/><text x="21.8882%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (1 samples, 0.03%)</title><rect x="21.6704%" y="245" width="0.0322%" height="15" fill="rgb(233,158,34)" fg:x="672" fg:w="1"/><text x="21.9204%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="21.7672%" y="213" width="0.0322%" height="15" fill="rgb(215,151,48)" fg:x="675" fg:w="1"/><text x="22.0172%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="22.0574%" y="181" width="0.0645%" height="15" fill="rgb(229,84,14)" fg:x="684" fg:w="2"/><text x="22.3074%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (11 samples, 0.35%)</title><rect x="21.7994%" y="213" width="0.3547%" height="15" fill="rgb(229,68,14)" fg:x="676" fg:w="11"/><text x="22.0494%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (5 samples, 0.16%)</title><rect x="21.9929%" y="197" width="0.1612%" height="15" fill="rgb(243,106,26)" fg:x="682" fg:w="5"/><text x="22.2429%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (1 samples, 0.03%)</title><rect x="22.1219%" y="181" width="0.0322%" height="15" fill="rgb(206,45,38)" fg:x="686" fg:w="1"/><text x="22.3719%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (1 samples, 0.03%)</title><rect x="22.1541%" y="213" width="0.0322%" height="15" fill="rgb(226,6,15)" fg:x="687" fg:w="1"/><text x="22.4041%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (3 samples, 0.10%)</title><rect x="22.2186%" y="197" width="0.0967%" height="15" fill="rgb(232,22,54)" fg:x="689" fg:w="3"/><text x="22.4686%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (3 samples, 0.10%)</title><rect x="22.2186%" y="181" width="0.0967%" height="15" fill="rgb(229,222,32)" fg:x="689" fg:w="3"/><text x="22.4686%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (2 samples, 0.06%)</title><rect x="22.2509%" y="165" width="0.0645%" height="15" fill="rgb(228,62,29)" fg:x="690" fg:w="2"/><text x="22.5009%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (19 samples, 0.61%)</title><rect x="21.7349%" y="229" width="0.6127%" height="15" fill="rgb(251,103,34)" fg:x="674" fg:w="19"/><text x="21.9849%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (5 samples, 0.16%)</title><rect x="22.1864%" y="213" width="0.1612%" height="15" fill="rgb(233,12,30)" fg:x="688" fg:w="5"/><text x="22.4364%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="22.3154%" y="197" width="0.0322%" height="15" fill="rgb(238,52,0)" fg:x="692" fg:w="1"/><text x="22.5654%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (4 samples, 0.13%)</title><rect x="22.3476%" y="213" width="0.1290%" height="15" fill="rgb(223,98,5)" fg:x="693" fg:w="4"/><text x="22.5976%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (3 samples, 0.10%)</title><rect x="22.3799%" y="197" width="0.0967%" height="15" fill="rgb(228,75,37)" fg:x="694" fg:w="3"/><text x="22.6299%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (62 samples, 2.00%)</title><rect x="20.5095%" y="261" width="1.9994%" height="15" fill="rgb(205,115,49)" fg:x="636" fg:w="62"/><text x="20.7595%" y="271.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (25 samples, 0.81%)</title><rect x="21.7027%" y="245" width="0.8062%" height="15" fill="rgb(250,154,43)" fg:x="673" fg:w="25"/><text x="21.9527%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (5 samples, 0.16%)</title><rect x="22.3476%" y="229" width="0.1612%" height="15" fill="rgb(226,43,29)" fg:x="693" fg:w="5"/><text x="22.5976%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="22.4766%" y="213" width="0.0322%" height="15" fill="rgb(249,228,39)" fg:x="697" fg:w="1"/><text x="22.7266%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (1 samples, 0.03%)</title><rect x="22.5089%" y="261" width="0.0322%" height="15" fill="rgb(216,79,43)" fg:x="698" fg:w="1"/><text x="22.7589%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.03%)</title><rect x="22.7346%" y="213" width="0.0322%" height="15" fill="rgb(228,95,12)" fg:x="705" fg:w="1"/><text x="22.9846%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (78 samples, 2.52%)</title><rect x="20.3483%" y="277" width="2.5153%" height="15" fill="rgb(249,221,15)" fg:x="631" fg:w="78"/><text x="20.5983%" y="287.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (10 samples, 0.32%)</title><rect x="22.5411%" y="261" width="0.3225%" height="15" fill="rgb(233,34,13)" fg:x="699" fg:w="10"/><text x="22.7911%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (7 samples, 0.23%)</title><rect x="22.6379%" y="245" width="0.2257%" height="15" fill="rgb(214,103,39)" fg:x="702" fg:w="7"/><text x="22.8879%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (7 samples, 0.23%)</title><rect x="22.6379%" y="229" width="0.2257%" height="15" fill="rgb(251,126,39)" fg:x="702" fg:w="7"/><text x="22.8879%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (3 samples, 0.10%)</title><rect x="22.7668%" y="213" width="0.0967%" height="15" fill="rgb(214,216,36)" fg:x="706" fg:w="3"/><text x="23.0168%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (2 samples, 0.06%)</title><rect x="22.8636%" y="277" width="0.0645%" height="15" fill="rgb(220,221,8)" fg:x="709" fg:w="2"/><text x="23.1136%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (83 samples, 2.68%)</title><rect x="20.3483%" y="293" width="2.6766%" height="15" fill="rgb(240,216,3)" fg:x="631" fg:w="83"/><text x="20.5983%" y="303.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or_else (3 samples, 0.10%)</title><rect x="22.9281%" y="277" width="0.0967%" height="15" fill="rgb(232,218,17)" fg:x="711" fg:w="3"/><text x="23.1781%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (84 samples, 2.71%)</title><rect x="20.3483%" y="309" width="2.7088%" height="15" fill="rgb(229,163,45)" fg:x="631" fg:w="84"/><text x="20.5983%" y="319.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (1 samples, 0.03%)</title><rect x="23.0248%" y="293" width="0.0322%" height="15" fill="rgb(231,110,42)" fg:x="714" fg:w="1"/><text x="23.2748%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (87 samples, 2.81%)</title><rect x="20.2838%" y="325" width="2.8055%" height="15" fill="rgb(208,170,48)" fg:x="629" fg:w="87"/><text x="20.5338%" y="335.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (1 samples, 0.03%)</title><rect x="23.0571%" y="309" width="0.0322%" height="15" fill="rgb(239,116,25)" fg:x="715" fg:w="1"/><text x="23.3071%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (1 samples, 0.03%)</title><rect x="23.0571%" y="293" width="0.0322%" height="15" fill="rgb(219,200,50)" fg:x="715" fg:w="1"/><text x="23.3071%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_number_of_matching_bits (89 samples, 2.87%)</title><rect x="20.2515%" y="341" width="2.8700%" height="15" fill="rgb(245,200,0)" fg:x="628" fg:w="89"/><text x="20.5015%" y="351.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="23.0893%" y="325" width="0.0322%" height="15" fill="rgb(245,119,33)" fg:x="716" fg:w="1"/><text x="23.3393%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="23.0893%" y="309" width="0.0322%" height="15" fill="rgb(231,125,12)" fg:x="716" fg:w="1"/><text x="23.3393%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (1 samples, 0.03%)</title><rect x="23.1538%" y="309" width="0.0322%" height="15" fill="rgb(216,96,41)" fg:x="718" fg:w="1"/><text x="23.4038%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="24.0568%" y="197" width="0.0322%" height="15" fill="rgb(248,43,45)" fg:x="746" fg:w="1"/><text x="24.3068%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="24.4437%" y="165" width="0.0322%" height="15" fill="rgb(217,222,7)" fg:x="758" fg:w="1"/><text x="24.6937%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (13 samples, 0.42%)</title><rect x="24.0890%" y="197" width="0.4192%" height="15" fill="rgb(233,28,6)" fg:x="747" fg:w="13"/><text x="24.3390%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (7 samples, 0.23%)</title><rect x="24.2825%" y="181" width="0.2257%" height="15" fill="rgb(231,218,15)" fg:x="753" fg:w="7"/><text x="24.5325%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="24.4760%" y="165" width="0.0322%" height="15" fill="rgb(226,171,48)" fg:x="759" fg:w="1"/><text x="24.7260%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (2 samples, 0.06%)</title><rect x="24.5405%" y="181" width="0.0645%" height="15" fill="rgb(235,201,9)" fg:x="761" fg:w="2"/><text x="24.7905%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="24.6695%" y="165" width="0.0645%" height="15" fill="rgb(217,80,15)" fg:x="765" fg:w="2"/><text x="24.9195%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (9 samples, 0.29%)</title><rect x="24.5082%" y="197" width="0.2902%" height="15" fill="rgb(219,152,8)" fg:x="760" fg:w="9"/><text x="24.7582%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (6 samples, 0.19%)</title><rect x="24.6050%" y="181" width="0.1935%" height="15" fill="rgb(243,107,38)" fg:x="763" fg:w="6"/><text x="24.8550%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (2 samples, 0.06%)</title><rect x="24.7340%" y="165" width="0.0645%" height="15" fill="rgb(231,17,5)" fg:x="767" fg:w="2"/><text x="24.9840%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (4 samples, 0.13%)</title><rect x="25.2822%" y="165" width="0.1290%" height="15" fill="rgb(209,25,54)" fg:x="784" fg:w="4"/><text x="25.5322%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="25.3789%" y="149" width="0.0322%" height="15" fill="rgb(219,0,2)" fg:x="787" fg:w="1"/><text x="25.6289%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="25.4112%" y="165" width="0.0322%" height="15" fill="rgb(246,9,5)" fg:x="788" fg:w="1"/><text x="25.6612%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (45 samples, 1.45%)</title><rect x="24.0245%" y="213" width="1.4511%" height="15" fill="rgb(226,159,4)" fg:x="745" fg:w="45"/><text x="24.2745%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (21 samples, 0.68%)</title><rect x="24.7985%" y="197" width="0.6772%" height="15" fill="rgb(219,175,34)" fg:x="769" fg:w="21"/><text x="25.0485%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (19 samples, 0.61%)</title><rect x="24.8629%" y="181" width="0.6127%" height="15" fill="rgb(236,10,46)" fg:x="771" fg:w="19"/><text x="25.1129%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset::_{{closure}} (1 samples, 0.03%)</title><rect x="25.4434%" y="165" width="0.0322%" height="15" fill="rgb(240,211,16)" fg:x="789" fg:w="1"/><text x="25.6934%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (48 samples, 1.55%)</title><rect x="23.9600%" y="229" width="1.5479%" height="15" fill="rgb(205,3,43)" fg:x="743" fg:w="48"/><text x="24.2100%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (1 samples, 0.03%)</title><rect x="25.4757%" y="213" width="0.0322%" height="15" fill="rgb(245,7,22)" fg:x="790" fg:w="1"/><text x="25.7257%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (2 samples, 0.06%)</title><rect x="25.7336%" y="197" width="0.0645%" height="15" fill="rgb(239,132,32)" fg:x="798" fg:w="2"/><text x="25.9836%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (2 samples, 0.06%)</title><rect x="25.8304%" y="181" width="0.0645%" height="15" fill="rgb(228,202,34)" fg:x="801" fg:w="2"/><text x="26.0804%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.03%)</title><rect x="25.8949%" y="181" width="0.0322%" height="15" fill="rgb(254,200,22)" fg:x="803" fg:w="1"/><text x="26.1449%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="25.9594%" y="165" width="0.0322%" height="15" fill="rgb(219,10,39)" fg:x="805" fg:w="1"/><text x="26.2094%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (4 samples, 0.13%)</title><rect x="25.9916%" y="133" width="0.1290%" height="15" fill="rgb(226,210,39)" fg:x="806" fg:w="4"/><text x="26.2416%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (9 samples, 0.29%)</title><rect x="25.9916%" y="165" width="0.2902%" height="15" fill="rgb(208,219,16)" fg:x="806" fg:w="9"/><text x="26.2416%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (9 samples, 0.29%)</title><rect x="25.9916%" y="149" width="0.2902%" height="15" fill="rgb(216,158,51)" fg:x="806" fg:w="9"/><text x="26.2416%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (5 samples, 0.16%)</title><rect x="26.1206%" y="133" width="0.1612%" height="15" fill="rgb(233,14,44)" fg:x="810" fg:w="5"/><text x="26.3706%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as funty::Integral&gt;::count_ones (2 samples, 0.06%)</title><rect x="26.2173%" y="117" width="0.0645%" height="15" fill="rgb(237,97,39)" fg:x="813" fg:w="2"/><text x="26.4673%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="26.2818%" y="165" width="0.0322%" height="15" fill="rgb(218,198,43)" fg:x="815" fg:w="1"/><text x="26.5318%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (27 samples, 0.87%)</title><rect x="25.5079%" y="229" width="0.8707%" height="15" fill="rgb(231,104,20)" fg:x="791" fg:w="27"/><text x="25.7579%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (20 samples, 0.64%)</title><rect x="25.7336%" y="213" width="0.6450%" height="15" fill="rgb(254,36,13)" fg:x="798" fg:w="20"/><text x="25.9836%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (18 samples, 0.58%)</title><rect x="25.7981%" y="197" width="0.5805%" height="15" fill="rgb(248,14,50)" fg:x="800" fg:w="18"/><text x="26.0481%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::store::BitStore::get_bit (14 samples, 0.45%)</title><rect x="25.9271%" y="181" width="0.4515%" height="15" fill="rgb(217,107,29)" fg:x="804" fg:w="14"/><text x="26.1771%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (2 samples, 0.06%)</title><rect x="26.3141%" y="165" width="0.0645%" height="15" fill="rgb(251,169,33)" fg:x="816" fg:w="2"/><text x="26.5641%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (2 samples, 0.06%)</title><rect x="26.3786%" y="229" width="0.0645%" height="15" fill="rgb(217,108,32)" fg:x="818" fg:w="2"/><text x="26.6286%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="26.5398%" y="213" width="0.0322%" height="15" fill="rgb(219,66,42)" fg:x="823" fg:w="1"/><text x="26.7898%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="26.6043%" y="197" width="0.0322%" height="15" fill="rgb(206,180,7)" fg:x="825" fg:w="1"/><text x="26.8543%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="26.6366%" y="197" width="0.0322%" height="15" fill="rgb(208,226,31)" fg:x="826" fg:w="1"/><text x="26.8866%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (1 samples, 0.03%)</title><rect x="26.7978%" y="181" width="0.0322%" height="15" fill="rgb(218,26,49)" fg:x="831" fg:w="1"/><text x="27.0478%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="26.8946%" y="165" width="0.0645%" height="15" fill="rgb(233,197,48)" fg:x="834" fg:w="2"/><text x="27.1446%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (12 samples, 0.39%)</title><rect x="26.6688%" y="197" width="0.3870%" height="15" fill="rgb(252,181,51)" fg:x="827" fg:w="12"/><text x="26.9188%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (7 samples, 0.23%)</title><rect x="26.8301%" y="181" width="0.2257%" height="15" fill="rgb(253,90,19)" fg:x="832" fg:w="7"/><text x="27.0801%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (3 samples, 0.10%)</title><rect x="26.9590%" y="165" width="0.0967%" height="15" fill="rgb(215,171,30)" fg:x="836" fg:w="3"/><text x="27.2090%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (18 samples, 0.58%)</title><rect x="26.5721%" y="213" width="0.5805%" height="15" fill="rgb(214,222,9)" fg:x="824" fg:w="18"/><text x="26.8221%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (3 samples, 0.10%)</title><rect x="27.0558%" y="197" width="0.0967%" height="15" fill="rgb(223,3,22)" fg:x="839" fg:w="3"/><text x="27.3058%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (3 samples, 0.10%)</title><rect x="27.0558%" y="181" width="0.0967%" height="15" fill="rgb(225,196,46)" fg:x="839" fg:w="3"/><text x="27.3058%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="27.1203%" y="165" width="0.0322%" height="15" fill="rgb(209,110,37)" fg:x="841" fg:w="1"/><text x="27.3703%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="27.1203%" y="149" width="0.0322%" height="15" fill="rgb(249,89,12)" fg:x="841" fg:w="1"/><text x="27.3703%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (110 samples, 3.55%)</title><rect x="23.8633%" y="245" width="3.5472%" height="15" fill="rgb(226,27,33)" fg:x="740" fg:w="110"/><text x="24.1133%" y="255.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (30 samples, 0.97%)</title><rect x="26.4431%" y="229" width="0.9674%" height="15" fill="rgb(213,82,22)" fg:x="820" fg:w="30"/><text x="26.6931%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (8 samples, 0.26%)</title><rect x="27.1525%" y="213" width="0.2580%" height="15" fill="rgb(248,140,0)" fg:x="842" fg:w="8"/><text x="27.4025%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (7 samples, 0.23%)</title><rect x="27.1848%" y="197" width="0.2257%" height="15" fill="rgb(228,106,3)" fg:x="843" fg:w="7"/><text x="27.4348%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="27.3783%" y="181" width="0.0322%" height="15" fill="rgb(209,23,37)" fg:x="849" fg:w="1"/><text x="27.6283%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (1 samples, 0.03%)</title><rect x="27.4105%" y="245" width="0.0322%" height="15" fill="rgb(241,93,50)" fg:x="850" fg:w="1"/><text x="27.6605%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="27.4428%" y="245" width="0.0322%" height="15" fill="rgb(253,46,43)" fg:x="851" fg:w="1"/><text x="27.6928%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (121 samples, 3.90%)</title><rect x="23.7665%" y="261" width="3.9020%" height="15" fill="rgb(226,206,43)" fg:x="737" fg:w="121"/><text x="24.0165%" y="271.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (6 samples, 0.19%)</title><rect x="27.4750%" y="245" width="0.1935%" height="15" fill="rgb(217,54,7)" fg:x="852" fg:w="6"/><text x="27.7250%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (5 samples, 0.16%)</title><rect x="27.5073%" y="229" width="0.1612%" height="15" fill="rgb(223,5,52)" fg:x="853" fg:w="5"/><text x="27.7573%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (4 samples, 0.13%)</title><rect x="27.5395%" y="213" width="0.1290%" height="15" fill="rgb(206,52,46)" fg:x="854" fg:w="4"/><text x="27.7895%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (3 samples, 0.10%)</title><rect x="27.5718%" y="197" width="0.0967%" height="15" fill="rgb(253,136,11)" fg:x="855" fg:w="3"/><text x="27.8218%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (131 samples, 4.22%)</title><rect x="23.5730%" y="277" width="4.2244%" height="15" fill="rgb(208,106,33)" fg:x="731" fg:w="131"/><text x="23.8230%" y="287.50">basic..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or_else (4 samples, 0.13%)</title><rect x="27.6685%" y="261" width="0.1290%" height="15" fill="rgb(206,54,4)" fg:x="858" fg:w="4"/><text x="27.9185%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (142 samples, 4.58%)</title><rect x="23.3151%" y="293" width="4.5792%" height="15" fill="rgb(213,3,15)" fg:x="723" fg:w="142"/><text x="23.5651%" y="303.50">basic..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (3 samples, 0.10%)</title><rect x="27.7975%" y="277" width="0.0967%" height="15" fill="rgb(252,211,39)" fg:x="862" fg:w="3"/><text x="28.0475%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="27.7975%" y="261" width="0.0967%" height="15" fill="rgb(223,6,36)" fg:x="862" fg:w="3"/><text x="28.0475%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (3 samples, 0.10%)</title><rect x="27.8942%" y="293" width="0.0967%" height="15" fill="rgb(252,169,45)" fg:x="865" fg:w="3"/><text x="28.1442%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (3 samples, 0.10%)</title><rect x="27.8942%" y="277" width="0.0967%" height="15" fill="rgb(212,48,26)" fg:x="865" fg:w="3"/><text x="28.1442%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (3 samples, 0.10%)</title><rect x="27.8942%" y="261" width="0.0967%" height="15" fill="rgb(251,102,48)" fg:x="865" fg:w="3"/><text x="28.1442%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="27.9265%" y="245" width="0.0645%" height="15" fill="rgb(243,208,16)" fg:x="866" fg:w="2"/><text x="28.1765%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (150 samples, 4.84%)</title><rect x="23.1861%" y="309" width="4.8371%" height="15" fill="rgb(219,96,24)" fg:x="719" fg:w="150"/><text x="23.4361%" y="319.50">basic_..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (1 samples, 0.03%)</title><rect x="27.9910%" y="293" width="0.0322%" height="15" fill="rgb(219,33,29)" fg:x="868" fg:w="1"/><text x="28.2410%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_number_of_matching_bits (155 samples, 5.00%)</title><rect x="23.1216%" y="325" width="4.9984%" height="15" fill="rgb(223,176,5)" fg:x="717" fg:w="155"/><text x="23.3716%" y="335.50">basic_..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.10%)</title><rect x="28.0232%" y="309" width="0.0967%" height="15" fill="rgb(228,140,14)" fg:x="869" fg:w="3"/><text x="28.2732%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="28.0555%" y="293" width="0.0645%" height="15" fill="rgb(217,179,31)" fg:x="870" fg:w="2"/><text x="28.3055%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="28.0877%" y="277" width="0.0322%" height="15" fill="rgb(230,9,30)" fg:x="871" fg:w="1"/><text x="28.3377%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="28.3457%" y="293" width="0.0322%" height="15" fill="rgb(230,136,20)" fg:x="879" fg:w="1"/><text x="28.5957%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (1 samples, 0.03%)</title><rect x="28.3779%" y="293" width="0.0322%" height="15" fill="rgb(215,210,22)" fg:x="880" fg:w="1"/><text x="28.6279%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="28.5714%" y="277" width="0.0322%" height="15" fill="rgb(218,43,5)" fg:x="886" fg:w="1"/><text x="28.8214%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (2 samples, 0.06%)</title><rect x="28.6037%" y="277" width="0.0645%" height="15" fill="rgb(216,11,5)" fg:x="887" fg:w="2"/><text x="28.8537%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (1 samples, 0.03%)</title><rect x="28.6682%" y="277" width="0.0322%" height="15" fill="rgb(209,82,29)" fg:x="889" fg:w="1"/><text x="28.9182%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="29.0229%" y="261" width="0.0322%" height="15" fill="rgb(244,115,12)" fg:x="900" fg:w="1"/><text x="29.2729%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (1 samples, 0.03%)</title><rect x="29.8936%" y="213" width="0.0322%" height="15" fill="rgb(222,82,18)" fg:x="927" fg:w="1"/><text x="30.1436%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="30.0226%" y="197" width="0.0322%" height="15" fill="rgb(249,227,8)" fg:x="931" fg:w="1"/><text x="30.2726%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="30.3128%" y="181" width="0.0322%" height="15" fill="rgb(253,141,45)" fg:x="940" fg:w="1"/><text x="30.5628%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="30.8933%" y="165" width="0.0322%" height="15" fill="rgb(234,184,4)" fg:x="958" fg:w="1"/><text x="31.1433%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (27 samples, 0.87%)</title><rect x="30.3450%" y="181" width="0.8707%" height="15" fill="rgb(218,194,23)" fg:x="941" fg:w="27"/><text x="30.5950%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (9 samples, 0.29%)</title><rect x="30.9255%" y="165" width="0.2902%" height="15" fill="rgb(235,66,41)" fg:x="959" fg:w="9"/><text x="31.1755%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (6 samples, 0.19%)</title><rect x="31.0223%" y="149" width="0.1935%" height="15" fill="rgb(245,217,1)" fg:x="962" fg:w="6"/><text x="31.2723%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (5 samples, 0.16%)</title><rect x="31.0545%" y="133" width="0.1612%" height="15" fill="rgb(229,91,1)" fg:x="963" fg:w="5"/><text x="31.3045%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="31.3770%" y="165" width="0.0322%" height="15" fill="rgb(207,101,30)" fg:x="973" fg:w="1"/><text x="31.6270%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.16%)</title><rect x="31.6995%" y="149" width="0.1612%" height="15" fill="rgb(223,82,49)" fg:x="983" fg:w="5"/><text x="31.9495%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (22 samples, 0.71%)</title><rect x="31.2157%" y="181" width="0.7094%" height="15" fill="rgb(218,167,17)" fg:x="968" fg:w="22"/><text x="31.4657%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (16 samples, 0.52%)</title><rect x="31.4092%" y="165" width="0.5160%" height="15" fill="rgb(208,103,14)" fg:x="974" fg:w="16"/><text x="31.6592%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (2 samples, 0.06%)</title><rect x="31.8607%" y="149" width="0.0645%" height="15" fill="rgb(238,20,8)" fg:x="988" fg:w="2"/><text x="32.1107%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (18 samples, 0.58%)</title><rect x="32.6991%" y="149" width="0.5805%" height="15" fill="rgb(218,80,54)" fg:x="1014" fg:w="18"/><text x="32.9491%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (8 samples, 0.26%)</title><rect x="33.0216%" y="133" width="0.2580%" height="15" fill="rgb(240,144,17)" fg:x="1024" fg:w="8"/><text x="33.2716%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (110 samples, 3.55%)</title><rect x="29.9258%" y="213" width="3.5472%" height="15" fill="rgb(245,27,50)" fg:x="928" fg:w="110"/><text x="30.1758%" y="223.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (106 samples, 3.42%)</title><rect x="30.0548%" y="197" width="3.4183%" height="15" fill="rgb(251,51,7)" fg:x="932" fg:w="106"/><text x="30.3048%" y="207.50">bas..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (48 samples, 1.55%)</title><rect x="31.9252%" y="181" width="1.5479%" height="15" fill="rgb(245,217,29)" fg:x="990" fg:w="48"/><text x="32.1752%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (47 samples, 1.52%)</title><rect x="31.9574%" y="165" width="1.5156%" height="15" fill="rgb(221,176,29)" fg:x="991" fg:w="47"/><text x="32.2074%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset::_{{closure}} (6 samples, 0.19%)</title><rect x="33.2796%" y="149" width="0.1935%" height="15" fill="rgb(212,180,24)" fg:x="1032" fg:w="6"/><text x="33.5296%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (5 samples, 0.16%)</title><rect x="34.1180%" y="165" width="0.1612%" height="15" fill="rgb(254,24,2)" fg:x="1058" fg:w="5"/><text x="34.3680%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="34.5372%" y="149" width="0.0322%" height="15" fill="rgb(230,100,2)" fg:x="1071" fg:w="1"/><text x="34.7872%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (1 samples, 0.03%)</title><rect x="34.6662%" y="117" width="0.0322%" height="15" fill="rgb(219,142,25)" fg:x="1075" fg:w="1"/><text x="34.9162%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as funty::Integral&gt;::count_ones (1 samples, 0.03%)</title><rect x="34.6985%" y="117" width="0.0322%" height="15" fill="rgb(240,73,43)" fg:x="1076" fg:w="1"/><text x="34.9485%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (19 samples, 0.61%)</title><rect x="34.5695%" y="133" width="0.6127%" height="15" fill="rgb(214,114,15)" fg:x="1072" fg:w="19"/><text x="34.8195%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (14 samples, 0.45%)</title><rect x="34.7307%" y="117" width="0.4515%" height="15" fill="rgb(207,130,4)" fg:x="1077" fg:w="14"/><text x="34.9807%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as funty::Integral&gt;::count_ones (9 samples, 0.29%)</title><rect x="34.8920%" y="101" width="0.2902%" height="15" fill="rgb(221,25,40)" fg:x="1082" fg:w="9"/><text x="35.1420%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (20 samples, 0.64%)</title><rect x="34.5695%" y="149" width="0.6450%" height="15" fill="rgb(241,184,7)" fg:x="1072" fg:w="20"/><text x="34.8195%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="35.1822%" y="133" width="0.0322%" height="15" fill="rgb(235,159,4)" fg:x="1091" fg:w="1"/><text x="35.4322%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="35.2144%" y="149" width="0.0322%" height="15" fill="rgb(214,87,48)" fg:x="1092" fg:w="1"/><text x="35.4644%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::store::BitStore::get_bit (31 samples, 1.00%)</title><rect x="34.2793%" y="165" width="0.9997%" height="15" fill="rgb(246,198,24)" fg:x="1063" fg:w="31"/><text x="34.5293%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (1 samples, 0.03%)</title><rect x="35.2467%" y="149" width="0.0322%" height="15" fill="rgb(209,66,40)" fg:x="1093" fg:w="1"/><text x="35.4967%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (47 samples, 1.52%)</title><rect x="33.8278%" y="197" width="1.5156%" height="15" fill="rgb(233,147,39)" fg:x="1049" fg:w="47"/><text x="34.0778%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (40 samples, 1.29%)</title><rect x="34.0535%" y="181" width="1.2899%" height="15" fill="rgb(231,145,52)" fg:x="1056" fg:w="40"/><text x="34.3035%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (2 samples, 0.06%)</title><rect x="35.2789%" y="165" width="0.0645%" height="15" fill="rgb(206,20,26)" fg:x="1094" fg:w="2"/><text x="35.5289%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (2 samples, 0.06%)</title><rect x="35.3434%" y="197" width="0.0645%" height="15" fill="rgb(238,220,4)" fg:x="1096" fg:w="2"/><text x="35.5934%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (64 samples, 2.06%)</title><rect x="33.4731%" y="213" width="2.0639%" height="15" fill="rgb(252,195,42)" fg:x="1038" fg:w="64"/><text x="33.7231%" y="223.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::to_const (4 samples, 0.13%)</title><rect x="35.4079%" y="197" width="0.1290%" height="15" fill="rgb(209,10,6)" fg:x="1098" fg:w="4"/><text x="35.6579%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (2 samples, 0.06%)</title><rect x="35.5369%" y="213" width="0.0645%" height="15" fill="rgb(229,3,52)" fg:x="1102" fg:w="2"/><text x="35.7869%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (1 samples, 0.03%)</title><rect x="35.7304%" y="197" width="0.0322%" height="15" fill="rgb(253,49,37)" fg:x="1108" fg:w="1"/><text x="35.9804%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="35.9239%" y="181" width="0.0322%" height="15" fill="rgb(240,103,49)" fg:x="1114" fg:w="1"/><text x="36.1739%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (2 samples, 0.06%)</title><rect x="35.9561%" y="181" width="0.0645%" height="15" fill="rgb(250,182,30)" fg:x="1115" fg:w="2"/><text x="36.2061%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="36.1819%" y="165" width="0.0645%" height="15" fill="rgb(248,8,30)" fg:x="1122" fg:w="2"/><text x="36.4319%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (1 samples, 0.03%)</title><rect x="36.2464%" y="165" width="0.0322%" height="15" fill="rgb(237,120,30)" fg:x="1124" fg:w="1"/><text x="36.4964%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="36.5366%" y="149" width="0.0645%" height="15" fill="rgb(221,146,34)" fg:x="1133" fg:w="2"/><text x="36.7866%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (22 samples, 0.71%)</title><rect x="36.0206%" y="181" width="0.7094%" height="15" fill="rgb(242,55,13)" fg:x="1117" fg:w="22"/><text x="36.2706%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (14 samples, 0.45%)</title><rect x="36.2786%" y="165" width="0.4515%" height="15" fill="rgb(242,112,31)" fg:x="1125" fg:w="14"/><text x="36.5286%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (4 samples, 0.13%)</title><rect x="36.6011%" y="149" width="0.1290%" height="15" fill="rgb(249,192,27)" fg:x="1135" fg:w="4"/><text x="36.8511%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (10 samples, 0.32%)</title><rect x="36.7301%" y="181" width="0.3225%" height="15" fill="rgb(208,204,44)" fg:x="1139" fg:w="10"/><text x="36.9801%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="36.9881%" y="165" width="0.0645%" height="15" fill="rgb(208,93,54)" fg:x="1147" fg:w="2"/><text x="37.2381%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (60 samples, 1.93%)</title><rect x="35.7627%" y="197" width="1.9349%" height="15" fill="rgb(242,1,31)" fg:x="1109" fg:w="60"/><text x="36.0127%" y="207.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (20 samples, 0.64%)</title><rect x="37.0526%" y="181" width="0.6450%" height="15" fill="rgb(241,83,25)" fg:x="1149" fg:w="20"/><text x="37.3026%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (18 samples, 0.58%)</title><rect x="37.1171%" y="165" width="0.5805%" height="15" fill="rgb(205,169,50)" fg:x="1151" fg:w="18"/><text x="37.3671%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (8 samples, 0.26%)</title><rect x="37.4395%" y="149" width="0.2580%" height="15" fill="rgb(239,186,37)" fg:x="1161" fg:w="8"/><text x="37.6895%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (8 samples, 0.26%)</title><rect x="37.4395%" y="133" width="0.2580%" height="15" fill="rgb(205,221,10)" fg:x="1161" fg:w="8"/><text x="37.6895%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.03%)</title><rect x="38.1490%" y="165" width="0.0322%" height="15" fill="rgb(218,196,15)" fg:x="1183" fg:w="1"/><text x="38.3990%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (18 samples, 0.58%)</title><rect x="37.6975%" y="181" width="0.5805%" height="15" fill="rgb(218,196,35)" fg:x="1169" fg:w="18"/><text x="37.9475%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (3 samples, 0.10%)</title><rect x="38.1812%" y="165" width="0.0967%" height="15" fill="rgb(233,63,24)" fg:x="1184" fg:w="3"/><text x="38.4312%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (270 samples, 8.71%)</title><rect x="29.6034%" y="229" width="8.7069%" height="15" fill="rgb(225,8,4)" fg:x="918" fg:w="270"/><text x="29.8534%" y="239.50">basic_algori..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (84 samples, 2.71%)</title><rect x="35.6014%" y="213" width="2.7088%" height="15" fill="rgb(234,105,35)" fg:x="1104" fg:w="84"/><text x="35.8514%" y="223.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (19 samples, 0.61%)</title><rect x="37.6975%" y="197" width="0.6127%" height="15" fill="rgb(236,21,32)" fg:x="1169" fg:w="19"/><text x="37.9475%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="38.2780%" y="181" width="0.0322%" height="15" fill="rgb(228,109,6)" fg:x="1187" fg:w="1"/><text x="38.5280%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (5 samples, 0.16%)</title><rect x="38.3102%" y="229" width="0.1612%" height="15" fill="rgb(229,215,31)" fg:x="1188" fg:w="5"/><text x="38.5602%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (2 samples, 0.06%)</title><rect x="38.4715%" y="229" width="0.0645%" height="15" fill="rgb(221,52,54)" fg:x="1193" fg:w="2"/><text x="38.7215%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="38.5360%" y="229" width="0.0322%" height="15" fill="rgb(252,129,43)" fg:x="1195" fg:w="1"/><text x="38.7860%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::len (1 samples, 0.03%)</title><rect x="38.7939%" y="213" width="0.0322%" height="15" fill="rgb(248,183,27)" fg:x="1203" fg:w="1"/><text x="39.0439%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="38.8262%" y="213" width="0.0322%" height="15" fill="rgb(250,0,22)" fg:x="1204" fg:w="1"/><text x="39.0762%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.03%)</title><rect x="39.2132%" y="181" width="0.0322%" height="15" fill="rgb(213,166,10)" fg:x="1216" fg:w="1"/><text x="39.4632%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (16 samples, 0.52%)</title><rect x="38.8907%" y="197" width="0.5160%" height="15" fill="rgb(207,163,36)" fg:x="1206" fg:w="16"/><text x="39.1407%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (5 samples, 0.16%)</title><rect x="39.2454%" y="181" width="0.1612%" height="15" fill="rgb(208,122,22)" fg:x="1217" fg:w="5"/><text x="39.4954%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (316 samples, 10.19%)</title><rect x="29.2809%" y="245" width="10.1903%" height="15" fill="rgb(207,104,49)" fg:x="908" fg:w="316"/><text x="29.5309%" y="255.50">basic_algorithm..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (28 samples, 0.90%)</title><rect x="38.5682%" y="229" width="0.9029%" height="15" fill="rgb(248,211,50)" fg:x="1196" fg:w="28"/><text x="38.8182%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (19 samples, 0.61%)</title><rect x="38.8584%" y="213" width="0.6127%" height="15" fill="rgb(217,13,45)" fg:x="1205" fg:w="19"/><text x="39.1084%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.06%)</title><rect x="39.4066%" y="197" width="0.0645%" height="15" fill="rgb(211,216,49)" fg:x="1222" fg:w="2"/><text x="39.6566%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="39.4711%" y="245" width="0.0322%" height="15" fill="rgb(221,58,53)" fg:x="1224" fg:w="1"/><text x="39.7211%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="39.5034%" y="245" width="0.0322%" height="15" fill="rgb(220,112,41)" fg:x="1225" fg:w="1"/><text x="39.7534%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (330 samples, 10.64%)</title><rect x="29.0551%" y="261" width="10.6417%" height="15" fill="rgb(236,38,28)" fg:x="901" fg:w="330"/><text x="29.3051%" y="271.50">basic_algorithms..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or_else (5 samples, 0.16%)</title><rect x="39.5356%" y="245" width="0.1612%" height="15" fill="rgb(227,195,22)" fg:x="1226" fg:w="5"/><text x="39.7856%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (342 samples, 11.03%)</title><rect x="28.7004%" y="277" width="11.0287%" height="15" fill="rgb(214,55,33)" fg:x="890" fg:w="342"/><text x="28.9504%" y="287.50">basic_algorithms..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (1 samples, 0.03%)</title><rect x="39.6969%" y="261" width="0.0322%" height="15" fill="rgb(248,80,13)" fg:x="1231" fg:w="1"/><text x="39.9469%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="39.6969%" y="245" width="0.0322%" height="15" fill="rgb(238,52,6)" fg:x="1231" fg:w="1"/><text x="39.9469%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (12 samples, 0.39%)</title><rect x="39.7936%" y="245" width="0.3870%" height="15" fill="rgb(224,198,47)" fg:x="1234" fg:w="12"/><text x="40.0436%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (8 samples, 0.26%)</title><rect x="39.9226%" y="229" width="0.2580%" height="15" fill="rgb(233,171,20)" fg:x="1238" fg:w="8"/><text x="40.1726%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (15 samples, 0.48%)</title><rect x="39.7291%" y="277" width="0.4837%" height="15" fill="rgb(241,30,25)" fg:x="1232" fg:w="15"/><text x="39.9791%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (14 samples, 0.45%)</title><rect x="39.7614%" y="261" width="0.4515%" height="15" fill="rgb(207,171,38)" fg:x="1233" fg:w="14"/><text x="40.0114%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="40.1806%" y="245" width="0.0322%" height="15" fill="rgb(234,70,1)" fg:x="1246" fg:w="1"/><text x="40.4306%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (367 samples, 11.83%)</title><rect x="28.4102%" y="293" width="11.8349%" height="15" fill="rgb(232,178,18)" fg:x="881" fg:w="367"/><text x="28.6602%" y="303.50">basic_algorithms_a..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (1 samples, 0.03%)</title><rect x="40.2128%" y="277" width="0.0322%" height="15" fill="rgb(241,78,40)" fg:x="1247" fg:w="1"/><text x="40.4628%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_number_of_matching_bits (380 samples, 12.25%)</title><rect x="28.1200%" y="309" width="12.2541%" height="15" fill="rgb(222,35,25)" fg:x="872" fg:w="380"/><text x="28.3700%" y="319.50">basic_algorithms_a..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.13%)</title><rect x="40.2451%" y="293" width="0.1290%" height="15" fill="rgb(207,92,16)" fg:x="1248" fg:w="4"/><text x="40.4951%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="40.3096%" y="277" width="0.0645%" height="15" fill="rgb(216,59,51)" fg:x="1250" fg:w="2"/><text x="40.5596%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="40.6643%" y="277" width="0.0322%" height="15" fill="rgb(213,80,28)" fg:x="1261" fg:w="1"/><text x="40.9143%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (1 samples, 0.03%)</title><rect x="40.6965%" y="277" width="0.0322%" height="15" fill="rgb(220,93,7)" fg:x="1262" fg:w="1"/><text x="40.9465%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.06%)</title><rect x="40.9545%" y="261" width="0.0645%" height="15" fill="rgb(225,24,44)" fg:x="1270" fg:w="2"/><text x="41.2045%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (5 samples, 0.16%)</title><rect x="41.0190%" y="261" width="0.1612%" height="15" fill="rgb(243,74,40)" fg:x="1272" fg:w="5"/><text x="41.2690%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="41.8252%" y="245" width="0.0645%" height="15" fill="rgb(228,39,7)" fg:x="1297" fg:w="2"/><text x="42.0752%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (1 samples, 0.03%)</title><rect x="41.8897%" y="245" width="0.0322%" height="15" fill="rgb(227,79,8)" fg:x="1299" fg:w="1"/><text x="42.1397%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (1 samples, 0.03%)</title><rect x="43.2441%" y="197" width="0.0322%" height="15" fill="rgb(236,58,11)" fg:x="1341" fg:w="1"/><text x="43.4941%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::into_inner (3 samples, 0.10%)</title><rect x="43.6311%" y="165" width="0.0967%" height="15" fill="rgb(249,63,35)" fg:x="1353" fg:w="3"/><text x="43.8811%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::into_inner (2 samples, 0.06%)</title><rect x="44.5340%" y="149" width="0.0645%" height="15" fill="rgb(252,114,16)" fg:x="1381" fg:w="2"/><text x="44.7840%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (41 samples, 1.32%)</title><rect x="43.7278%" y="165" width="1.3222%" height="15" fill="rgb(254,151,24)" fg:x="1356" fg:w="41"/><text x="43.9778%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (14 samples, 0.45%)</title><rect x="44.5985%" y="149" width="0.4515%" height="15" fill="rgb(253,54,39)" fg:x="1383" fg:w="14"/><text x="44.8485%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (7 samples, 0.23%)</title><rect x="44.8243%" y="133" width="0.2257%" height="15" fill="rgb(243,25,45)" fg:x="1390" fg:w="7"/><text x="45.0743%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (7 samples, 0.23%)</title><rect x="44.8243%" y="117" width="0.2257%" height="15" fill="rgb(234,134,9)" fg:x="1390" fg:w="7"/><text x="45.0743%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.26%)</title><rect x="45.8239%" y="133" width="0.2580%" height="15" fill="rgb(227,166,31)" fg:x="1421" fg:w="8"/><text x="46.0739%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (43 samples, 1.39%)</title><rect x="45.0500%" y="165" width="1.3866%" height="15" fill="rgb(245,143,41)" fg:x="1397" fg:w="43"/><text x="45.3000%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (38 samples, 1.23%)</title><rect x="45.2112%" y="149" width="1.2254%" height="15" fill="rgb(238,181,32)" fg:x="1402" fg:w="38"/><text x="45.4612%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (11 samples, 0.35%)</title><rect x="46.0819%" y="133" width="0.3547%" height="15" fill="rgb(224,113,18)" fg:x="1429" fg:w="11"/><text x="46.3319%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (26 samples, 0.84%)</title><rect x="47.5008%" y="133" width="0.8384%" height="15" fill="rgb(240,229,28)" fg:x="1473" fg:w="26"/><text x="47.7508%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (14 samples, 0.45%)</title><rect x="47.8878%" y="117" width="0.4515%" height="15" fill="rgb(250,185,3)" fg:x="1485" fg:w="14"/><text x="48.1378%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (65 samples, 2.10%)</title><rect x="46.4366%" y="165" width="2.0961%" height="15" fill="rgb(212,59,25)" fg:x="1440" fg:w="65"/><text x="46.6866%" y="175.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (63 samples, 2.03%)</title><rect x="46.5011%" y="149" width="2.0316%" height="15" fill="rgb(221,87,20)" fg:x="1442" fg:w="63"/><text x="46.7511%" y="159.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset::_{{closure}} (6 samples, 0.19%)</title><rect x="48.3392%" y="133" width="0.1935%" height="15" fill="rgb(213,74,28)" fg:x="1499" fg:w="6"/><text x="48.5892%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (164 samples, 5.29%)</title><rect x="43.2764%" y="197" width="5.2886%" height="15" fill="rgb(224,132,34)" fg:x="1342" fg:w="164"/><text x="43.5264%" y="207.50">basic_..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (161 samples, 5.19%)</title><rect x="43.3731%" y="181" width="5.1919%" height="15" fill="rgb(222,101,24)" fg:x="1345" fg:w="161"/><text x="43.6231%" y="191.50">basic_..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (1 samples, 0.03%)</title><rect x="48.5327%" y="165" width="0.0322%" height="15" fill="rgb(254,142,4)" fg:x="1505" fg:w="1"/><text x="48.7827%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="49.4034%" y="165" width="0.0322%" height="15" fill="rgb(230,229,49)" fg:x="1532" fg:w="1"/><text x="49.6534%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (2 samples, 0.06%)</title><rect x="49.6936%" y="149" width="0.0645%" height="15" fill="rgb(238,70,47)" fg:x="1541" fg:w="2"/><text x="49.9436%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (3 samples, 0.10%)</title><rect x="49.7581%" y="149" width="0.0967%" height="15" fill="rgb(231,160,17)" fg:x="1543" fg:w="3"/><text x="50.0081%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (2 samples, 0.06%)</title><rect x="49.8549%" y="149" width="0.0645%" height="15" fill="rgb(218,68,53)" fg:x="1546" fg:w="2"/><text x="50.1049%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="50.3064%" y="133" width="0.0322%" height="15" fill="rgb(236,111,10)" fg:x="1560" fg:w="1"/><text x="50.5564%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.03%)</title><rect x="50.3386%" y="133" width="0.0322%" height="15" fill="rgb(224,34,41)" fg:x="1561" fg:w="1"/><text x="50.5886%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (8 samples, 0.26%)</title><rect x="50.6288%" y="101" width="0.2580%" height="15" fill="rgb(241,118,19)" fg:x="1570" fg:w="8"/><text x="50.8788%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (33 samples, 1.06%)</title><rect x="50.4676%" y="117" width="1.0642%" height="15" fill="rgb(238,129,25)" fg:x="1565" fg:w="33"/><text x="50.7176%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (20 samples, 0.64%)</title><rect x="50.8868%" y="101" width="0.6450%" height="15" fill="rgb(238,22,31)" fg:x="1578" fg:w="20"/><text x="51.1368%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as funty::Integral&gt;::count_ones (12 samples, 0.39%)</title><rect x="51.1448%" y="85" width="0.3870%" height="15" fill="rgb(222,174,48)" fg:x="1586" fg:w="12"/><text x="51.3948%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (38 samples, 1.23%)</title><rect x="50.3708%" y="133" width="1.2254%" height="15" fill="rgb(206,152,40)" fg:x="1562" fg:w="38"/><text x="50.6208%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (2 samples, 0.06%)</title><rect x="51.5318%" y="117" width="0.0645%" height="15" fill="rgb(218,99,54)" fg:x="1598" fg:w="2"/><text x="51.7818%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::store::BitStore::get_bit (54 samples, 1.74%)</title><rect x="49.9194%" y="149" width="1.7414%" height="15" fill="rgb(220,174,26)" fg:x="1548" fg:w="54"/><text x="50.1694%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (2 samples, 0.06%)</title><rect x="51.5963%" y="133" width="0.0645%" height="15" fill="rgb(245,116,9)" fg:x="1600" fg:w="2"/><text x="51.8463%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (82 samples, 2.64%)</title><rect x="49.0487%" y="181" width="2.6443%" height="15" fill="rgb(209,72,35)" fg:x="1521" fg:w="82"/><text x="49.2987%" y="191.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (70 samples, 2.26%)</title><rect x="49.4357%" y="165" width="2.2573%" height="15" fill="rgb(226,126,21)" fg:x="1533" fg:w="70"/><text x="49.6857%" y="175.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (1 samples, 0.03%)</title><rect x="51.6608%" y="149" width="0.0322%" height="15" fill="rgb(227,192,1)" fg:x="1602" fg:w="1"/><text x="51.9108%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (2 samples, 0.06%)</title><rect x="51.6930%" y="181" width="0.0645%" height="15" fill="rgb(237,180,29)" fg:x="1603" fg:w="2"/><text x="51.9430%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (103 samples, 3.32%)</title><rect x="48.5650%" y="197" width="3.3215%" height="15" fill="rgb(230,197,35)" fg:x="1506" fg:w="103"/><text x="48.8150%" y="207.50">bas..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::to_const (4 samples, 0.13%)</title><rect x="51.7575%" y="181" width="0.1290%" height="15" fill="rgb(246,193,31)" fg:x="1605" fg:w="4"/><text x="52.0075%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (1 samples, 0.03%)</title><rect x="51.8865%" y="197" width="0.0322%" height="15" fill="rgb(241,36,4)" fg:x="1609" fg:w="1"/><text x="52.1365%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (1 samples, 0.03%)</title><rect x="51.9187%" y="197" width="0.0322%" height="15" fill="rgb(241,130,17)" fg:x="1610" fg:w="1"/><text x="52.1687%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="52.2090%" y="181" width="0.0645%" height="15" fill="rgb(206,137,32)" fg:x="1619" fg:w="2"/><text x="52.4590%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (3 samples, 0.10%)</title><rect x="52.4669%" y="165" width="0.0967%" height="15" fill="rgb(237,228,51)" fg:x="1627" fg:w="3"/><text x="52.7169%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="52.7894%" y="149" width="0.0645%" height="15" fill="rgb(243,6,42)" fg:x="1637" fg:w="2"/><text x="53.0394%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (1 samples, 0.03%)</title><rect x="52.8539%" y="149" width="0.0322%" height="15" fill="rgb(251,74,28)" fg:x="1639" fg:w="1"/><text x="53.1039%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.29%)</title><rect x="53.3699%" y="133" width="0.2902%" height="15" fill="rgb(218,20,49)" fg:x="1655" fg:w="9"/><text x="53.6199%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (41 samples, 1.32%)</title><rect x="52.5637%" y="165" width="1.3222%" height="15" fill="rgb(238,28,14)" fg:x="1630" fg:w="41"/><text x="52.8137%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (31 samples, 1.00%)</title><rect x="52.8862%" y="149" width="0.9997%" height="15" fill="rgb(229,40,46)" fg:x="1640" fg:w="31"/><text x="53.1362%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (7 samples, 0.23%)</title><rect x="53.6601%" y="133" width="0.2257%" height="15" fill="rgb(244,195,20)" fg:x="1664" fg:w="7"/><text x="53.9101%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (9 samples, 0.29%)</title><rect x="53.8858%" y="165" width="0.2902%" height="15" fill="rgb(253,56,35)" fg:x="1671" fg:w="9"/><text x="54.1358%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="54.1438%" y="149" width="0.0322%" height="15" fill="rgb(210,149,44)" fg:x="1679" fg:w="1"/><text x="54.3938%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (10 samples, 0.32%)</title><rect x="54.3696%" y="133" width="0.3225%" height="15" fill="rgb(240,135,12)" fg:x="1686" fg:w="10"/><text x="54.6196%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (9 samples, 0.29%)</title><rect x="54.4018%" y="117" width="0.2902%" height="15" fill="rgb(251,24,50)" fg:x="1687" fg:w="9"/><text x="54.6518%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (17 samples, 0.55%)</title><rect x="54.1761%" y="165" width="0.5482%" height="15" fill="rgb(243,200,47)" fg:x="1680" fg:w="17"/><text x="54.4261%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (15 samples, 0.48%)</title><rect x="54.2406%" y="149" width="0.4837%" height="15" fill="rgb(224,166,26)" fg:x="1682" fg:w="15"/><text x="54.4906%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="54.6920%" y="133" width="0.0322%" height="15" fill="rgb(233,0,47)" fg:x="1696" fg:w="1"/><text x="54.9420%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (77 samples, 2.48%)</title><rect x="52.2735%" y="181" width="2.4831%" height="15" fill="rgb(253,80,5)" fg:x="1621" fg:w="77"/><text x="52.5235%" y="191.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="54.7243%" y="165" width="0.0322%" height="15" fill="rgb(214,133,25)" fg:x="1697" fg:w="1"/><text x="54.9743%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="54.7565%" y="181" width="0.0322%" height="15" fill="rgb(209,27,14)" fg:x="1698" fg:w="1"/><text x="55.0065%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (3 samples, 0.10%)</title><rect x="55.3692%" y="149" width="0.0967%" height="15" fill="rgb(219,102,51)" fg:x="1717" fg:w="3"/><text x="55.6192%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (26 samples, 0.84%)</title><rect x="54.9500%" y="165" width="0.8384%" height="15" fill="rgb(237,18,16)" fg:x="1704" fg:w="26"/><text x="55.2000%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (10 samples, 0.32%)</title><rect x="55.4660%" y="149" width="0.3225%" height="15" fill="rgb(241,85,17)" fg:x="1720" fg:w="10"/><text x="55.7160%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (406 samples, 13.09%)</title><rect x="42.7604%" y="213" width="13.0926%" height="15" fill="rgb(236,90,42)" fg:x="1326" fg:w="406"/><text x="43.0104%" y="223.50">basic_algorithms_and..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (121 samples, 3.90%)</title><rect x="51.9510%" y="197" width="3.9020%" height="15" fill="rgb(249,57,21)" fg:x="1611" fg:w="121"/><text x="52.2010%" y="207.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (33 samples, 1.06%)</title><rect x="54.7888%" y="181" width="1.0642%" height="15" fill="rgb(243,12,36)" fg:x="1699" fg:w="33"/><text x="55.0388%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.06%)</title><rect x="55.7885%" y="165" width="0.0645%" height="15" fill="rgb(253,128,47)" fg:x="1730" fg:w="2"/><text x="56.0385%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (3 samples, 0.10%)</title><rect x="55.8530%" y="213" width="0.0967%" height="15" fill="rgb(207,33,20)" fg:x="1732" fg:w="3"/><text x="56.1030%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (2 samples, 0.06%)</title><rect x="55.9497%" y="213" width="0.0645%" height="15" fill="rgb(233,215,35)" fg:x="1735" fg:w="2"/><text x="56.1997%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::len (3 samples, 0.10%)</title><rect x="56.2077%" y="197" width="0.0967%" height="15" fill="rgb(249,188,52)" fg:x="1743" fg:w="3"/><text x="56.4577%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (3 samples, 0.10%)</title><rect x="56.3044%" y="197" width="0.0967%" height="15" fill="rgb(225,12,32)" fg:x="1746" fg:w="3"/><text x="56.5544%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (8 samples, 0.26%)</title><rect x="56.8204%" y="165" width="0.2580%" height="15" fill="rgb(247,98,14)" fg:x="1762" fg:w="8"/><text x="57.0704%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (33 samples, 1.06%)</title><rect x="56.4657%" y="181" width="1.0642%" height="15" fill="rgb(247,219,48)" fg:x="1751" fg:w="33"/><text x="56.7157%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (14 samples, 0.45%)</title><rect x="57.0784%" y="165" width="0.4515%" height="15" fill="rgb(253,60,48)" fg:x="1770" fg:w="14"/><text x="57.3284%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (475 samples, 15.32%)</title><rect x="42.2767%" y="229" width="15.3176%" height="15" fill="rgb(245,15,52)" fg:x="1311" fg:w="475"/><text x="42.5267%" y="239.50">basic_algorithms_and_da..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (49 samples, 1.58%)</title><rect x="56.0142%" y="213" width="1.5801%" height="15" fill="rgb(220,133,28)" fg:x="1737" fg:w="49"/><text x="56.2642%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (37 samples, 1.19%)</title><rect x="56.4012%" y="197" width="1.1932%" height="15" fill="rgb(217,180,4)" fg:x="1749" fg:w="37"/><text x="56.6512%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="57.5298%" y="181" width="0.0645%" height="15" fill="rgb(251,24,1)" fg:x="1784" fg:w="2"/><text x="57.7798%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (2 samples, 0.06%)</title><rect x="57.5943%" y="229" width="0.0645%" height="15" fill="rgb(212,185,49)" fg:x="1786" fg:w="2"/><text x="57.8443%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (497 samples, 16.03%)</title><rect x="41.9220%" y="245" width="16.0271%" height="15" fill="rgb(215,175,22)" fg:x="1300" fg:w="497"/><text x="42.1720%" y="255.50">basic_algorithms_and_data..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or_else (9 samples, 0.29%)</title><rect x="57.6588%" y="229" width="0.2902%" height="15" fill="rgb(250,205,14)" fg:x="1788" fg:w="9"/><text x="57.9088%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (523 samples, 16.87%)</title><rect x="41.1803%" y="261" width="16.8655%" height="15" fill="rgb(225,211,22)" fg:x="1277" fg:w="523"/><text x="41.4303%" y="271.50">basic_algorithms_and_data_..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (3 samples, 0.10%)</title><rect x="57.9490%" y="245" width="0.0967%" height="15" fill="rgb(251,179,42)" fg:x="1797" fg:w="3"/><text x="58.1990%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="57.9490%" y="229" width="0.0967%" height="15" fill="rgb(208,216,51)" fg:x="1797" fg:w="3"/><text x="58.1990%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (2 samples, 0.06%)</title><rect x="58.0458%" y="245" width="0.0645%" height="15" fill="rgb(235,36,11)" fg:x="1800" fg:w="2"/><text x="58.2958%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (16 samples, 0.52%)</title><rect x="58.1748%" y="229" width="0.5160%" height="15" fill="rgb(213,189,28)" fg:x="1804" fg:w="16"/><text x="58.4248%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (12 samples, 0.39%)</title><rect x="58.3038%" y="213" width="0.3870%" height="15" fill="rgb(227,203,42)" fg:x="1808" fg:w="12"/><text x="58.5538%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (559 samples, 18.03%)</title><rect x="40.7288%" y="277" width="18.0264%" height="15" fill="rgb(244,72,36)" fg:x="1263" fg:w="559"/><text x="40.9788%" y="287.50">basic_algorithms_and_data_st..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (22 samples, 0.71%)</title><rect x="58.0458%" y="261" width="0.7094%" height="15" fill="rgb(213,53,17)" fg:x="1800" fg:w="22"/><text x="58.2958%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (20 samples, 0.64%)</title><rect x="58.1103%" y="245" width="0.6450%" height="15" fill="rgb(207,167,3)" fg:x="1802" fg:w="20"/><text x="58.3603%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="58.6907%" y="229" width="0.0645%" height="15" fill="rgb(216,98,30)" fg:x="1820" fg:w="2"/><text x="58.9407%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_number_of_matching_bits (579 samples, 18.67%)</title><rect x="40.3741%" y="293" width="18.6714%" height="15" fill="rgb(236,123,15)" fg:x="1252" fg:w="579"/><text x="40.6241%" y="303.50">basic_algorithms_and_data_str..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.29%)</title><rect x="58.7552%" y="277" width="0.2902%" height="15" fill="rgb(248,81,50)" fg:x="1822" fg:w="9"/><text x="59.0052%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.26%)</title><rect x="58.7875%" y="261" width="0.2580%" height="15" fill="rgb(214,120,4)" fg:x="1823" fg:w="8"/><text x="59.0375%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="59.0132%" y="245" width="0.0322%" height="15" fill="rgb(208,179,34)" fg:x="1830" fg:w="1"/><text x="59.2632%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (1 samples, 0.03%)</title><rect x="59.2390%" y="261" width="0.0322%" height="15" fill="rgb(227,140,7)" fg:x="1837" fg:w="1"/><text x="59.4890%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (2 samples, 0.06%)</title><rect x="59.2712%" y="261" width="0.0645%" height="15" fill="rgb(214,22,6)" fg:x="1838" fg:w="2"/><text x="59.5212%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (1 samples, 0.03%)</title><rect x="59.4002%" y="245" width="0.0322%" height="15" fill="rgb(207,137,27)" fg:x="1842" fg:w="1"/><text x="59.6502%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (3 samples, 0.10%)</title><rect x="59.4324%" y="245" width="0.0967%" height="15" fill="rgb(210,8,46)" fg:x="1843" fg:w="3"/><text x="59.6824%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="60.2386%" y="229" width="0.0645%" height="15" fill="rgb(240,16,54)" fg:x="1868" fg:w="2"/><text x="60.4886%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (2 samples, 0.06%)</title><rect x="60.3031%" y="229" width="0.0645%" height="15" fill="rgb(211,209,29)" fg:x="1870" fg:w="2"/><text x="60.5531%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="61.4640%" y="165" width="0.0645%" height="15" fill="rgb(226,228,24)" fg:x="1906" fg:w="2"/><text x="61.7140%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::into_inner (3 samples, 0.10%)</title><rect x="61.7543%" y="149" width="0.0967%" height="15" fill="rgb(222,84,9)" fg:x="1915" fg:w="3"/><text x="62.0043%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="62.3670%" y="133" width="0.0322%" height="15" fill="rgb(234,203,30)" fg:x="1934" fg:w="1"/><text x="62.6170%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (9 samples, 0.29%)</title><rect x="62.5927%" y="117" width="0.2902%" height="15" fill="rgb(238,109,14)" fg:x="1941" fg:w="9"/><text x="62.8427%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (9 samples, 0.29%)</title><rect x="62.5927%" y="101" width="0.2902%" height="15" fill="rgb(233,206,34)" fg:x="1941" fg:w="9"/><text x="62.8427%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (33 samples, 1.06%)</title><rect x="61.8510%" y="149" width="1.0642%" height="15" fill="rgb(220,167,47)" fg:x="1918" fg:w="33"/><text x="62.1010%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (16 samples, 0.52%)</title><rect x="62.3992%" y="133" width="0.5160%" height="15" fill="rgb(238,105,10)" fg:x="1935" fg:w="16"/><text x="62.6492%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="62.8829%" y="117" width="0.0322%" height="15" fill="rgb(213,227,17)" fg:x="1950" fg:w="1"/><text x="63.1329%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="63.1732%" y="133" width="0.0322%" height="15" fill="rgb(217,132,38)" fg:x="1959" fg:w="1"/><text x="63.4232%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.19%)</title><rect x="63.5279%" y="117" width="0.1935%" height="15" fill="rgb(242,146,4)" fg:x="1970" fg:w="6"/><text x="63.7779%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (29 samples, 0.94%)</title><rect x="62.9152%" y="149" width="0.9352%" height="15" fill="rgb(212,61,9)" fg:x="1951" fg:w="29"/><text x="63.1652%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (20 samples, 0.64%)</title><rect x="63.2054%" y="133" width="0.6450%" height="15" fill="rgb(247,126,22)" fg:x="1960" fg:w="20"/><text x="63.4554%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (4 samples, 0.13%)</title><rect x="63.7214%" y="117" width="0.1290%" height="15" fill="rgb(220,196,2)" fg:x="1976" fg:w="4"/><text x="63.9714%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (9 samples, 0.29%)</title><rect x="65.0113%" y="117" width="0.2902%" height="15" fill="rgb(208,46,4)" fg:x="2016" fg:w="9"/><text x="65.2613%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (4 samples, 0.13%)</title><rect x="65.1725%" y="101" width="0.1290%" height="15" fill="rgb(252,104,46)" fg:x="2021" fg:w="4"/><text x="65.4225%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (120 samples, 3.87%)</title><rect x="61.5285%" y="165" width="3.8697%" height="15" fill="rgb(237,152,48)" fg:x="1908" fg:w="120"/><text x="61.7785%" y="175.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (48 samples, 1.55%)</title><rect x="63.8504%" y="149" width="1.5479%" height="15" fill="rgb(221,59,37)" fg:x="1980" fg:w="48"/><text x="64.1004%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (46 samples, 1.48%)</title><rect x="63.9149%" y="133" width="1.4834%" height="15" fill="rgb(209,202,51)" fg:x="1982" fg:w="46"/><text x="64.1649%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset::_{{closure}} (3 samples, 0.10%)</title><rect x="65.3015%" y="117" width="0.0967%" height="15" fill="rgb(228,81,30)" fg:x="2025" fg:w="3"/><text x="65.5515%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (128 samples, 4.13%)</title><rect x="61.3028%" y="181" width="4.1277%" height="15" fill="rgb(227,42,39)" fg:x="1901" fg:w="128"/><text x="61.5528%" y="191.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (1 samples, 0.03%)</title><rect x="65.3983%" y="165" width="0.0322%" height="15" fill="rgb(221,26,2)" fg:x="2028" fg:w="1"/><text x="65.6483%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="66.2689%" y="149" width="0.0322%" height="15" fill="rgb(254,61,31)" fg:x="2055" fg:w="1"/><text x="66.5189%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.03%)</title><rect x="66.5914%" y="133" width="0.0322%" height="15" fill="rgb(222,173,38)" fg:x="2065" fg:w="1"/><text x="66.8414%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (1 samples, 0.03%)</title><rect x="67.0429%" y="117" width="0.0322%" height="15" fill="rgb(218,50,12)" fg:x="2079" fg:w="1"/><text x="67.2929%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="67.0751%" y="117" width="0.0322%" height="15" fill="rgb(223,88,40)" fg:x="2080" fg:w="1"/><text x="67.3251%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (2 samples, 0.06%)</title><rect x="67.1074%" y="117" width="0.0645%" height="15" fill="rgb(237,54,19)" fg:x="2081" fg:w="2"/><text x="67.3574%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (7 samples, 0.23%)</title><rect x="67.3009%" y="85" width="0.2257%" height="15" fill="rgb(251,129,25)" fg:x="2087" fg:w="7"/><text x="67.5509%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as funty::Integral&gt;::count_ones (2 samples, 0.06%)</title><rect x="67.5266%" y="85" width="0.0645%" height="15" fill="rgb(238,97,19)" fg:x="2094" fg:w="2"/><text x="67.7766%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (31 samples, 1.00%)</title><rect x="67.2041%" y="101" width="0.9997%" height="15" fill="rgb(240,169,18)" fg:x="2084" fg:w="31"/><text x="67.4541%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (19 samples, 0.61%)</title><rect x="67.5911%" y="85" width="0.6127%" height="15" fill="rgb(230,187,49)" fg:x="2096" fg:w="19"/><text x="67.8411%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as funty::Integral&gt;::count_ones (13 samples, 0.42%)</title><rect x="67.7846%" y="69" width="0.4192%" height="15" fill="rgb(209,44,26)" fg:x="2102" fg:w="13"/><text x="68.0346%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (33 samples, 1.06%)</title><rect x="67.1719%" y="117" width="1.0642%" height="15" fill="rgb(244,0,6)" fg:x="2083" fg:w="33"/><text x="67.4219%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (1 samples, 0.03%)</title><rect x="68.2038%" y="101" width="0.0322%" height="15" fill="rgb(248,18,21)" fg:x="2115" fg:w="1"/><text x="68.4538%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::store::BitStore::get_bit (53 samples, 1.71%)</title><rect x="66.6237%" y="133" width="1.7091%" height="15" fill="rgb(245,180,19)" fg:x="2066" fg:w="53"/><text x="66.8737%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (3 samples, 0.10%)</title><rect x="68.2361%" y="117" width="0.0967%" height="15" fill="rgb(252,118,36)" fg:x="2116" fg:w="3"/><text x="68.4861%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (75 samples, 2.42%)</title><rect x="65.9465%" y="165" width="2.4186%" height="15" fill="rgb(210,224,19)" fg:x="2045" fg:w="75"/><text x="66.1965%" y="175.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (64 samples, 2.06%)</title><rect x="66.3012%" y="149" width="2.0639%" height="15" fill="rgb(218,30,24)" fg:x="2056" fg:w="64"/><text x="66.5512%" y="159.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (1 samples, 0.03%)</title><rect x="68.3328%" y="133" width="0.0322%" height="15" fill="rgb(219,75,50)" fg:x="2119" fg:w="1"/><text x="68.5828%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (1 samples, 0.03%)</title><rect x="68.3650%" y="165" width="0.0322%" height="15" fill="rgb(234,72,50)" fg:x="2120" fg:w="1"/><text x="68.6150%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (95 samples, 3.06%)</title><rect x="65.4305%" y="181" width="3.0635%" height="15" fill="rgb(219,100,48)" fg:x="2029" fg:w="95"/><text x="65.6805%" y="191.50">bas..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::to_const (3 samples, 0.10%)</title><rect x="68.3973%" y="165" width="0.0967%" height="15" fill="rgb(253,5,41)" fg:x="2121" fg:w="3"/><text x="68.6473%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (3 samples, 0.10%)</title><rect x="68.7843%" y="165" width="0.0967%" height="15" fill="rgb(247,181,11)" fg:x="2133" fg:w="3"/><text x="69.0343%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="69.1390%" y="149" width="0.0322%" height="15" fill="rgb(222,223,25)" fg:x="2144" fg:w="1"/><text x="69.3890%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="70.2354%" y="117" width="0.0645%" height="15" fill="rgb(214,198,28)" fg:x="2178" fg:w="2"/><text x="70.4854%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (42 samples, 1.35%)</title><rect x="69.1712%" y="149" width="1.3544%" height="15" fill="rgb(230,46,43)" fg:x="2145" fg:w="42"/><text x="69.4212%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (29 samples, 0.94%)</title><rect x="69.5905%" y="133" width="0.9352%" height="15" fill="rgb(233,65,53)" fg:x="2158" fg:w="29"/><text x="69.8405%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (7 samples, 0.23%)</title><rect x="70.2999%" y="117" width="0.2257%" height="15" fill="rgb(221,121,27)" fg:x="2180" fg:w="7"/><text x="70.5499%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (3 samples, 0.10%)</title><rect x="70.5256%" y="149" width="0.0967%" height="15" fill="rgb(247,70,47)" fg:x="2187" fg:w="3"/><text x="70.7756%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="70.5901%" y="133" width="0.0322%" height="15" fill="rgb(228,85,35)" fg:x="2189" fg:w="1"/><text x="70.8401%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (11 samples, 0.35%)</title><rect x="70.8804%" y="117" width="0.3547%" height="15" fill="rgb(209,50,18)" fg:x="2198" fg:w="11"/><text x="71.1304%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (10 samples, 0.32%)</title><rect x="70.9126%" y="101" width="0.3225%" height="15" fill="rgb(250,19,35)" fg:x="2199" fg:w="10"/><text x="71.1626%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (20 samples, 0.64%)</title><rect x="70.6224%" y="149" width="0.6450%" height="15" fill="rgb(253,107,29)" fg:x="2190" fg:w="20"/><text x="70.8724%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (20 samples, 0.64%)</title><rect x="70.6224%" y="133" width="0.6450%" height="15" fill="rgb(252,179,29)" fg:x="2190" fg:w="20"/><text x="70.8724%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="71.2351%" y="117" width="0.0322%" height="15" fill="rgb(238,194,6)" fg:x="2209" fg:w="1"/><text x="71.4851%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (76 samples, 2.45%)</title><rect x="68.8810%" y="165" width="2.4508%" height="15" fill="rgb(238,164,29)" fg:x="2136" fg:w="76"/><text x="69.1310%" y="175.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="71.2673%" y="149" width="0.0645%" height="15" fill="rgb(224,25,9)" fg:x="2210" fg:w="2"/><text x="71.5173%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="71.3318%" y="165" width="0.0322%" height="15" fill="rgb(244,153,23)" fg:x="2212" fg:w="1"/><text x="71.5818%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (6 samples, 0.19%)</title><rect x="71.8478%" y="133" width="0.1935%" height="15" fill="rgb(212,203,14)" fg:x="2228" fg:w="6"/><text x="72.0978%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (26 samples, 0.84%)</title><rect x="71.4286%" y="149" width="0.8384%" height="15" fill="rgb(220,164,20)" fg:x="2215" fg:w="26"/><text x="71.6786%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (7 samples, 0.23%)</title><rect x="72.0413%" y="133" width="0.2257%" height="15" fill="rgb(222,203,48)" fg:x="2234" fg:w="7"/><text x="72.2913%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (357 samples, 11.51%)</title><rect x="60.7868%" y="197" width="11.5124%" height="15" fill="rgb(215,159,22)" fg:x="1885" fg:w="357"/><text x="61.0368%" y="207.50">basic_algorithms_..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (118 samples, 3.81%)</title><rect x="68.4940%" y="181" width="3.8052%" height="15" fill="rgb(216,183,47)" fg:x="2124" fg:w="118"/><text x="68.7440%" y="191.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (29 samples, 0.94%)</title><rect x="71.3641%" y="165" width="0.9352%" height="15" fill="rgb(229,195,25)" fg:x="2213" fg:w="29"/><text x="71.6141%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="72.2670%" y="149" width="0.0322%" height="15" fill="rgb(224,132,51)" fg:x="2241" fg:w="1"/><text x="72.5170%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::len (1 samples, 0.03%)</title><rect x="72.4282%" y="181" width="0.0322%" height="15" fill="rgb(240,63,7)" fg:x="2246" fg:w="1"/><text x="72.6782%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (3 samples, 0.10%)</title><rect x="72.4605%" y="181" width="0.0967%" height="15" fill="rgb(249,182,41)" fg:x="2247" fg:w="3"/><text x="72.7105%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (6 samples, 0.19%)</title><rect x="72.9120%" y="149" width="0.1935%" height="15" fill="rgb(243,47,26)" fg:x="2261" fg:w="6"/><text x="73.1620%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (24 samples, 0.77%)</title><rect x="72.6540%" y="165" width="0.7739%" height="15" fill="rgb(233,48,2)" fg:x="2253" fg:w="24"/><text x="72.9040%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (10 samples, 0.32%)</title><rect x="73.1054%" y="149" width="0.3225%" height="15" fill="rgb(244,165,34)" fg:x="2267" fg:w="10"/><text x="73.3554%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (404 samples, 13.03%)</title><rect x="60.4321%" y="213" width="13.0281%" height="15" fill="rgb(207,89,7)" fg:x="1874" fg:w="404"/><text x="60.6821%" y="223.50">basic_algorithms_and..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (36 samples, 1.16%)</title><rect x="72.2993%" y="197" width="1.1609%" height="15" fill="rgb(244,117,36)" fg:x="2242" fg:w="36"/><text x="72.5493%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (28 samples, 0.90%)</title><rect x="72.5572%" y="181" width="0.9029%" height="15" fill="rgb(226,144,34)" fg:x="2250" fg:w="28"/><text x="72.8072%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="73.4279%" y="165" width="0.0322%" height="15" fill="rgb(213,23,19)" fg:x="2277" fg:w="1"/><text x="73.6779%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (4 samples, 0.13%)</title><rect x="73.4602%" y="213" width="0.1290%" height="15" fill="rgb(217,75,12)" fg:x="2278" fg:w="4"/><text x="73.7102%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (425 samples, 13.71%)</title><rect x="60.3676%" y="229" width="13.7053%" height="15" fill="rgb(224,159,17)" fg:x="1872" fg:w="425"/><text x="60.6176%" y="239.50">basic_algorithms_and_..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or_else (15 samples, 0.48%)</title><rect x="73.5892%" y="213" width="0.4837%" height="15" fill="rgb(217,118,1)" fg:x="2282" fg:w="15"/><text x="73.8392%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (457 samples, 14.74%)</title><rect x="59.5292%" y="245" width="14.7372%" height="15" fill="rgb(232,180,48)" fg:x="1846" fg:w="457"/><text x="59.7792%" y="255.50">basic_algorithms_and_d..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (6 samples, 0.19%)</title><rect x="74.0729%" y="229" width="0.1935%" height="15" fill="rgb(230,27,33)" fg:x="2297" fg:w="6"/><text x="74.3229%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="74.1696%" y="213" width="0.0967%" height="15" fill="rgb(205,31,21)" fg:x="2300" fg:w="3"/><text x="74.4196%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (19 samples, 0.61%)</title><rect x="74.2664%" y="245" width="0.6127%" height="15" fill="rgb(253,59,4)" fg:x="2303" fg:w="19"/><text x="74.5164%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (18 samples, 0.58%)</title><rect x="74.2986%" y="229" width="0.5805%" height="15" fill="rgb(224,201,9)" fg:x="2304" fg:w="18"/><text x="74.5486%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (13 samples, 0.42%)</title><rect x="74.4599%" y="213" width="0.4192%" height="15" fill="rgb(229,206,30)" fg:x="2309" fg:w="13"/><text x="74.7099%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (12 samples, 0.39%)</title><rect x="74.4921%" y="197" width="0.3870%" height="15" fill="rgb(212,67,47)" fg:x="2310" fg:w="12"/><text x="74.7421%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (486 samples, 15.67%)</title><rect x="59.3357%" y="261" width="15.6724%" height="15" fill="rgb(211,96,50)" fg:x="1840" fg:w="486"/><text x="59.5857%" y="271.50">basic_algorithms_and_dat..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (4 samples, 0.13%)</title><rect x="74.8791%" y="245" width="0.1290%" height="15" fill="rgb(252,114,18)" fg:x="2322" fg:w="4"/><text x="75.1291%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_number_of_matching_bits (499 samples, 16.09%)</title><rect x="59.0455%" y="277" width="16.0916%" height="15" fill="rgb(223,58,37)" fg:x="1831" fg:w="499"/><text x="59.2955%" y="287.50">basic_algorithms_and_data..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.13%)</title><rect x="75.0081%" y="261" width="0.1290%" height="15" fill="rgb(237,70,4)" fg:x="2326" fg:w="4"/><text x="75.2581%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.10%)</title><rect x="75.0403%" y="245" width="0.0967%" height="15" fill="rgb(244,85,46)" fg:x="2327" fg:w="3"/><text x="75.2903%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (3 samples, 0.10%)</title><rect x="75.4273%" y="245" width="0.0967%" height="15" fill="rgb(223,39,52)" fg:x="2339" fg:w="3"/><text x="75.6773%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (1 samples, 0.03%)</title><rect x="75.7175%" y="229" width="0.0322%" height="15" fill="rgb(218,200,14)" fg:x="2348" fg:w="1"/><text x="75.9675%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (2 samples, 0.06%)</title><rect x="75.7498%" y="229" width="0.0645%" height="15" fill="rgb(208,171,16)" fg:x="2349" fg:w="2"/><text x="75.9998%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="76.3302%" y="213" width="0.0322%" height="15" fill="rgb(234,200,18)" fg:x="2367" fg:w="1"/><text x="76.5802%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (3 samples, 0.10%)</title><rect x="76.3625%" y="213" width="0.0967%" height="15" fill="rgb(228,45,11)" fg:x="2368" fg:w="3"/><text x="76.6125%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (1 samples, 0.03%)</title><rect x="77.2976%" y="165" width="0.0322%" height="15" fill="rgb(237,182,11)" fg:x="2397" fg:w="1"/><text x="77.5476%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="77.3621%" y="149" width="0.0322%" height="15" fill="rgb(241,175,49)" fg:x="2399" fg:w="1"/><text x="77.6121%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="77.7491%" y="133" width="0.0322%" height="15" fill="rgb(247,38,35)" fg:x="2411" fg:w="1"/><text x="77.9991%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (29 samples, 0.94%)</title><rect x="77.7814%" y="133" width="0.9352%" height="15" fill="rgb(228,39,49)" fg:x="2412" fg:w="29"/><text x="78.0314%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (9 samples, 0.29%)</title><rect x="78.4263%" y="117" width="0.2902%" height="15" fill="rgb(226,101,26)" fg:x="2432" fg:w="9"/><text x="78.6763%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (4 samples, 0.13%)</title><rect x="78.5876%" y="101" width="0.1290%" height="15" fill="rgb(206,141,19)" fg:x="2437" fg:w="4"/><text x="78.8376%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (4 samples, 0.13%)</title><rect x="78.5876%" y="85" width="0.1290%" height="15" fill="rgb(211,200,13)" fg:x="2437" fg:w="4"/><text x="78.8376%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="78.7488%" y="117" width="0.0645%" height="15" fill="rgb(241,121,6)" fg:x="2442" fg:w="2"/><text x="78.9988%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (1 samples, 0.03%)</title><rect x="78.8133%" y="117" width="0.0322%" height="15" fill="rgb(234,221,29)" fg:x="2444" fg:w="1"/><text x="79.0633%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.10%)</title><rect x="79.4905%" y="101" width="0.0967%" height="15" fill="rgb(229,136,5)" fg:x="2465" fg:w="3"/><text x="79.7405%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (32 samples, 1.03%)</title><rect x="78.7165%" y="133" width="1.0319%" height="15" fill="rgb(238,36,11)" fg:x="2441" fg:w="32"/><text x="78.9665%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (28 samples, 0.90%)</title><rect x="78.8455%" y="117" width="0.9029%" height="15" fill="rgb(251,55,41)" fg:x="2445" fg:w="28"/><text x="79.0955%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (5 samples, 0.16%)</title><rect x="79.5872%" y="101" width="0.1612%" height="15" fill="rgb(242,34,40)" fg:x="2468" fg:w="5"/><text x="79.8372%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (17 samples, 0.55%)</title><rect x="80.4257%" y="101" width="0.5482%" height="15" fill="rgb(215,42,17)" fg:x="2494" fg:w="17"/><text x="80.6757%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (10 samples, 0.32%)</title><rect x="80.6514%" y="85" width="0.3225%" height="15" fill="rgb(207,44,46)" fg:x="2501" fg:w="10"/><text x="80.9014%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (44 samples, 1.42%)</title><rect x="79.7485%" y="133" width="1.4189%" height="15" fill="rgb(211,206,28)" fg:x="2473" fg:w="44"/><text x="79.9985%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (43 samples, 1.39%)</title><rect x="79.7807%" y="117" width="1.3866%" height="15" fill="rgb(237,167,16)" fg:x="2474" fg:w="43"/><text x="80.0307%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset::_{{closure}} (6 samples, 0.19%)</title><rect x="80.9739%" y="101" width="0.1935%" height="15" fill="rgb(233,66,6)" fg:x="2511" fg:w="6"/><text x="81.2239%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (120 samples, 3.87%)</title><rect x="77.3944%" y="149" width="3.8697%" height="15" fill="rgb(246,123,29)" fg:x="2400" fg:w="120"/><text x="77.6444%" y="159.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (3 samples, 0.10%)</title><rect x="81.1674%" y="133" width="0.0967%" height="15" fill="rgb(209,62,40)" fg:x="2517" fg:w="3"/><text x="81.4174%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (126 samples, 4.06%)</title><rect x="77.3299%" y="165" width="4.0632%" height="15" fill="rgb(218,4,25)" fg:x="2398" fg:w="126"/><text x="77.5799%" y="175.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (4 samples, 0.13%)</title><rect x="81.2641%" y="149" width="0.1290%" height="15" fill="rgb(253,91,49)" fg:x="2520" fg:w="4"/><text x="81.5141%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (2 samples, 0.06%)</title><rect x="82.3605%" y="117" width="0.0645%" height="15" fill="rgb(228,155,29)" fg:x="2554" fg:w="2"/><text x="82.6105%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.03%)</title><rect x="82.4250%" y="117" width="0.0322%" height="15" fill="rgb(243,57,37)" fg:x="2556" fg:w="1"/><text x="82.6750%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (2 samples, 0.06%)</title><rect x="82.4573%" y="117" width="0.0645%" height="15" fill="rgb(244,167,17)" fg:x="2557" fg:w="2"/><text x="82.7073%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.03%)</title><rect x="82.9087%" y="101" width="0.0322%" height="15" fill="rgb(207,181,38)" fg:x="2571" fg:w="1"/><text x="83.1587%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (5 samples, 0.16%)</title><rect x="82.9410%" y="69" width="0.1612%" height="15" fill="rgb(211,8,23)" fg:x="2572" fg:w="5"/><text x="83.1910%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as funty::Integral&gt;::count_ones (1 samples, 0.03%)</title><rect x="83.1022%" y="69" width="0.0322%" height="15" fill="rgb(235,11,44)" fg:x="2577" fg:w="1"/><text x="83.3522%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (17 samples, 0.55%)</title><rect x="82.9410%" y="85" width="0.5482%" height="15" fill="rgb(248,18,52)" fg:x="2572" fg:w="17"/><text x="83.1910%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (11 samples, 0.35%)</title><rect x="83.1345%" y="69" width="0.3547%" height="15" fill="rgb(208,4,7)" fg:x="2578" fg:w="11"/><text x="83.3845%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as funty::Integral&gt;::count_ones (6 samples, 0.19%)</title><rect x="83.2957%" y="53" width="0.1935%" height="15" fill="rgb(240,17,39)" fg:x="2583" fg:w="6"/><text x="83.5457%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (1 samples, 0.03%)</title><rect x="83.4892%" y="85" width="0.0322%" height="15" fill="rgb(207,170,3)" fg:x="2589" fg:w="1"/><text x="83.7392%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (19 samples, 0.61%)</title><rect x="82.9410%" y="101" width="0.6127%" height="15" fill="rgb(236,100,52)" fg:x="2572" fg:w="19"/><text x="83.1910%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="83.5214%" y="85" width="0.0322%" height="15" fill="rgb(246,78,51)" fg:x="2590" fg:w="1"/><text x="83.7714%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::into_inner (1 samples, 0.03%)</title><rect x="83.5537%" y="101" width="0.0322%" height="15" fill="rgb(211,17,15)" fg:x="2591" fg:w="1"/><text x="83.8037%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::store::BitStore::get_bit (36 samples, 1.16%)</title><rect x="82.5218%" y="117" width="1.1609%" height="15" fill="rgb(209,59,46)" fg:x="2559" fg:w="36"/><text x="82.7718%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (3 samples, 0.10%)</title><rect x="83.5859%" y="101" width="0.0967%" height="15" fill="rgb(210,92,25)" fg:x="2592" fg:w="3"/><text x="83.8359%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (59 samples, 1.90%)</title><rect x="81.8123%" y="149" width="1.9026%" height="15" fill="rgb(238,174,52)" fg:x="2537" fg:w="59"/><text x="82.0623%" y="159.50">b..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (50 samples, 1.61%)</title><rect x="82.1025%" y="133" width="1.6124%" height="15" fill="rgb(230,73,7)" fg:x="2546" fg:w="50"/><text x="82.3525%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (1 samples, 0.03%)</title><rect x="83.6827%" y="117" width="0.0322%" height="15" fill="rgb(243,124,40)" fg:x="2595" fg:w="1"/><text x="83.9327%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (78 samples, 2.52%)</title><rect x="81.3931%" y="165" width="2.5153%" height="15" fill="rgb(244,170,11)" fg:x="2524" fg:w="78"/><text x="81.6431%" y="175.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::to_const (6 samples, 0.19%)</title><rect x="83.7149%" y="149" width="0.1935%" height="15" fill="rgb(207,114,54)" fg:x="2596" fg:w="6"/><text x="83.9649%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (1 samples, 0.03%)</title><rect x="83.9084%" y="165" width="0.0322%" height="15" fill="rgb(205,42,20)" fg:x="2602" fg:w="1"/><text x="84.1584%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::to_const (1 samples, 0.03%)</title><rect x="83.9407%" y="165" width="0.0322%" height="15" fill="rgb(230,30,28)" fg:x="2603" fg:w="1"/><text x="84.1907%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="84.0697%" y="149" width="0.0322%" height="15" fill="rgb(205,73,54)" fg:x="2607" fg:w="1"/><text x="84.3197%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (1 samples, 0.03%)</title><rect x="84.1019%" y="149" width="0.0322%" height="15" fill="rgb(254,227,23)" fg:x="2608" fg:w="1"/><text x="84.3519%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="84.2954%" y="133" width="0.0322%" height="15" fill="rgb(228,202,34)" fg:x="2614" fg:w="1"/><text x="84.5454%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.23%)</title><rect x="85.0693%" y="101" width="0.2257%" height="15" fill="rgb(222,225,37)" fg:x="2638" fg:w="7"/><text x="85.3193%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (37 samples, 1.19%)</title><rect x="84.3276%" y="133" width="1.1932%" height="15" fill="rgb(221,14,54)" fg:x="2615" fg:w="37"/><text x="84.5776%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (33 samples, 1.06%)</title><rect x="84.4566%" y="117" width="1.0642%" height="15" fill="rgb(254,102,2)" fg:x="2619" fg:w="33"/><text x="84.7066%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (7 samples, 0.23%)</title><rect x="85.2951%" y="101" width="0.2257%" height="15" fill="rgb(232,104,17)" fg:x="2645" fg:w="7"/><text x="85.5451%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (10 samples, 0.32%)</title><rect x="85.5208%" y="133" width="0.3225%" height="15" fill="rgb(250,220,14)" fg:x="2652" fg:w="10"/><text x="85.7708%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="85.7788%" y="117" width="0.0645%" height="15" fill="rgb(241,158,9)" fg:x="2660" fg:w="2"/><text x="86.0288%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (7 samples, 0.23%)</title><rect x="86.1335%" y="101" width="0.2257%" height="15" fill="rgb(246,9,43)" fg:x="2671" fg:w="7"/><text x="86.3835%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (7 samples, 0.23%)</title><rect x="86.1335%" y="85" width="0.2257%" height="15" fill="rgb(206,73,33)" fg:x="2671" fg:w="7"/><text x="86.3835%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (19 samples, 0.61%)</title><rect x="85.8755%" y="117" width="0.6127%" height="15" fill="rgb(222,79,8)" fg:x="2663" fg:w="19"/><text x="86.1255%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (4 samples, 0.13%)</title><rect x="86.3592%" y="101" width="0.1290%" height="15" fill="rgb(234,8,54)" fg:x="2678" fg:w="4"/><text x="86.6092%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (21 samples, 0.68%)</title><rect x="85.8433%" y="133" width="0.6772%" height="15" fill="rgb(209,134,38)" fg:x="2662" fg:w="21"/><text x="86.0933%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="86.4882%" y="117" width="0.0322%" height="15" fill="rgb(230,127,29)" fg:x="2682" fg:w="1"/><text x="86.7382%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (75 samples, 2.42%)</title><rect x="84.1342%" y="149" width="2.4186%" height="15" fill="rgb(242,44,41)" fg:x="2609" fg:w="75"/><text x="84.3842%" y="159.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="86.5205%" y="133" width="0.0322%" height="15" fill="rgb(222,56,43)" fg:x="2683" fg:w="1"/><text x="86.7705%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="86.5527%" y="149" width="0.0322%" height="15" fill="rgb(238,39,47)" fg:x="2684" fg:w="1"/><text x="86.8027%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.06%)</title><rect x="87.2622%" y="117" width="0.0645%" height="15" fill="rgb(226,79,43)" fg:x="2706" fg:w="2"/><text x="87.5122%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (34 samples, 1.10%)</title><rect x="86.6172%" y="133" width="1.0964%" height="15" fill="rgb(242,105,53)" fg:x="2686" fg:w="34"/><text x="86.8672%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (12 samples, 0.39%)</title><rect x="87.3267%" y="117" width="0.3870%" height="15" fill="rgb(251,132,46)" fg:x="2708" fg:w="12"/><text x="87.5767%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.03%)</title><rect x="87.7136%" y="133" width="0.0322%" height="15" fill="rgb(231,77,14)" fg:x="2720" fg:w="1"/><text x="87.9636%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (118 samples, 3.81%)</title><rect x="83.9729%" y="165" width="3.8052%" height="15" fill="rgb(240,135,9)" fg:x="2604" fg:w="118"/><text x="84.2229%" y="175.50">basi..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (37 samples, 1.19%)</title><rect x="86.5850%" y="149" width="1.1932%" height="15" fill="rgb(248,109,14)" fg:x="2685" fg:w="37"/><text x="86.8350%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="87.7459%" y="133" width="0.0322%" height="15" fill="rgb(227,146,52)" fg:x="2721" fg:w="1"/><text x="87.9959%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (336 samples, 10.84%)</title><rect x="76.9752%" y="181" width="10.8352%" height="15" fill="rgb(232,54,3)" fg:x="2387" fg:w="336"/><text x="77.2252%" y="191.50">basic_algorithms..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="87.7781%" y="165" width="0.0322%" height="15" fill="rgb(229,201,43)" fg:x="2722" fg:w="1"/><text x="88.0281%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (1 samples, 0.03%)</title><rect x="87.8104%" y="181" width="0.0322%" height="15" fill="rgb(252,161,33)" fg:x="2723" fg:w="1"/><text x="88.0604%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (1 samples, 0.03%)</title><rect x="87.8426%" y="181" width="0.0322%" height="15" fill="rgb(226,146,40)" fg:x="2724" fg:w="1"/><text x="88.0926%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::len (1 samples, 0.03%)</title><rect x="87.8749%" y="181" width="0.0322%" height="15" fill="rgb(219,47,25)" fg:x="2725" fg:w="1"/><text x="88.1249%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (1 samples, 0.03%)</title><rect x="87.9071%" y="181" width="0.0322%" height="15" fill="rgb(250,135,13)" fg:x="2726" fg:w="1"/><text x="88.1571%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.03%)</title><rect x="88.5843%" y="133" width="0.0322%" height="15" fill="rgb(219,229,18)" fg:x="2747" fg:w="1"/><text x="88.8343%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (21 samples, 0.68%)</title><rect x="88.1006%" y="149" width="0.6772%" height="15" fill="rgb(217,152,27)" fg:x="2732" fg:w="21"/><text x="88.3506%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (5 samples, 0.16%)</title><rect x="88.6166%" y="133" width="0.1612%" height="15" fill="rgb(225,71,47)" fg:x="2748" fg:w="5"/><text x="88.8666%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.03%)</title><rect x="88.7778%" y="149" width="0.0322%" height="15" fill="rgb(220,139,14)" fg:x="2753" fg:w="1"/><text x="89.0278%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (378 samples, 12.19%)</title><rect x="76.6849%" y="197" width="12.1896%" height="15" fill="rgb(247,54,32)" fg:x="2378" fg:w="378"/><text x="76.9349%" y="207.50">basic_algorithms_a..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (29 samples, 0.94%)</title><rect x="87.9394%" y="181" width="0.9352%" height="15" fill="rgb(252,131,39)" fg:x="2727" fg:w="29"/><text x="88.1894%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (26 samples, 0.84%)</title><rect x="88.0361%" y="165" width="0.8384%" height="15" fill="rgb(210,108,39)" fg:x="2730" fg:w="26"/><text x="88.2861%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="88.8101%" y="149" width="0.0645%" height="15" fill="rgb(205,23,29)" fg:x="2754" fg:w="2"/><text x="89.0601%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="88.8746%" y="197" width="0.0322%" height="15" fill="rgb(246,139,46)" fg:x="2756" fg:w="1"/><text x="89.1246%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (392 samples, 12.64%)</title><rect x="76.4592%" y="213" width="12.6411%" height="15" fill="rgb(250,81,26)" fg:x="2371" fg:w="392"/><text x="76.7092%" y="223.50">basic_algorithms_an..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or_else (6 samples, 0.19%)</title><rect x="88.9068%" y="197" width="0.1935%" height="15" fill="rgb(214,104,7)" fg:x="2757" fg:w="6"/><text x="89.1568%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (419 samples, 13.51%)</title><rect x="75.8143%" y="229" width="13.5118%" height="15" fill="rgb(233,189,8)" fg:x="2351" fg:w="419"/><text x="76.0643%" y="239.50">basic_algorithms_and..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (7 samples, 0.23%)</title><rect x="89.1003%" y="213" width="0.2257%" height="15" fill="rgb(228,141,17)" fg:x="2763" fg:w="7"/><text x="89.3503%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="89.2293%" y="197" width="0.0967%" height="15" fill="rgb(247,157,1)" fg:x="2767" fg:w="3"/><text x="89.4793%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (9 samples, 0.29%)</title><rect x="89.4873%" y="197" width="0.2902%" height="15" fill="rgb(249,225,5)" fg:x="2775" fg:w="9"/><text x="89.7373%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (4 samples, 0.13%)</title><rect x="89.6485%" y="181" width="0.1290%" height="15" fill="rgb(242,55,13)" fg:x="2780" fg:w="4"/><text x="89.8985%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (443 samples, 14.29%)</title><rect x="75.5240%" y="245" width="14.2857%" height="15" fill="rgb(230,49,50)" fg:x="2342" fg:w="443"/><text x="75.7740%" y="255.50">basic_algorithms_and_d..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (15 samples, 0.48%)</title><rect x="89.3260%" y="229" width="0.4837%" height="15" fill="rgb(241,111,38)" fg:x="2770" fg:w="15"/><text x="89.5760%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (13 samples, 0.42%)</title><rect x="89.3905%" y="213" width="0.4192%" height="15" fill="rgb(252,155,4)" fg:x="2772" fg:w="13"/><text x="89.6405%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="89.7775%" y="197" width="0.0322%" height="15" fill="rgb(212,69,32)" fg:x="2784" fg:w="1"/><text x="90.0275%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.29%)</title><rect x="89.8097%" y="229" width="0.2902%" height="15" fill="rgb(243,107,47)" fg:x="2785" fg:w="9"/><text x="90.0597%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_number_of_matching_bits (465 samples, 15.00%)</title><rect x="75.1371%" y="261" width="14.9952%" height="15" fill="rgb(247,130,12)" fg:x="2330" fg:w="465"/><text x="75.3871%" y="271.50">basic_algorithms_and_da..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.32%)</title><rect x="89.8097%" y="245" width="0.3225%" height="15" fill="rgb(233,74,16)" fg:x="2785" fg:w="10"/><text x="90.0597%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="90.1000%" y="229" width="0.0322%" height="15" fill="rgb(208,58,18)" fg:x="2794" fg:w="1"/><text x="90.3500%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (1 samples, 0.03%)</title><rect x="90.1967%" y="229" width="0.0322%" height="15" fill="rgb(242,225,1)" fg:x="2797" fg:w="1"/><text x="90.4467%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="90.4547%" y="197" width="0.0645%" height="15" fill="rgb(249,39,40)" fg:x="2805" fg:w="2"/><text x="90.7047%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (1 samples, 0.03%)</title><rect x="90.5192%" y="197" width="0.0322%" height="15" fill="rgb(207,72,44)" fg:x="2807" fg:w="1"/><text x="90.7692%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="90.7449%" y="133" width="0.0322%" height="15" fill="rgb(215,193,12)" fg:x="2814" fg:w="1"/><text x="90.9949%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (6 samples, 0.19%)</title><rect x="90.9062%" y="117" width="0.1935%" height="15" fill="rgb(248,41,39)" fg:x="2819" fg:w="6"/><text x="91.1562%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (3 samples, 0.10%)</title><rect x="91.0029%" y="101" width="0.0967%" height="15" fill="rgb(253,85,4)" fg:x="2822" fg:w="3"/><text x="91.2529%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (9 samples, 0.29%)</title><rect x="91.0996%" y="117" width="0.2902%" height="15" fill="rgb(243,70,31)" fg:x="2825" fg:w="9"/><text x="91.3496%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (6 samples, 0.19%)</title><rect x="91.1964%" y="101" width="0.1935%" height="15" fill="rgb(253,195,26)" fg:x="2828" fg:w="6"/><text x="91.4464%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (3 samples, 0.10%)</title><rect x="91.2931%" y="85" width="0.0967%" height="15" fill="rgb(243,42,11)" fg:x="2831" fg:w="3"/><text x="91.5431%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (27 samples, 0.87%)</title><rect x="90.7449%" y="149" width="0.8707%" height="15" fill="rgb(239,66,17)" fg:x="2814" fg:w="27"/><text x="90.9949%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (26 samples, 0.84%)</title><rect x="90.7772%" y="133" width="0.8384%" height="15" fill="rgb(217,132,21)" fg:x="2815" fg:w="26"/><text x="91.0272%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (7 samples, 0.23%)</title><rect x="91.3899%" y="117" width="0.2257%" height="15" fill="rgb(252,202,21)" fg:x="2834" fg:w="7"/><text x="91.6399%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (7 samples, 0.23%)</title><rect x="91.3899%" y="101" width="0.2257%" height="15" fill="rgb(233,98,36)" fg:x="2834" fg:w="7"/><text x="91.6399%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (3 samples, 0.10%)</title><rect x="91.5189%" y="85" width="0.0967%" height="15" fill="rgb(216,153,54)" fg:x="2838" fg:w="3"/><text x="91.7689%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="91.5511%" y="69" width="0.0645%" height="15" fill="rgb(250,99,7)" fg:x="2839" fg:w="2"/><text x="91.8011%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.03%)</title><rect x="92.0026%" y="85" width="0.0322%" height="15" fill="rgb(207,56,50)" fg:x="2853" fg:w="1"/><text x="92.2526%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as core::ops::bit::Shl&gt;::shl (1 samples, 0.03%)</title><rect x="92.0671%" y="53" width="0.0322%" height="15" fill="rgb(244,61,34)" fg:x="2855" fg:w="1"/><text x="92.3171%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (4 samples, 0.13%)</title><rect x="92.0348%" y="85" width="0.1290%" height="15" fill="rgb(241,50,38)" fg:x="2854" fg:w="4"/><text x="92.2848%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (3 samples, 0.10%)</title><rect x="92.0671%" y="69" width="0.0967%" height="15" fill="rgb(212,166,30)" fg:x="2855" fg:w="3"/><text x="92.3171%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="92.0993%" y="53" width="0.0645%" height="15" fill="rgb(249,127,32)" fg:x="2856" fg:w="2"/><text x="92.3493%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (14 samples, 0.45%)</title><rect x="91.7768%" y="133" width="0.4515%" height="15" fill="rgb(209,103,0)" fg:x="2846" fg:w="14"/><text x="92.0268%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (11 samples, 0.35%)</title><rect x="91.8736%" y="117" width="0.3547%" height="15" fill="rgb(238,209,51)" fg:x="2849" fg:w="11"/><text x="92.1236%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::store::BitStore::get_bit (10 samples, 0.32%)</title><rect x="91.9058%" y="101" width="0.3225%" height="15" fill="rgb(237,56,23)" fg:x="2850" fg:w="10"/><text x="92.1558%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::ne (2 samples, 0.06%)</title><rect x="92.1638%" y="85" width="0.0645%" height="15" fill="rgb(215,153,46)" fg:x="2858" fg:w="2"/><text x="92.4138%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (20 samples, 0.64%)</title><rect x="91.6156%" y="149" width="0.6450%" height="15" fill="rgb(224,49,31)" fg:x="2841" fg:w="20"/><text x="91.8656%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::to_const (1 samples, 0.03%)</title><rect x="92.2283%" y="133" width="0.0322%" height="15" fill="rgb(250,18,42)" fg:x="2860" fg:w="1"/><text x="92.4783%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (1 samples, 0.03%)</title><rect x="92.2606%" y="149" width="0.0322%" height="15" fill="rgb(215,176,39)" fg:x="2861" fg:w="1"/><text x="92.5106%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="92.3896%" y="117" width="0.0322%" height="15" fill="rgb(223,77,29)" fg:x="2865" fg:w="1"/><text x="92.6396%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="92.6153%" y="85" width="0.0322%" height="15" fill="rgb(234,94,52)" fg:x="2872" fg:w="1"/><text x="92.8653%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (9 samples, 0.29%)</title><rect x="92.4218%" y="117" width="0.2902%" height="15" fill="rgb(220,154,50)" fg:x="2866" fg:w="9"/><text x="92.6718%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (7 samples, 0.23%)</title><rect x="92.4863%" y="101" width="0.2257%" height="15" fill="rgb(212,11,10)" fg:x="2868" fg:w="7"/><text x="92.7363%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (2 samples, 0.06%)</title><rect x="92.6475%" y="85" width="0.0645%" height="15" fill="rgb(205,166,19)" fg:x="2873" fg:w="2"/><text x="92.8975%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (1 samples, 0.03%)</title><rect x="92.7120%" y="117" width="0.0322%" height="15" fill="rgb(244,198,16)" fg:x="2875" fg:w="1"/><text x="92.9620%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (15 samples, 0.48%)</title><rect x="92.3251%" y="133" width="0.4837%" height="15" fill="rgb(219,69,12)" fg:x="2863" fg:w="15"/><text x="92.5751%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (2 samples, 0.06%)</title><rect x="92.7443%" y="117" width="0.0645%" height="15" fill="rgb(245,30,7)" fg:x="2876" fg:w="2"/><text x="92.9943%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="92.7443%" y="101" width="0.0645%" height="15" fill="rgb(218,221,48)" fg:x="2876" fg:w="2"/><text x="92.9943%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="92.7765%" y="85" width="0.0322%" height="15" fill="rgb(216,66,15)" fg:x="2877" fg:w="1"/><text x="93.0265%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="92.7765%" y="69" width="0.0322%" height="15" fill="rgb(226,122,50)" fg:x="2877" fg:w="1"/><text x="93.0265%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (76 samples, 2.45%)</title><rect x="90.6482%" y="165" width="2.4508%" height="15" fill="rgb(239,156,16)" fg:x="2811" fg:w="76"/><text x="90.8982%" y="175.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (25 samples, 0.81%)</title><rect x="92.2928%" y="149" width="0.8062%" height="15" fill="rgb(224,27,38)" fg:x="2862" fg:w="25"/><text x="92.5428%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (9 samples, 0.29%)</title><rect x="92.8088%" y="133" width="0.2902%" height="15" fill="rgb(224,39,27)" fg:x="2878" fg:w="9"/><text x="93.0588%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (9 samples, 0.29%)</title><rect x="92.8088%" y="117" width="0.2902%" height="15" fill="rgb(215,92,29)" fg:x="2878" fg:w="9"/><text x="93.0588%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (4 samples, 0.13%)</title><rect x="92.9700%" y="101" width="0.1290%" height="15" fill="rgb(207,159,16)" fg:x="2883" fg:w="4"/><text x="93.2200%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="93.0990%" y="149" width="0.0322%" height="15" fill="rgb(238,163,47)" fg:x="2887" fg:w="1"/><text x="93.3490%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (87 samples, 2.81%)</title><rect x="90.5514%" y="181" width="2.8055%" height="15" fill="rgb(219,91,49)" fg:x="2808" fg:w="87"/><text x="90.8014%" y="191.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (8 samples, 0.26%)</title><rect x="93.0990%" y="165" width="0.2580%" height="15" fill="rgb(227,167,31)" fg:x="2887" fg:w="8"/><text x="93.3490%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (7 samples, 0.23%)</title><rect x="93.1312%" y="149" width="0.2257%" height="15" fill="rgb(234,80,54)" fg:x="2888" fg:w="7"/><text x="93.3812%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (7 samples, 0.23%)</title><rect x="93.1312%" y="133" width="0.2257%" height="15" fill="rgb(212,114,2)" fg:x="2888" fg:w="7"/><text x="93.3812%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.06%)</title><rect x="93.2925%" y="117" width="0.0645%" height="15" fill="rgb(234,50,24)" fg:x="2893" fg:w="2"/><text x="93.5425%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="93.3570%" y="181" width="0.0322%" height="15" fill="rgb(221,68,8)" fg:x="2895" fg:w="1"/><text x="93.6070%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (90 samples, 2.90%)</title><rect x="90.5514%" y="197" width="2.9023%" height="15" fill="rgb(254,180,31)" fg:x="2808" fg:w="90"/><text x="90.8014%" y="207.50">ba..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.06%)</title><rect x="93.3892%" y="181" width="0.0645%" height="15" fill="rgb(247,130,50)" fg:x="2896" fg:w="2"/><text x="93.6392%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.03%)</title><rect x="93.4537%" y="197" width="0.0322%" height="15" fill="rgb(211,109,4)" fg:x="2898" fg:w="1"/><text x="93.7037%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (102 samples, 3.29%)</title><rect x="90.2290%" y="213" width="3.2893%" height="15" fill="rgb(238,50,21)" fg:x="2798" fg:w="102"/><text x="90.4790%" y="223.50">bas..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (1 samples, 0.03%)</title><rect x="93.4860%" y="197" width="0.0322%" height="15" fill="rgb(225,57,45)" fg:x="2899" fg:w="1"/><text x="93.7360%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (103 samples, 3.32%)</title><rect x="90.2290%" y="229" width="3.3215%" height="15" fill="rgb(209,196,50)" fg:x="2798" fg:w="103"/><text x="90.4790%" y="239.50">bas..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (1 samples, 0.03%)</title><rect x="93.5182%" y="213" width="0.0322%" height="15" fill="rgb(242,140,13)" fg:x="2900" fg:w="1"/><text x="93.7682%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ref (1 samples, 0.03%)</title><rect x="93.5182%" y="197" width="0.0322%" height="15" fill="rgb(217,111,7)" fg:x="2900" fg:w="1"/><text x="93.7682%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::into_bitslice_ptr (1 samples, 0.03%)</title><rect x="93.5182%" y="181" width="0.0322%" height="15" fill="rgb(253,193,51)" fg:x="2900" fg:w="1"/><text x="93.7682%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="93.5182%" y="165" width="0.0322%" height="15" fill="rgb(252,70,29)" fg:x="2900" fg:w="1"/><text x="93.7682%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_number_of_matching_bits (108 samples, 3.48%)</title><rect x="90.1322%" y="245" width="3.4827%" height="15" fill="rgb(232,127,12)" fg:x="2795" fg:w="108"/><text x="90.3822%" y="255.50">bas..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="93.5505%" y="229" width="0.0645%" height="15" fill="rgb(211,180,21)" fg:x="2901" fg:w="2"/><text x="93.8005%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="93.5505%" y="213" width="0.0645%" height="15" fill="rgb(229,72,13)" fg:x="2901" fg:w="2"/><text x="93.8005%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (1 samples, 0.03%)</title><rect x="93.6472%" y="181" width="0.0322%" height="15" fill="rgb(240,211,49)" fg:x="2904" fg:w="1"/><text x="93.8972%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::offset (3 samples, 0.10%)</title><rect x="93.7440%" y="101" width="0.0967%" height="15" fill="rgb(219,149,40)" fg:x="2907" fg:w="3"/><text x="93.9940%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="93.7762%" y="85" width="0.0645%" height="15" fill="rgb(210,127,46)" fg:x="2908" fg:w="2"/><text x="94.0262%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="93.9052%" y="69" width="0.0322%" height="15" fill="rgb(220,106,7)" fg:x="2912" fg:w="1"/><text x="94.1552%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (5 samples, 0.16%)</title><rect x="93.8407%" y="101" width="0.1612%" height="15" fill="rgb(249,31,22)" fg:x="2910" fg:w="5"/><text x="94.0907%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (5 samples, 0.16%)</title><rect x="93.8407%" y="85" width="0.1612%" height="15" fill="rgb(253,1,49)" fg:x="2910" fg:w="5"/><text x="94.0907%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::addr::check_alignment (2 samples, 0.06%)</title><rect x="93.9374%" y="69" width="0.0645%" height="15" fill="rgb(227,144,33)" fg:x="2913" fg:w="2"/><text x="94.1874%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (12 samples, 0.39%)</title><rect x="93.6795%" y="133" width="0.3870%" height="15" fill="rgb(249,163,44)" fg:x="2905" fg:w="12"/><text x="93.9295%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (12 samples, 0.39%)</title><rect x="93.6795%" y="117" width="0.3870%" height="15" fill="rgb(234,15,39)" fg:x="2905" fg:w="12"/><text x="93.9295%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::offset (2 samples, 0.06%)</title><rect x="94.0019%" y="101" width="0.0645%" height="15" fill="rgb(207,66,16)" fg:x="2915" fg:w="2"/><text x="94.2519%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`wyz::comu::Address&lt;M,T&gt;::with_ptr (2 samples, 0.06%)</title><rect x="94.0019%" y="85" width="0.0645%" height="15" fill="rgb(233,112,24)" fg:x="2915" fg:w="2"/><text x="94.2519%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="94.0342%" y="69" width="0.0322%" height="15" fill="rgb(230,90,22)" fg:x="2916" fg:w="1"/><text x="94.2842%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="94.0342%" y="53" width="0.0322%" height="15" fill="rgb(229,61,13)" fg:x="2916" fg:w="1"/><text x="94.2842%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (1 samples, 0.03%)</title><rect x="94.2277%" y="85" width="0.0322%" height="15" fill="rgb(225,57,24)" fg:x="2922" fg:w="1"/><text x="94.4777%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (1 samples, 0.03%)</title><rect x="94.2599%" y="53" width="0.0322%" height="15" fill="rgb(208,169,48)" fg:x="2923" fg:w="1"/><text x="94.5099%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="94.2599%" y="37" width="0.0322%" height="15" fill="rgb(244,218,51)" fg:x="2923" fg:w="1"/><text x="94.5099%" y="47.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::proxy::BitRef&lt;M,T,O&gt;::from_bitptr (6 samples, 0.19%)</title><rect x="94.1309%" y="117" width="0.1935%" height="15" fill="rgb(214,148,10)" fg:x="2919" fg:w="6"/><text x="94.3809%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::read (6 samples, 0.19%)</title><rect x="94.1309%" y="101" width="0.1935%" height="15" fill="rgb(225,174,27)" fg:x="2919" fg:w="6"/><text x="94.3809%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::store::BitStore::get_bit (2 samples, 0.06%)</title><rect x="94.2599%" y="85" width="0.0645%" height="15" fill="rgb(230,96,26)" fg:x="2923" fg:w="2"/><text x="94.5099%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::select (2 samples, 0.06%)</title><rect x="94.2599%" y="69" width="0.0645%" height="15" fill="rgb(232,10,30)" fg:x="2923" fg:w="2"/><text x="94.5099%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitSel&lt;R&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="94.2922%" y="53" width="0.0322%" height="15" fill="rgb(222,8,50)" fg:x="2924" fg:w="1"/><text x="94.5422%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::as_ref (9 samples, 0.29%)</title><rect x="94.0664%" y="133" width="0.2902%" height="15" fill="rgb(213,81,27)" fg:x="2917" fg:w="9"/><text x="94.3164%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::to_const (1 samples, 0.03%)</title><rect x="94.3244%" y="117" width="0.0322%" height="15" fill="rgb(245,50,10)" fg:x="2925" fg:w="1"/><text x="94.5744%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="94.3567%" y="117" width="0.0322%" height="15" fill="rgb(216,100,18)" fg:x="2926" fg:w="1"/><text x="94.6067%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="94.3889%" y="101" width="0.0322%" height="15" fill="rgb(236,147,54)" fg:x="2927" fg:w="1"/><text x="94.6389%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="94.3889%" y="85" width="0.0322%" height="15" fill="rgb(205,143,26)" fg:x="2927" fg:w="1"/><text x="94.6389%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::address (1 samples, 0.03%)</title><rect x="94.4212%" y="101" width="0.0322%" height="15" fill="rgb(236,26,9)" fg:x="2928" fg:w="1"/><text x="94.6712%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="94.4212%" y="85" width="0.0322%" height="15" fill="rgb(221,165,53)" fg:x="2928" fg:w="1"/><text x="94.6712%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (6 samples, 0.19%)</title><rect x="94.3889%" y="117" width="0.1935%" height="15" fill="rgb(214,110,17)" fg:x="2927" fg:w="6"/><text x="94.6389%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (4 samples, 0.13%)</title><rect x="94.4534%" y="101" width="0.1290%" height="15" fill="rgb(237,197,12)" fg:x="2929" fg:w="4"/><text x="94.7034%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::index::BitIdx&lt;R&gt;::new_unchecked (4 samples, 0.13%)</title><rect x="94.4534%" y="85" width="0.1290%" height="15" fill="rgb(205,84,17)" fg:x="2929" fg:w="4"/><text x="94.7034%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::mem::bits_of (1 samples, 0.03%)</title><rect x="94.5501%" y="69" width="0.0322%" height="15" fill="rgb(237,18,45)" fg:x="2932" fg:w="1"/><text x="94.8001%" y="79.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::num::_&lt;impl usize&gt;::saturating_mul (1 samples, 0.03%)</title><rect x="94.5501%" y="53" width="0.0322%" height="15" fill="rgb(221,87,14)" fg:x="2932" fg:w="1"/><text x="94.8001%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (32 samples, 1.03%)</title><rect x="93.6795%" y="149" width="1.0319%" height="15" fill="rgb(238,186,15)" fg:x="2905" fg:w="32"/><text x="93.9295%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (11 samples, 0.35%)</title><rect x="94.3567%" y="133" width="0.3547%" height="15" fill="rgb(208,115,11)" fg:x="2926" fg:w="11"/><text x="94.6067%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (4 samples, 0.13%)</title><rect x="94.5824%" y="117" width="0.1290%" height="15" fill="rgb(254,175,0)" fg:x="2933" fg:w="4"/><text x="94.8324%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (4 samples, 0.13%)</title><rect x="94.5824%" y="101" width="0.1290%" height="15" fill="rgb(227,24,42)" fg:x="2933" fg:w="4"/><text x="94.8324%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="94.6791%" y="85" width="0.0322%" height="15" fill="rgb(223,211,37)" fg:x="2936" fg:w="1"/><text x="94.9291%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (36 samples, 1.16%)</title><rect x="93.6795%" y="165" width="1.1609%" height="15" fill="rgb(235,49,27)" fg:x="2905" fg:w="36"/><text x="93.9295%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (4 samples, 0.13%)</title><rect x="94.7114%" y="149" width="0.1290%" height="15" fill="rgb(254,97,51)" fg:x="2937" fg:w="4"/><text x="94.9614%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (4 samples, 0.13%)</title><rect x="94.7114%" y="133" width="0.1290%" height="15" fill="rgb(249,51,40)" fg:x="2937" fg:w="4"/><text x="94.9614%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (4 samples, 0.13%)</title><rect x="94.7114%" y="117" width="0.1290%" height="15" fill="rgb(210,128,45)" fg:x="2937" fg:w="4"/><text x="94.9614%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::non_null::NonNull&lt;T&gt;::new (3 samples, 0.10%)</title><rect x="94.7436%" y="101" width="0.0967%" height="15" fill="rgb(224,137,50)" fg:x="2938" fg:w="3"/><text x="94.9936%" y="111.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::len (1 samples, 0.03%)</title><rect x="94.8404%" y="165" width="0.0322%" height="15" fill="rgb(242,15,9)" fg:x="2941" fg:w="1"/><text x="95.0904%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (39 samples, 1.26%)</title><rect x="93.6795%" y="181" width="1.2577%" height="15" fill="rgb(233,187,41)" fg:x="2905" fg:w="39"/><text x="93.9295%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.06%)</title><rect x="94.8726%" y="165" width="0.0645%" height="15" fill="rgb(227,2,29)" fg:x="2942" fg:w="2"/><text x="95.1226%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (41 samples, 1.32%)</title><rect x="93.6472%" y="197" width="1.3222%" height="15" fill="rgb(222,70,3)" fg:x="2904" fg:w="41"/><text x="93.8972%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::ptr::proxy::BitRef&lt;wyz::comu::Const,u8&gt;&gt; (1 samples, 0.03%)</title><rect x="94.9371%" y="181" width="0.0322%" height="15" fill="rgb(213,11,42)" fg:x="2944" fg:w="1"/><text x="95.1871%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::proxy::BitRef&lt;M,T,O&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="94.9371%" y="165" width="0.0322%" height="15" fill="rgb(225,150,9)" fg:x="2944" fg:w="1"/><text x="95.1871%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (42 samples, 1.35%)</title><rect x="93.6472%" y="213" width="1.3544%" height="15" fill="rgb(230,162,45)" fg:x="2904" fg:w="42"/><text x="93.8972%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::as_bitslice (1 samples, 0.03%)</title><rect x="94.9694%" y="197" width="0.0322%" height="15" fill="rgb(222,14,52)" fg:x="2945" fg:w="1"/><text x="95.2194%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search_internal (44 samples, 1.42%)</title><rect x="93.6150%" y="245" width="1.4189%" height="15" fill="rgb(254,198,14)" fg:x="2903" fg:w="44"/><text x="93.8650%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::find_number_of_matching_bits (44 samples, 1.42%)</title><rect x="93.6150%" y="229" width="1.4189%" height="15" fill="rgb(220,217,30)" fg:x="2903" fg:w="44"/><text x="93.8650%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="95.0016%" y="213" width="0.0322%" height="15" fill="rgb(215,146,41)" fg:x="2946" fg:w="1"/><text x="95.2516%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="95.0016%" y="197" width="0.0322%" height="15" fill="rgb(217,27,36)" fg:x="2946" fg:w="1"/><text x="95.2516%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search_internal (153 samples, 4.93%)</title><rect x="90.1322%" y="261" width="4.9339%" height="15" fill="rgb(219,218,39)" fg:x="2795" fg:w="153"/><text x="90.3822%" y="271.50">basic_..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::split_at (1 samples, 0.03%)</title><rect x="95.0339%" y="245" width="0.0322%" height="15" fill="rgb(219,4,42)" fg:x="2947" fg:w="1"/><text x="95.2839%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="95.0339%" y="229" width="0.0322%" height="15" fill="rgb(249,119,36)" fg:x="2947" fg:w="1"/><text x="95.2839%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (1 samples, 0.03%)</title><rect x="95.0339%" y="213" width="0.0322%" height="15" fill="rgb(209,23,33)" fg:x="2947" fg:w="1"/><text x="95.2839%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (1 samples, 0.03%)</title><rect x="95.0339%" y="197" width="0.0322%" height="15" fill="rgb(211,10,0)" fg:x="2947" fg:w="1"/><text x="95.2839%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="95.0339%" y="181" width="0.0322%" height="15" fill="rgb(208,99,37)" fg:x="2947" fg:w="1"/><text x="95.2839%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::new (1 samples, 0.03%)</title><rect x="95.0339%" y="165" width="0.0322%" height="15" fill="rgb(213,132,31)" fg:x="2947" fg:w="1"/><text x="95.2839%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (2 samples, 0.06%)</title><rect x="95.0661%" y="261" width="0.0645%" height="15" fill="rgb(243,129,40)" fg:x="2948" fg:w="2"/><text x="95.3161%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (2 samples, 0.06%)</title><rect x="95.0661%" y="245" width="0.0645%" height="15" fill="rgb(210,66,33)" fg:x="2948" fg:w="2"/><text x="95.3161%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="95.0661%" y="229" width="0.0645%" height="15" fill="rgb(209,189,4)" fg:x="2948" fg:w="2"/><text x="95.3161%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="95.0661%" y="213" width="0.0645%" height="15" fill="rgb(214,107,37)" fg:x="2948" fg:w="2"/><text x="95.3161%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="95.0661%" y="197" width="0.0645%" height="15" fill="rgb(245,88,54)" fg:x="2948" fg:w="2"/><text x="95.3161%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="95.0661%" y="181" width="0.0645%" height="15" fill="rgb(205,146,20)" fg:x="2948" fg:w="2"/><text x="95.3161%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.06%)</title><rect x="95.0661%" y="165" width="0.0645%" height="15" fill="rgb(220,161,25)" fg:x="2948" fg:w="2"/><text x="95.3161%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="95.0661%" y="149" width="0.0645%" height="15" fill="rgb(215,152,15)" fg:x="2948" fg:w="2"/><text x="95.3161%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="95.0984%" y="133" width="0.0322%" height="15" fill="rgb(233,192,44)" fg:x="2949" fg:w="1"/><text x="95.3484%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (1 samples, 0.03%)</title><rect x="95.0984%" y="117" width="0.0322%" height="15" fill="rgb(240,170,46)" fg:x="2949" fg:w="1"/><text x="95.3484%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search_internal (621 samples, 20.03%)</title><rect x="75.1371%" y="277" width="20.0258%" height="15" fill="rgb(207,104,33)" fg:x="2330" fg:w="621"/><text x="75.3871%" y="287.50">basic_algorithms_and_data_struc..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (1 samples, 0.03%)</title><rect x="95.1306%" y="261" width="0.0322%" height="15" fill="rgb(219,21,39)" fg:x="2950" fg:w="1"/><text x="95.3806%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="95.1629%" y="149" width="0.0645%" height="15" fill="rgb(214,133,29)" fg:x="2951" fg:w="2"/><text x="95.4129%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="95.1951%" y="133" width="0.0322%" height="15" fill="rgb(226,93,6)" fg:x="2952" fg:w="1"/><text x="95.4451%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="95.1629%" y="165" width="0.0967%" height="15" fill="rgb(252,222,34)" fg:x="2951" fg:w="3"/><text x="95.4129%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="95.2273%" y="149" width="0.0322%" height="15" fill="rgb(252,92,48)" fg:x="2953" fg:w="1"/><text x="95.4773%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (4 samples, 0.13%)</title><rect x="95.1629%" y="277" width="0.1290%" height="15" fill="rgb(245,223,24)" fg:x="2951" fg:w="4"/><text x="95.4129%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (4 samples, 0.13%)</title><rect x="95.1629%" y="261" width="0.1290%" height="15" fill="rgb(205,176,3)" fg:x="2951" fg:w="4"/><text x="95.4129%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.13%)</title><rect x="95.1629%" y="245" width="0.1290%" height="15" fill="rgb(235,151,15)" fg:x="2951" fg:w="4"/><text x="95.4129%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.13%)</title><rect x="95.1629%" y="229" width="0.1290%" height="15" fill="rgb(237,209,11)" fg:x="2951" fg:w="4"/><text x="95.4129%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.13%)</title><rect x="95.1629%" y="213" width="0.1290%" height="15" fill="rgb(243,227,24)" fg:x="2951" fg:w="4"/><text x="95.4129%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.13%)</title><rect x="95.1629%" y="197" width="0.1290%" height="15" fill="rgb(239,193,16)" fg:x="2951" fg:w="4"/><text x="95.4129%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.13%)</title><rect x="95.1629%" y="181" width="0.1290%" height="15" fill="rgb(231,27,9)" fg:x="2951" fg:w="4"/><text x="95.4129%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="95.2596%" y="165" width="0.0322%" height="15" fill="rgb(219,169,10)" fg:x="2954" fg:w="1"/><text x="95.5096%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="95.2596%" y="149" width="0.0322%" height="15" fill="rgb(244,229,43)" fg:x="2954" fg:w="1"/><text x="95.5096%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="95.2596%" y="133" width="0.0322%" height="15" fill="rgb(254,38,20)" fg:x="2954" fg:w="1"/><text x="95.5096%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="95.2596%" y="117" width="0.0322%" height="15" fill="rgb(250,47,30)" fg:x="2954" fg:w="1"/><text x="95.5096%" y="127.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search_internal (1,125 samples, 36.28%)</title><rect x="59.0455%" y="293" width="36.2786%" height="15" fill="rgb(224,124,36)" fg:x="1831" fg:w="1125"/><text x="59.2955%" y="303.50">basic_algorithms_and_data_structures_in_rust`basic_algorith..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (1 samples, 0.03%)</title><rect x="95.2918%" y="277" width="0.0322%" height="15" fill="rgb(246,68,51)" fg:x="2955" fg:w="1"/><text x="95.5418%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="95.4853%" y="149" width="0.0322%" height="15" fill="rgb(253,43,49)" fg:x="2961" fg:w="1"/><text x="95.7353%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.23%)</title><rect x="95.3886%" y="165" width="0.2257%" height="15" fill="rgb(219,54,36)" fg:x="2958" fg:w="7"/><text x="95.6386%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (3 samples, 0.10%)</title><rect x="95.5176%" y="149" width="0.0967%" height="15" fill="rgb(227,133,34)" fg:x="2962" fg:w="3"/><text x="95.7676%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (10 samples, 0.32%)</title><rect x="95.3241%" y="293" width="0.3225%" height="15" fill="rgb(247,227,15)" fg:x="2956" fg:w="10"/><text x="95.5741%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (10 samples, 0.32%)</title><rect x="95.3241%" y="277" width="0.3225%" height="15" fill="rgb(229,96,14)" fg:x="2956" fg:w="10"/><text x="95.5741%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.32%)</title><rect x="95.3241%" y="261" width="0.3225%" height="15" fill="rgb(220,79,17)" fg:x="2956" fg:w="10"/><text x="95.5741%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.32%)</title><rect x="95.3241%" y="245" width="0.3225%" height="15" fill="rgb(205,131,53)" fg:x="2956" fg:w="10"/><text x="95.5741%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.32%)</title><rect x="95.3241%" y="229" width="0.3225%" height="15" fill="rgb(209,50,29)" fg:x="2956" fg:w="10"/><text x="95.5741%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.32%)</title><rect x="95.3241%" y="213" width="0.3225%" height="15" fill="rgb(245,86,46)" fg:x="2956" fg:w="10"/><text x="95.5741%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (10 samples, 0.32%)</title><rect x="95.3241%" y="197" width="0.3225%" height="15" fill="rgb(235,66,46)" fg:x="2956" fg:w="10"/><text x="95.5741%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.29%)</title><rect x="95.3563%" y="181" width="0.2902%" height="15" fill="rgb(232,148,31)" fg:x="2957" fg:w="9"/><text x="95.6063%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="95.6143%" y="165" width="0.0322%" height="15" fill="rgb(217,149,8)" fg:x="2965" fg:w="1"/><text x="95.8643%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="95.6143%" y="149" width="0.0322%" height="15" fill="rgb(209,183,11)" fg:x="2965" fg:w="1"/><text x="95.8643%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::new (1 samples, 0.03%)</title><rect x="95.6143%" y="133" width="0.0322%" height="15" fill="rgb(208,55,20)" fg:x="2965" fg:w="1"/><text x="95.8643%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (1 samples, 0.03%)</title><rect x="95.6466%" y="293" width="0.0322%" height="15" fill="rgb(218,39,14)" fg:x="2966" fg:w="1"/><text x="95.8966%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search_internal (1,716 samples, 55.34%)</title><rect x="40.3741%" y="309" width="55.3370%" height="15" fill="rgb(216,169,33)" fg:x="1252" fg:w="1716"/><text x="40.6241%" y="319.50">basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="95.6788%" y="293" width="0.0322%" height="15" fill="rgb(233,80,24)" fg:x="2967" fg:w="1"/><text x="95.9288%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="95.7111%" y="213" width="0.0322%" height="15" fill="rgb(213,179,31)" fg:x="2968" fg:w="1"/><text x="95.9611%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="95.8723%" y="197" width="0.0645%" height="15" fill="rgb(209,19,5)" fg:x="2973" fg:w="2"/><text x="96.1223%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="96.2270%" y="165" width="0.0322%" height="15" fill="rgb(219,18,35)" fg:x="2984" fg:w="1"/><text x="96.4770%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::option::Option&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.03%)</title><rect x="96.2270%" y="149" width="0.0322%" height="15" fill="rgb(209,169,16)" fg:x="2984" fg:w="1"/><text x="96.4770%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.35%)</title><rect x="95.9368%" y="197" width="0.3547%" height="15" fill="rgb(245,90,51)" fg:x="2975" fg:w="11"/><text x="96.1868%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.16%)</title><rect x="96.1303%" y="181" width="0.1612%" height="15" fill="rgb(220,99,45)" fg:x="2981" fg:w="5"/><text x="96.3803%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="96.2593%" y="165" width="0.0322%" height="15" fill="rgb(249,89,25)" fg:x="2985" fg:w="1"/><text x="96.5093%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search_internal (2,115 samples, 68.20%)</title><rect x="28.1200%" y="325" width="68.2038%" height="15" fill="rgb(239,193,0)" fg:x="872" fg:w="2115"/><text x="28.3700%" y="335.50">basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia:..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (19 samples, 0.61%)</title><rect x="95.7111%" y="309" width="0.6127%" height="15" fill="rgb(231,126,1)" fg:x="2968" fg:w="19"/><text x="95.9611%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (19 samples, 0.61%)</title><rect x="95.7111%" y="293" width="0.6127%" height="15" fill="rgb(243,166,3)" fg:x="2968" fg:w="19"/><text x="95.9611%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.61%)</title><rect x="95.7111%" y="277" width="0.6127%" height="15" fill="rgb(223,22,34)" fg:x="2968" fg:w="19"/><text x="95.9611%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.61%)</title><rect x="95.7111%" y="261" width="0.6127%" height="15" fill="rgb(251,52,51)" fg:x="2968" fg:w="19"/><text x="95.9611%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19 samples, 0.61%)</title><rect x="95.7111%" y="245" width="0.6127%" height="15" fill="rgb(221,165,28)" fg:x="2968" fg:w="19"/><text x="95.9611%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 0.61%)</title><rect x="95.7111%" y="229" width="0.6127%" height="15" fill="rgb(218,121,47)" fg:x="2968" fg:w="19"/><text x="95.9611%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (18 samples, 0.58%)</title><rect x="95.7433%" y="213" width="0.5805%" height="15" fill="rgb(209,120,9)" fg:x="2969" fg:w="18"/><text x="95.9933%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="96.2915%" y="197" width="0.0322%" height="15" fill="rgb(236,68,12)" fg:x="2986" fg:w="1"/><text x="96.5415%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="96.2915%" y="181" width="0.0322%" height="15" fill="rgb(225,194,26)" fg:x="2986" fg:w="1"/><text x="96.5415%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="96.2915%" y="165" width="0.0322%" height="15" fill="rgb(231,84,39)" fg:x="2986" fg:w="1"/><text x="96.5415%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="96.2915%" y="149" width="0.0322%" height="15" fill="rgb(210,11,45)" fg:x="2986" fg:w="1"/><text x="96.5415%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="96.2915%" y="133" width="0.0322%" height="15" fill="rgb(224,54,52)" fg:x="2986" fg:w="1"/><text x="96.5415%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="96.2915%" y="117" width="0.0322%" height="15" fill="rgb(238,102,14)" fg:x="2986" fg:w="1"/><text x="96.5415%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.03%)</title><rect x="96.2915%" y="101" width="0.0322%" height="15" fill="rgb(243,160,52)" fg:x="2986" fg:w="1"/><text x="96.5415%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="96.2915%" y="85" width="0.0322%" height="15" fill="rgb(216,114,19)" fg:x="2986" fg:w="1"/><text x="96.5415%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.03%)</title><rect x="96.2915%" y="69" width="0.0322%" height="15" fill="rgb(244,166,37)" fg:x="2986" fg:w="1"/><text x="96.5415%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="96.2915%" y="53" width="0.0322%" height="15" fill="rgb(246,29,44)" fg:x="2986" fg:w="1"/><text x="96.5415%" y="63.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.10%)</title><rect x="96.5817%" y="181" width="0.0967%" height="15" fill="rgb(215,56,53)" fg:x="2995" fg:w="3"/><text x="96.8317%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::option::Option&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.03%)</title><rect x="96.6462%" y="165" width="0.0322%" height="15" fill="rgb(217,60,2)" fg:x="2997" fg:w="1"/><text x="96.8962%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.26%)</title><rect x="96.4528%" y="197" width="0.2580%" height="15" fill="rgb(207,26,24)" fg:x="2991" fg:w="8"/><text x="96.7028%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (1 samples, 0.03%)</title><rect x="96.6785%" y="181" width="0.0322%" height="15" fill="rgb(252,210,15)" fg:x="2998" fg:w="1"/><text x="96.9285%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.45%)</title><rect x="96.3560%" y="213" width="0.4515%" height="15" fill="rgb(253,209,26)" fg:x="2988" fg:w="14"/><text x="96.6060%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.10%)</title><rect x="96.7107%" y="197" width="0.0967%" height="15" fill="rgb(238,170,14)" fg:x="2999" fg:w="3"/><text x="96.9607%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (3 samples, 0.10%)</title><rect x="96.7107%" y="181" width="0.0967%" height="15" fill="rgb(216,178,15)" fg:x="2999" fg:w="3"/><text x="96.9607%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::new (1 samples, 0.03%)</title><rect x="96.7752%" y="165" width="0.0322%" height="15" fill="rgb(250,197,2)" fg:x="3001" fg:w="1"/><text x="97.0252%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search_internal (2,286 samples, 73.72%)</title><rect x="23.1216%" y="341" width="73.7182%" height="15" fill="rgb(212,70,42)" fg:x="717" fg:w="2286"/><text x="23.3716%" y="351.50">basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::Patricia..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (16 samples, 0.52%)</title><rect x="96.3238%" y="325" width="0.5160%" height="15" fill="rgb(227,213,9)" fg:x="2987" fg:w="16"/><text x="96.5738%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (16 samples, 0.52%)</title><rect x="96.3238%" y="309" width="0.5160%" height="15" fill="rgb(245,99,25)" fg:x="2987" fg:w="16"/><text x="96.5738%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.52%)</title><rect x="96.3238%" y="293" width="0.5160%" height="15" fill="rgb(250,82,29)" fg:x="2987" fg:w="16"/><text x="96.5738%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.52%)</title><rect x="96.3238%" y="277" width="0.5160%" height="15" fill="rgb(241,226,54)" fg:x="2987" fg:w="16"/><text x="96.5738%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.52%)</title><rect x="96.3238%" y="261" width="0.5160%" height="15" fill="rgb(221,99,41)" fg:x="2987" fg:w="16"/><text x="96.5738%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.52%)</title><rect x="96.3238%" y="245" width="0.5160%" height="15" fill="rgb(213,90,21)" fg:x="2987" fg:w="16"/><text x="96.5738%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (16 samples, 0.52%)</title><rect x="96.3238%" y="229" width="0.5160%" height="15" fill="rgb(205,208,24)" fg:x="2987" fg:w="16"/><text x="96.5738%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="96.8075%" y="213" width="0.0322%" height="15" fill="rgb(246,31,12)" fg:x="3002" fg:w="1"/><text x="97.0575%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="96.8075%" y="197" width="0.0322%" height="15" fill="rgb(213,154,6)" fg:x="3002" fg:w="1"/><text x="97.0575%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="96.8075%" y="181" width="0.0322%" height="15" fill="rgb(222,163,29)" fg:x="3002" fg:w="1"/><text x="97.0575%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="96.8075%" y="165" width="0.0322%" height="15" fill="rgb(227,201,8)" fg:x="3002" fg:w="1"/><text x="97.0575%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="96.8075%" y="149" width="0.0322%" height="15" fill="rgb(233,9,32)" fg:x="3002" fg:w="1"/><text x="97.0575%" y="159.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="96.8075%" y="133" width="0.0322%" height="15" fill="rgb(217,54,24)" fg:x="3002" fg:w="1"/><text x="97.0575%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::take (2 samples, 0.06%)</title><rect x="97.2912%" y="197" width="0.0645%" height="15" fill="rgb(235,192,0)" fg:x="3017" fg:w="2"/><text x="97.5412%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.32%)</title><rect x="97.1622%" y="213" width="0.3225%" height="15" fill="rgb(235,45,9)" fg:x="3013" fg:w="10"/><text x="97.4122%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (4 samples, 0.13%)</title><rect x="97.3557%" y="197" width="0.1290%" height="15" fill="rgb(246,42,40)" fg:x="3019" fg:w="4"/><text x="97.6057%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.52%)</title><rect x="97.0010%" y="229" width="0.5160%" height="15" fill="rgb(248,111,24)" fg:x="3008" fg:w="16"/><text x="97.2510%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (1 samples, 0.03%)</title><rect x="97.4847%" y="213" width="0.0322%" height="15" fill="rgb(249,65,22)" fg:x="3023" fg:w="1"/><text x="97.7347%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (22 samples, 0.71%)</title><rect x="96.8397%" y="325" width="0.7094%" height="15" fill="rgb(238,111,51)" fg:x="3003" fg:w="22"/><text x="97.0897%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (22 samples, 0.71%)</title><rect x="96.8397%" y="309" width="0.7094%" height="15" fill="rgb(250,118,22)" fg:x="3003" fg:w="22"/><text x="97.0897%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.71%)</title><rect x="96.8397%" y="293" width="0.7094%" height="15" fill="rgb(234,84,26)" fg:x="3003" fg:w="22"/><text x="97.0897%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (22 samples, 0.71%)</title><rect x="96.8397%" y="277" width="0.7094%" height="15" fill="rgb(243,172,12)" fg:x="3003" fg:w="22"/><text x="97.0897%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (22 samples, 0.71%)</title><rect x="96.8397%" y="261" width="0.7094%" height="15" fill="rgb(236,150,49)" fg:x="3003" fg:w="22"/><text x="97.0897%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (22 samples, 0.71%)</title><rect x="96.8397%" y="245" width="0.7094%" height="15" fill="rgb(225,197,26)" fg:x="3003" fg:w="22"/><text x="97.0897%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="97.5169%" y="229" width="0.0322%" height="15" fill="rgb(214,17,42)" fg:x="3024" fg:w="1"/><text x="97.7669%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="97.5169%" y="213" width="0.0322%" height="15" fill="rgb(224,165,40)" fg:x="3024" fg:w="1"/><text x="97.7669%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="97.5169%" y="197" width="0.0322%" height="15" fill="rgb(246,100,4)" fg:x="3024" fg:w="1"/><text x="97.7669%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="97.5169%" y="181" width="0.0322%" height="15" fill="rgb(222,103,0)" fg:x="3024" fg:w="1"/><text x="97.7669%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="97.5169%" y="165" width="0.0322%" height="15" fill="rgb(227,189,26)" fg:x="3024" fg:w="1"/><text x="97.7669%" y="175.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="97.5169%" y="149" width="0.0322%" height="15" fill="rgb(214,202,17)" fg:x="3024" fg:w="1"/><text x="97.7669%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.03%)</title><rect x="97.5169%" y="133" width="0.0322%" height="15" fill="rgb(229,111,3)" fg:x="3024" fg:w="1"/><text x="97.7669%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (23 samples, 0.74%)</title><rect x="96.8397%" y="341" width="0.7417%" height="15" fill="rgb(229,172,15)" fg:x="3003" fg:w="23"/><text x="97.0897%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="97.5492%" y="325" width="0.0322%" height="15" fill="rgb(230,224,35)" fg:x="3025" fg:w="1"/><text x="97.7992%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::from_vec (1 samples, 0.03%)</title><rect x="97.5492%" y="309" width="0.0322%" height="15" fill="rgb(251,141,6)" fg:x="3025" fg:w="1"/><text x="97.7992%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::BitVec&lt;T,O&gt;::try_from_vec (1 samples, 0.03%)</title><rect x="97.5492%" y="293" width="0.0322%" height="15" fill="rgb(225,208,6)" fg:x="3025" fg:w="1"/><text x="97.7992%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::span (1 samples, 0.03%)</title><rect x="97.5492%" y="277" width="0.0322%" height="15" fill="rgb(246,181,16)" fg:x="3025" fg:w="1"/><text x="97.7992%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="97.5492%" y="261" width="0.0322%" height="15" fill="rgb(227,129,36)" fg:x="3025" fg:w="1"/><text x="97.7992%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search_internal (2,399 samples, 77.36%)</title><rect x="20.2515%" y="357" width="77.3621%" height="15" fill="rgb(248,117,24)" fg:x="628" fg:w="2399"/><text x="20.5015%" y="367.50">basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::s..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::api::_&lt;impl bitvec::slice::BitSlice&lt;T,O&gt;&gt;::split_at (1 samples, 0.03%)</title><rect x="97.5814%" y="341" width="0.0322%" height="15" fill="rgb(214,185,35)" fg:x="3026" fg:w="1"/><text x="97.8314%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="97.5814%" y="325" width="0.0322%" height="15" fill="rgb(236,150,34)" fg:x="3026" fg:w="1"/><text x="97.8314%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (1 samples, 0.03%)</title><rect x="97.5814%" y="309" width="0.0322%" height="15" fill="rgb(243,228,27)" fg:x="3026" fg:w="1"/><text x="97.8314%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::as_bitspan (1 samples, 0.03%)</title><rect x="97.5814%" y="293" width="0.0322%" height="15" fill="rgb(245,77,44)" fg:x="3026" fg:w="1"/><text x="97.8314%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::ptr::span::BitSpan&lt;wyz::comu::Const,T,O&gt;::from_bitslice_ptr (1 samples, 0.03%)</title><rect x="97.5814%" y="277" width="0.0322%" height="15" fill="rgb(235,214,42)" fg:x="3026" fg:w="1"/><text x="97.8314%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="98.2264%" y="213" width="0.0322%" height="15" fill="rgb(221,74,3)" fg:x="3046" fg:w="1"/><text x="98.4764%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.48%)</title><rect x="97.8717%" y="229" width="0.4837%" height="15" fill="rgb(206,121,29)" fg:x="3035" fg:w="15"/><text x="98.1217%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (3 samples, 0.10%)</title><rect x="98.2586%" y="213" width="0.0967%" height="15" fill="rgb(249,131,53)" fg:x="3047" fg:w="3"/><text x="98.5086%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="98.3554%" y="229" width="0.0322%" height="15" fill="rgb(236,170,29)" fg:x="3050" fg:w="1"/><text x="98.6054%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.06%)</title><rect x="98.3876%" y="229" width="0.0645%" height="15" fill="rgb(247,96,15)" fg:x="3051" fg:w="2"/><text x="98.6376%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (2 samples, 0.06%)</title><rect x="98.3876%" y="213" width="0.0645%" height="15" fill="rgb(211,210,7)" fg:x="3051" fg:w="2"/><text x="98.6376%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.68%)</title><rect x="97.8072%" y="245" width="0.6772%" height="15" fill="rgb(240,88,50)" fg:x="3033" fg:w="21"/><text x="98.0572%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (1 samples, 0.03%)</title><rect x="98.4521%" y="229" width="0.0322%" height="15" fill="rgb(209,229,26)" fg:x="3053" fg:w="1"/><text x="98.7021%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search_internal (2,489 samples, 80.26%)</title><rect x="18.2522%" y="373" width="80.2644%" height="15" fill="rgb(210,68,23)" fg:x="566" fg:w="2489"/><text x="18.5022%" y="383.50">basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (28 samples, 0.90%)</title><rect x="97.6137%" y="357" width="0.9029%" height="15" fill="rgb(229,180,13)" fg:x="3027" fg:w="28"/><text x="97.8637%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (28 samples, 0.90%)</title><rect x="97.6137%" y="341" width="0.9029%" height="15" fill="rgb(236,53,44)" fg:x="3027" fg:w="28"/><text x="97.8637%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 0.90%)</title><rect x="97.6137%" y="325" width="0.9029%" height="15" fill="rgb(244,214,29)" fg:x="3027" fg:w="28"/><text x="97.8637%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.90%)</title><rect x="97.6137%" y="309" width="0.9029%" height="15" fill="rgb(220,75,29)" fg:x="3027" fg:w="28"/><text x="97.8637%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 0.90%)</title><rect x="97.6137%" y="293" width="0.9029%" height="15" fill="rgb(214,183,37)" fg:x="3027" fg:w="28"/><text x="97.8637%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 0.90%)</title><rect x="97.6137%" y="277" width="0.9029%" height="15" fill="rgb(239,117,29)" fg:x="3027" fg:w="28"/><text x="97.8637%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (28 samples, 0.90%)</title><rect x="97.6137%" y="261" width="0.9029%" height="15" fill="rgb(237,171,35)" fg:x="3027" fg:w="28"/><text x="97.8637%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="98.4844%" y="245" width="0.0322%" height="15" fill="rgb(229,178,53)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="98.4844%" y="229" width="0.0322%" height="15" fill="rgb(210,102,19)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="98.4844%" y="213" width="0.0322%" height="15" fill="rgb(235,127,22)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="223.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="98.4844%" y="197" width="0.0322%" height="15" fill="rgb(244,31,31)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="207.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="98.4844%" y="181" width="0.0322%" height="15" fill="rgb(231,43,21)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="191.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="98.4844%" y="165" width="0.0322%" height="15" fill="rgb(217,131,35)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.03%)</title><rect x="98.4844%" y="149" width="0.0322%" height="15" fill="rgb(221,149,4)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="98.4844%" y="133" width="0.0322%" height="15" fill="rgb(232,170,28)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.03%)</title><rect x="98.4844%" y="117" width="0.0322%" height="15" fill="rgb(238,56,10)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="98.4844%" y="101" width="0.0322%" height="15" fill="rgb(235,196,14)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="98.4844%" y="85" width="0.0322%" height="15" fill="rgb(216,45,48)" fg:x="3054" fg:w="1"/><text x="98.7344%" y="95.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="98.6778%" y="261" width="0.0322%" height="15" fill="rgb(238,213,17)" fg:x="3060" fg:w="1"/><text x="98.9278%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="98.9358%" y="229" width="0.0322%" height="15" fill="rgb(212,13,2)" fg:x="3068" fg:w="1"/><text x="99.1858%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (16 samples, 0.52%)</title><rect x="98.5166%" y="373" width="0.5160%" height="15" fill="rgb(240,114,20)" fg:x="3055" fg:w="16"/><text x="98.7666%" y="383.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (16 samples, 0.52%)</title><rect x="98.5166%" y="357" width="0.5160%" height="15" fill="rgb(228,41,40)" fg:x="3055" fg:w="16"/><text x="98.7666%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.52%)</title><rect x="98.5166%" y="341" width="0.5160%" height="15" fill="rgb(244,132,35)" fg:x="3055" fg:w="16"/><text x="98.7666%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.52%)</title><rect x="98.5166%" y="325" width="0.5160%" height="15" fill="rgb(253,189,4)" fg:x="3055" fg:w="16"/><text x="98.7666%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.52%)</title><rect x="98.5166%" y="309" width="0.5160%" height="15" fill="rgb(224,37,19)" fg:x="3055" fg:w="16"/><text x="98.7666%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.52%)</title><rect x="98.5166%" y="293" width="0.5160%" height="15" fill="rgb(235,223,18)" fg:x="3055" fg:w="16"/><text x="98.7666%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (16 samples, 0.52%)</title><rect x="98.5166%" y="277" width="0.5160%" height="15" fill="rgb(235,163,25)" fg:x="3055" fg:w="16"/><text x="98.7666%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.32%)</title><rect x="98.7101%" y="261" width="0.3225%" height="15" fill="rgb(217,145,28)" fg:x="3061" fg:w="10"/><text x="98.9601%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.23%)</title><rect x="98.8068%" y="245" width="0.2257%" height="15" fill="rgb(223,223,32)" fg:x="3064" fg:w="7"/><text x="99.0568%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (2 samples, 0.06%)</title><rect x="98.9681%" y="229" width="0.0645%" height="15" fill="rgb(227,189,39)" fg:x="3069" fg:w="2"/><text x="99.2181%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search (2,506 samples, 80.81%)</title><rect x="18.2522%" y="405" width="80.8126%" height="15" fill="rgb(248,10,22)" fg:x="566" fg:w="2506"/><text x="18.5022%" y="415.50">basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search</text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search_internal (2,506 samples, 80.81%)</title><rect x="18.2522%" y="389" width="80.8126%" height="15" fill="rgb(248,46,39)" fg:x="566" fg:w="2506"/><text x="18.5022%" y="399.50">basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::collections::patricia::PatriciaTree::search..</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ptr::drop_in_place&lt;bitvec::vec::BitVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="99.0326%" y="373" width="0.0322%" height="15" fill="rgb(248,113,48)" fg:x="3071" fg:w="1"/><text x="99.2826%" y="383.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::ops::_&lt;impl core::ops::drop::Drop for bitvec::vec::BitVec&lt;T,O&gt;&gt;::drop (1 samples, 0.03%)</title><rect x="99.0326%" y="357" width="0.0322%" height="15" fill="rgb(245,16,25)" fg:x="3071" fg:w="1"/><text x="99.2826%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::cmp::PartialEq::ne (1 samples, 0.03%)</title><rect x="99.0326%" y="341" width="0.0322%" height="15" fill="rgb(249,152,16)" fg:x="3071" fg:w="1"/><text x="99.2826%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::ptr::span::BitSpan&lt;M1,T1,O&gt; as core::cmp::PartialEq&lt;bitvec::ptr::span::BitSpan&lt;M2,T2,O&gt;&gt;&gt;::eq (1 samples, 0.03%)</title><rect x="99.0326%" y="325" width="0.0322%" height="15" fill="rgb(250,16,1)" fg:x="3071" fg:w="1"/><text x="99.2826%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec::_{{closure}} (1 samples, 0.03%)</title><rect x="99.0648%" y="389" width="0.0322%" height="15" fill="rgb(249,138,3)" fg:x="3072" fg:w="1"/><text x="99.3148%" y="399.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::vec::api::_&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::capacity (1 samples, 0.03%)</title><rect x="99.0648%" y="373" width="0.0322%" height="15" fill="rgb(227,71,41)" fg:x="3072" fg:w="1"/><text x="99.3148%" y="383.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.10%)</title><rect x="99.3550%" y="261" width="0.0967%" height="15" fill="rgb(209,184,23)" fg:x="3081" fg:w="3"/><text x="99.6050%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::option::Option&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.06%)</title><rect x="99.3873%" y="245" width="0.0645%" height="15" fill="rgb(223,215,31)" fg:x="3082" fg:w="2"/><text x="99.6373%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="99.4518%" y="261" width="0.0322%" height="15" fill="rgb(210,146,28)" fg:x="3084" fg:w="1"/><text x="99.7018%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;bitvec::domain::Domain&lt;wyz::comu::Const,T,O&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.32%)</title><rect x="99.2906%" y="277" width="0.3225%" height="15" fill="rgb(209,183,41)" fg:x="3079" fg:w="10"/><text x="99.5406%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::slice::_&lt;impl [T]&gt;::split_first (4 samples, 0.13%)</title><rect x="99.4840%" y="261" width="0.1290%" height="15" fill="rgb(209,224,45)" fg:x="3085" fg:w="4"/><text x="99.7340%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::load_value (1 samples, 0.03%)</title><rect x="99.6130%" y="277" width="0.0322%" height="15" fill="rgb(224,209,51)" fg:x="3089" fg:w="1"/><text x="99.8630%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.16%)</title><rect x="99.6453%" y="277" width="0.1612%" height="15" fill="rgb(223,17,39)" fg:x="3090" fg:w="5"/><text x="99.8953%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnMut::call_mut (3 samples, 0.10%)</title><rect x="99.7098%" y="261" width="0.0967%" height="15" fill="rgb(234,204,37)" fg:x="3092" fg:w="3"/><text x="99.9598%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;u8 as bitvec::store::BitStore&gt;::new (2 samples, 0.06%)</title><rect x="99.7420%" y="245" width="0.0645%" height="15" fill="rgb(236,120,5)" fg:x="3093" fg:w="2"/><text x="99.9920%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.61%)</title><rect x="99.2261%" y="293" width="0.6127%" height="15" fill="rgb(248,97,27)" fg:x="3077" fg:w="19"/><text x="99.4761%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="99.8065%" y="277" width="0.0322%" height="15" fill="rgb(240,66,17)" fg:x="3095" fg:w="1"/><text x="100.0565%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.77%)</title><rect x="99.0971%" y="325" width="0.7739%" height="15" fill="rgb(210,79,3)" fg:x="3073" fg:w="24"/><text x="99.3471%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (24 samples, 0.77%)</title><rect x="99.0971%" y="309" width="0.7739%" height="15" fill="rgb(214,176,27)" fg:x="3073" fg:w="24"/><text x="99.3471%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="99.8388%" y="293" width="0.0322%" height="15" fill="rgb(235,185,3)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="99.8388%" y="277" width="0.0322%" height="15" fill="rgb(227,24,12)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="287.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="99.8388%" y="261" width="0.0322%" height="15" fill="rgb(252,169,48)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="271.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="99.8388%" y="245" width="0.0322%" height="15" fill="rgb(212,65,1)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="255.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="99.8388%" y="229" width="0.0322%" height="15" fill="rgb(242,39,24)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="239.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="99.8388%" y="213" width="0.0322%" height="15" fill="rgb(249,32,23)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.03%)</title><rect x="99.8388%" y="197" width="0.0322%" height="15" fill="rgb(251,195,23)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="99.8388%" y="181" width="0.0322%" height="15" fill="rgb(236,174,8)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="99.8388%" y="165" width="0.0322%" height="15" fill="rgb(220,197,8)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="99.8388%" y="149" width="0.0322%" height="15" fill="rgb(240,108,37)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="99.8388%" y="133" width="0.0322%" height="15" fill="rgb(232,176,24)" fg:x="3096" fg:w="1"/><text x="100.0888%" y="143.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (25 samples, 0.81%)</title><rect x="99.0971%" y="341" width="0.8062%" height="15" fill="rgb(243,35,29)" fg:x="3073" fg:w="25"/><text x="99.3471%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="99.8710%" y="325" width="0.0322%" height="15" fill="rgb(210,37,18)" fg:x="3097" fg:w="1"/><text x="100.1210%" y="335.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="99.8710%" y="309" width="0.0322%" height="15" fill="rgb(224,184,40)" fg:x="3097" fg:w="1"/><text x="100.1210%" y="319.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="99.8710%" y="293" width="0.0322%" height="15" fill="rgb(236,39,29)" fg:x="3097" fg:w="1"/><text x="100.1210%" y="303.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`bitvec::slice::BitSlice&lt;T,O&gt;::to_bitvec (27 samples, 0.87%)</title><rect x="99.0648%" y="405" width="0.8707%" height="15" fill="rgb(232,48,39)" fg:x="3072" fg:w="27"/><text x="99.3148%" y="415.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::iter::traits::iterator::Iterator::collect (26 samples, 0.84%)</title><rect x="99.0971%" y="389" width="0.8384%" height="15" fill="rgb(236,34,42)" fg:x="3073" fg:w="26"/><text x="99.3471%" y="399.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.84%)</title><rect x="99.0971%" y="373" width="0.8384%" height="15" fill="rgb(243,106,37)" fg:x="3073" fg:w="26"/><text x="99.3471%" y="383.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.84%)</title><rect x="99.0971%" y="357" width="0.8384%" height="15" fill="rgb(218,96,6)" fg:x="3073" fg:w="26"/><text x="99.3471%" y="367.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="99.9033%" y="341" width="0.0322%" height="15" fill="rgb(235,130,12)" fg:x="3098" fg:w="1"/><text x="100.1533%" y="351.50"></text></g><g><title>basic_algorithms_and_data_structures_in_rust`main (3,100 samples, 99.97%)</title><rect x="0.0000%" y="517" width="99.9678%" height="15" fill="rgb(231,95,0)" fg:x="0" fg:w="3100"/><text x="0.2500%" y="527.50">basic_algorithms_and_data_structures_in_rust`main</text></g><g><title>basic_algorithms_and_data_structures_in_rust`std::rt::lang_start (3,100 samples, 99.97%)</title><rect x="0.0000%" y="501" width="99.9678%" height="15" fill="rgb(228,12,23)" fg:x="0" fg:w="3100"/><text x="0.2500%" y="511.50">basic_algorithms_and_data_structures_in_rust`std::rt::lang_start</text></g><g><title>basic_algorithms_and_data_structures_in_rust`std::rt::lang_start_internal (3,100 samples, 99.97%)</title><rect x="0.0000%" y="485" width="99.9678%" height="15" fill="rgb(216,12,1)" fg:x="0" fg:w="3100"/><text x="0.2500%" y="495.50">basic_algorithms_and_data_structures_in_rust`std::rt::lang_start_internal</text></g><g><title>basic_algorithms_and_data_structures_in_rust`std::rt::lang_start::_{{closure}} (3,099 samples, 99.94%)</title><rect x="0.0322%" y="469" width="99.9355%" height="15" fill="rgb(219,59,3)" fg:x="1" fg:w="3099"/><text x="0.2822%" y="479.50">basic_algorithms_and_data_structures_in_rust`std::rt::lang_start::_{{closure}}</text></g><g><title>basic_algorithms_and_data_structures_in_rust`std::sys_common::backtrace::__rust_begin_short_backtrace (3,099 samples, 99.94%)</title><rect x="0.0322%" y="453" width="99.9355%" height="15" fill="rgb(215,208,46)" fg:x="1" fg:w="3099"/><text x="0.2822%" y="463.50">basic_algorithms_and_data_structures_in_rust`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once (3,099 samples, 99.94%)</title><rect x="0.0322%" y="437" width="99.9355%" height="15" fill="rgb(254,224,29)" fg:x="1" fg:w="3099"/><text x="0.2822%" y="447.50">basic_algorithms_and_data_structures_in_rust`core::ops::function::FnOnce::call_once</text></g><g><title>basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::main (3,099 samples, 99.94%)</title><rect x="0.0322%" y="421" width="99.9355%" height="15" fill="rgb(232,14,29)" fg:x="1" fg:w="3099"/><text x="0.2822%" y="431.50">basic_algorithms_and_data_structures_in_rust`basic_algorithms_and_data_structures_in_rust::main</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="99.9355%" y="405" width="0.0322%" height="15" fill="rgb(208,45,52)" fg:x="3099" fg:w="1"/><text x="100.1855%" y="415.50"></text></g><g><title>all (3,101 samples, 100%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(234,191,28)" fg:x="0" fg:w="3101"/><text x="0.2500%" y="559.50"></text></g><g><title>dyld`start (3,101 samples, 100.00%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(244,67,43)" fg:x="0" fg:w="3101"/><text x="0.2500%" y="543.50">dyld`start</text></g><g><title>libdyld.dylib`0x7ff8187890d3 (1 samples, 0.03%)</title><rect x="99.9678%" y="517" width="0.0322%" height="15" fill="rgb(236,189,24)" fg:x="3100" fg:w="1"/><text x="100.2178%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.03%)</title><rect x="99.9678%" y="501" width="0.0322%" height="15" fill="rgb(239,214,33)" fg:x="3100" fg:w="1"/><text x="100.2178%" y="511.50"></text></g></svg></svg>